bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.in.read(this.blockSize100k,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.in.read(this.blockSize100k,  this.bsLive);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.in.read(this.blockSize100k,  this.bsLive);	  this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
2	[BUG]  [BUGGY]  this.in.read(this.blockSize100k,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.in.read(this.blockSize100k,  blockSize);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.in.read(this.blockSize100k,  blockSize);	  this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
3	[BUG]  [BUGGY]  this.in.read(blockSize100k);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.in.read(blockSize100k);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.in.read(blockSize100k);	  this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
4	[BUG]  [BUGGY]  this.in.read(this.blockSize100k,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.in.read(this.blockSize100k,  this.bsBuff);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.in.read(this.blockSize100k,  this.bsBuff);	  this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
5	[BUG]  [BUGGY]  this.in.readFully(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.in.readFully(this.blockSize100k);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.in.readFully(this.blockSize100k);	  this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
6	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
10	[BUG]  [BUGGY]  if(blockSize100k!=  0)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(blockSize100k!=  0)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(blockSize100k!=  0)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
11	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][i]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][i]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
13	[BUG]  [BUGGY]  this.in.read(data[i][i]);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.in.read(data[i][i]);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.in.read(data[i][i]);	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][0]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][0]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][0]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
15	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[0][i]);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[0][i]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[0][i]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(data[i][i]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(data[i][i]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][0]);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][0]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(data[i][0]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
18	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRCCc;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRCCc;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedCombinedCRCCc;	  this.computedCombinedCRC    =    computedCombinedCRC;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRCc;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRCc;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedCombinedCRCc;	  this.computedCombinedCRC    =    computedCombinedCRC;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
21	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  true;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  true;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  true;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
22	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  true;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  true;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  true;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
24	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  decompressConcatenated  =  true;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  decompressConcatenated  =  true;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  decompressConcatenated  =  true;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
25	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC_crc;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC_crc;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedCombinedCRC_crc;	  this.computedCombinedCRC    =    null;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  this.computedCombinedCRC  =  new  char[blockSize100k];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  new  char[blockSize100k];  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  new  char[blockSize100k];	  this.computedCombinedCRC    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
27	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC[blockSize100k];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC[blockSize100k];  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedCombinedCRC[blockSize100k];	  this.computedCombinedCRC    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
28	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  null;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  null;	  this.computedCombinedCRC    -=    true;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read(),  blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read(),  blockSize);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read(),  blockSize);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read(),  this.bsLive);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read(),  this.bsLive);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read(),  this.bsLive);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  this.in.read());  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  this.in.read());	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read()  +  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read()  +  1);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read()  +  1);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read()  -  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read()  -  1);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read()  -  1);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
34	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedBlockCRC.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedBlockCRC.clone();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedBlockCRC.clone();	  this.computedCombinedCRC    =    storedCombinedCRC.clone();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
35	[BUG]  [BUGGY]  this.computedCombinedCRC  =  cachedCombinedCRC.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  cachedCombinedCRC.clone();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  cachedCombinedCRC.clone();	  this.computedCombinedCRC    =    storedCombinedCRC.clone();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
36	[BUG]  [BUGGY]  this.computedCombinedCRC  =  RAND_PART_C_STATE.clone();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  RAND_PART_C_STATE.clone();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  RAND_PART_C_STATE.clone();	  this.computedCombinedCRC    =    storedCombinedCRC.clone();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
37	[BUG]  [BUGGY]  this.computedCombinedCRC  =  crc.clone();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  crc.clone();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  crc.clone();	  this.computedCombinedCRC    =    storedCombinedCRC.clone();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
38	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC.clone(this.in.read());  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC.clone(this.in.read());  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedCombinedCRC.clone(this.in.read());	  this.computedCombinedCRC    =    storedCombinedCRC.clone();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
39	[BUG]  [BUGGY]  this.compressedCombinedCRC  =  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.compressedCombinedCRC  =  null;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.compressedCombinedCRC  =  null;	  this.compressedCombinedCRC    =    false;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  This.compressedCombinedCRC  =  true;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  This.compressedCombinedCRC  =  true;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	This.compressedCombinedCRC  =  true;	  this.compressedCombinedCRC    =    false;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  this.compressedCombinedCRC  = " ";  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.compressedCombinedCRC  = " ";  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.compressedCombinedCRC  = " ";	  this.compressedCombinedCRC    =    false;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.bsLive);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.bsLive);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.bsBuff);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.bsBuff);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.bsLive);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.bsLive);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.bsLive);  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.bsLive);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.bsLive);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.bsLive);	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.bsLive);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.bsLive);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
51	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsLive);  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.bsLive);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
52	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsBuff,  0,  this.bsLive);  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsBuff,  0,  this.bsLive);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsBuff,  0,  this.bsLive);  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.bsLive);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsBuff,  0,  this.bsLive);  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsBuff,  0,  this.bsLive);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.bsBuff,  0,  this.bsLive);  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.bsLive);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
54	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRCCC;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRCCC;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedCombinedCRCCC;	  this.computedCombinedCRC    =    RAND_PART_C_STATE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.read();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
56	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
57	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.length();  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.length();  ++i)  {  this.in.read();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.length();  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
59	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1;  i  <  this.in.read();  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1;  i  <  this.in.read();  ++i)  {  this.in.read();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  1;  i  <  this.in.read();  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
60	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  100;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  100;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  100;	  this.computedCombinedCRC    -=    9;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  this.blockSize100k;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  this.blockSize100k;	  this.computedCombinedCRC    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  blockSize100k  +  1;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  blockSize100k  +  1;	  this.computedCombinedCRC    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  this.computedCRC  -=  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCRC  -=  blockSize100k;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCRC  -=  blockSize100k;	  this.computedCombinedCRC    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  blockSize100k  +  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  blockSize100k  +  2;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  blockSize100k  +  2;	  this.computedCombinedCRC    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  this.bsBuff;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  this.bsBuff;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  this.bsBuff;	  this.computedCombinedCRC    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  blockSize100k,  this.bsLive;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  blockSize100k,  this.bsLive;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  blockSize100k,  this.bsLive;	  this.computedCombinedCRC    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
67	[BUG]  [BUGGY]  this.computedCombinedCRC  =  crc.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  crc.restrictByNotNullOrUndefined();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  crc.restrictByNotNullOrUndefined();	  this.computedCombinedCRC    =    storedCombinedCRC.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
68	[BUG]  [BUGGY]  this.computedCombinedCRC  =  RAND_PART_C_STATE.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  RAND_PART_C_STATE.restrictByNotNullOrUndefined();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  RAND_PART_C_STATE.restrictByNotNullOrUndefined();	  this.computedCombinedCRC    =    storedCombinedCRC.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
69	[BUG]  [BUGGY]  this.computedCombinedCRC  =  cachedCombinedCRC.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  cachedCombinedCRC.restrictByNotNullOrUndefined();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  cachedCombinedCRC.restrictByNotNullOrUndefined();	  this.computedCombinedCRC    =    storedCombinedCRC.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
70	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC.decompressByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC.decompressByNotNullOrUndefined();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedCombinedCRC.decompressByNotNullOrUndefined();	  this.computedCombinedCRC    =    storedCombinedCRC.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
71	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC.destrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedCombinedCRC.destrictByNotNullOrUndefined();  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedCombinedCRC.destrictByNotNullOrUndefined();	  this.computedCombinedCRC    =    storedCombinedCRC.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
72	[BUG]  [BUGGY]  this.computedCombinedCRC  =  storedBlockCRCC;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  storedBlockCRCC;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  storedBlockCRCC;	  this.computedCombinedCRC    =    bsBuff;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
73	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  blockSize100k,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  blockSize100k,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  blockSize100k,  this.in.read());  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.in,  0,  this.blockSize100k,  blockSize100k,  this.in.read());	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
78	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  1000;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  1000;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  1000;	  this.computedCombinedCRC    -=    10;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
80	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
82	[BUG]  [BUGGY]  this.in.read(temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.in.read(temp_charArray2d);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.in.read(temp_charArray2d);	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
83	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d,  blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d,  blockSize100k);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d,  blockSize100k);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
84	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read(temp_charArray2d);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read(temp_charArray2d);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read(temp_charArray2d);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsBuff);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsBuff);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  blockSize);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  blockSize);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  blockSize);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  0);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  0);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.bsLive);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.bsLive);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  1);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  1);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
91	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
93	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.close();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.close();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.close();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
94	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
95	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  cachedCombinedCRC;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  cachedCombinedCRC;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  cachedCombinedCRC;	  this.computedCombinedCRC    -=    storedCombinedCRC;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
96	[BUG]  [BUGGY]  this.computedCombinedCRC  -=  this.savedCombinedCRC;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  -=  this.savedCombinedCRC;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  -=  this.savedCombinedCRC;	  this.computedCombinedCRC    -=    storedCombinedCRC;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[i]);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[i]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[i]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d[i]);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d[i]);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d[i]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d[i]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d[i]);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
99	[BUG]  [BUGGY]  this.in.read(temp_charArray2d[i]);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.in.read(temp_charArray2d[i]);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.in.read(temp_charArray2d[i]);	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d[i]);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
100	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d[i]);  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d[i]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read(temp_charArray2d[i]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d[i]);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
101	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[0]);  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[0]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[0]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d[i]);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[0]);  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[0]);  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read(temp_charArray2d[0]);  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read(temp_charArray2d[i]);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
103	[BUG]  [BUGGY]  this.computedCombinedCRC  =  true,  storedBlockCRC;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  true,  storedBlockCRC;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  true,  storedBlockCRC;	  this.computedCombinedCRC    =    false,    storedBlockCRC;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
104	[BUG]  [BUGGY]  this.computedCombinedCRC  =  false,  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  false,  this.blockSize100k;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  false,  this.blockSize100k;	  this.computedCombinedCRC    =    false,    storedBlockCRC;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
105	[BUG]  [BUGGY]  this.computedCombinedCRC  =  false,  this.bsBuff;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  false,  this.bsBuff;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  false,  this.bsBuff;	  this.computedCombinedCRC    =    false,    storedBlockCRC;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  this.computedCombinedCRC  =  true,  storageBlockCRC;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  true,  storageBlockCRC;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  true,  storageBlockCRC;	  this.computedCombinedCRC    =    false,    storedBlockCRC;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
107	[BUG]  [BUGGY]  this.computedCombinedCRC  =  false,  this.bsLive;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  this.computedCombinedCRC  =  false,  this.bsLive;  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	this.computedCombinedCRC  =  false,  this.bsLive;	  this.computedCombinedCRC    =    false,    storedBlockCRC;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
109	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
111	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.in,  0,  blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
112	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    i++)    {    System.arraycopy(this.in,    0,    this.blockSize100k,    0,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  false;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  false;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  false;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
114	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  false;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  false;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  false;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
115	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  false;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  false;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  decompressConcatenated  =  false;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  false;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  false;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  decompressConcatenated  =  false;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
117	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  decompressConcatenated  =  false;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  decompressConcatenated  =  false;  }  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  decompressConcatenated  =  false;  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    decompressConcatenated    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsBuff,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsBuff,  this.blockSize100k);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsBuff,  this.blockSize100k);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsBuff,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
119	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  blockSize100k);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  blockSize100k);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  blockSize100k);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsBuff,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  this.blockSize100k);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.bsLive,  this.blockSize100k);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsBuff,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k);  [timeout]  [FE]                                    AssertionError      [CONTEXT]      }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;      [BUGGY]  System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k);  [BUGGY]        return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	253	253	1	replace	System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.bsBuff,    blockSize100k);    	non-compiled	[timeout]	38	None	replace
