bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  1);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  magic1);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.bsLive);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  temp_charArray2d);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  temp_charArray2d);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(this.charArray2d);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bits,  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  1);	  int    blockSize    =    this.in.read(this.bits);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  0);	  int    blockSize    =    this.in.read(this.bits);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.bsLive);	  int    blockSize    =    this.in.read(this.bits);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bits);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bits);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bits);	  int    blockSize    =    this.in.read(this.bits);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  Integer  blockSize  =  this.in.readInt();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.readInt();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read();  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic2);  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic2);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic2);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  1);	  int    blockSize    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  int  blockSize  =  this.in.readFully()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.readFully()  -  1;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readFully()  -  1;	  int    blockSize    =    this.in.readFully();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  int  blockSize  =  this.in.readUTF();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.readUTF();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readUTF();	  int    blockSize    =    this.in.readFully();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.readInt()  -  1;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt()  -  1;	  int    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  char  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  char  blockSize  =  this.in.readInt();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.readInt();	  int    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.readInt()  +  1;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt()  +  1;	  int    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsLive);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.computedCRC);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.buffer);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive);	  int    blockSize    =    this.in.read(this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedCombinedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedBlockCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  0);	  int    blockSize    =    this.in.read(this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
45	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  1);	  int    blockSize    =    this.in.read(this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
46	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)-  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)-  1;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff)-  1;	  int    blockSize    =    this.in.read()    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
47	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  Integer  blockSize  =  this.in.read();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read();	  int    blockSize    =    this.in.read()    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff);	  int    blockSize    =    this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  1);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bytes);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsLive  -  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive  -  1);	  int    blockSize    =    this.in.read(this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  -  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  -  1);	  int    blockSize    =    this.in.read()    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read());  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.in.read());	  int    blockSize    =    this.in.read()    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer)-  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer)-  1;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer)-  1;	  int    blockSize    =    this.in.read()    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
62	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  0);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  0);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
64	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  1);	  int    blockSize    =    this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  +  1);	  int    blockSize    =    this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0');  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0');  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  +  '0');	  int    blockSize    =    this.in.read(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(0);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(0);	  int    blockSize    =    this.in.readFully();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
68	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  -  1);	  int    blockSize    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  +  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  +  1);	  int    blockSize    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
70	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  0);	  int    blockSize    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
71	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  4);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  4);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  4);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes  -  1);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
73	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  3);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  3);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  3);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  -  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff  -  1);	  int    blockSize    =    this.in.read(this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  +  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff  +  1);	  int    blockSize    =    this.in.read(this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
76	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  4);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bits,  4);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  4);	  int    blockSize    =    this.in.read(this.bits);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blocks);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.blockSize);	  int    blockSize    =    this.in.read(this.bytes);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
81	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
82	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k);	  int    blockSize    =    this.in.read(this.buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
84	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  -  1);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  -  1);	  int    blockSize    =    this.in.read()    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
85	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)-  1;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize)-  1;	  int    blockSize    =    this.in.read()    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
86	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.size();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
87	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
88	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy();  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
90	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bits);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
91	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bits);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
92	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize);  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize);	  int    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
93	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt()  -  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }    [BUGGY]  int  blockSize  =  this.in.readInt()  -  2;  [BUGGY]    if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt()  -  2;	  int    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
