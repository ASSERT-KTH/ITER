bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.computedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
3	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.blockSize);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
4	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  this.bsLive);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
5	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.in.read());	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
6	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bsLive  -  1);	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
7	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  +  1);	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
8	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize,  this.in.read());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize,  this.in.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.blockSize,  this.in.read());	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
9	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize1,  this.in.read());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize1,  this.in.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize1,  this.in.read());	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
10	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  this.computedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  0);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff,  1);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  temp_charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  temp_charArray2d);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize100k);	  int    blockSize    =    this.in.read(this.bsBuff,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
16	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  0,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
17	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockBuff,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
18	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
19	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.savedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.savedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.savedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
20	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
21	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  0,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
22	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
23	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.bsLive);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
24	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.computedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
25	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
26	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.blockSize100k);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
27	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k,  this.bsBuff);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
28	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  -  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  -  this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  -  this.blockSize100k);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
29	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  2);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  2);	  int    blockSize    =    this.in.read(this.bytes,    4);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
30	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.bsLive);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0,  this.bsLive);	  int    blockSize    =    this.in.read(this.bytes,    4);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
31	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0,  this.blockSize);	  int    blockSize    =    this.in.read(this.bytes,    4);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
32	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  0,  1);	  int    blockSize    =    this.in.read(this.bsBuff,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
33	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  4);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  4);	  int    blockSize    =    this.in.read(this.bsBuff,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
34	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  2);	  int    blockSize    =    this.in.read(this.bsBuff,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
35	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  1,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  1,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  1,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
36	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  3);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  3);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  3);	  int    blockSize    =    this.in.read(this.bsBuff,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
37	[BUG]  [BUGGY]  String  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  String  blockSize  =  this.in.readInt();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	String  blockSize  =  this.in.readInt();	  char    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
38	[BUG]  [BUGGY]  BZip2  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  BZip2  blockSize  =  this.in.readInt();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	BZip2  blockSize  =  this.in.readInt();	  char    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
39	[BUG]  [BUGGY]  Char  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Char  blockSize  =  this.in.readInt();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Char  blockSize  =  this.in.readInt();	  char    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
40	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bytes.read());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bytes.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bytes.read());	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
41	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.c.read());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.c.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.c.read());	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
42	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.out.read());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.out.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.out.read());	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
43	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.hi);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.hi);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.hi);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
44	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.h);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.h);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.h);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
45	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  magic0);	  int    blockSize    =    this.in.read(this.bytes,    magic1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(magic0,  this.bytes);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(magic0,  this.bytes);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(magic0,  this.bytes);	  int    blockSize    =    this.in.read(this.bytes,    magic1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
47	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic1,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic1,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  magic1,  this.bsLive);	  int    blockSize    =    this.in.read(this.bytes,    magic1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic1,  this.magic0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic1,  this.magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  magic1,  this.magic0);	  int    blockSize    =    this.in.read(this.bytes,    magic1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  magic2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  magic2);	  int    blockSize    =    this.in.read(this.bytes,    magic1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.bsLive);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize100k    +    '0');    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
51	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  '0');  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  '0');  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  '0');	  int    blockSize    =    this.in.read(this.blockSize100k    +    '0');    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
52	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  *  '0');  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  *  '0');  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  *  '0');	  int    blockSize    =    this.in.read(this.blockSize100k    +    '0');    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
53	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.bsBuff);	  int    blockSize    =    this.in.read(this.blockSize100k    +    '0');    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
54	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.blockSize100k  +  '0');  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.blockSize100k  +  '0');  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.blockSize100k  +  '0');	  int    blockSize    =    this.in.read(this.blockSize100k    +    '0');    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
55	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  MISSING_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  MISSING_BLOCK_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  MISSING_BLOCK_STATE);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
56	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  MAX_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  MAX_BLOCK_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  MAX_BLOCK_STATE);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
57	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  0);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  0);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
58	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  RAND_PART_A_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  RAND_PART_A_STATE);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
59	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  RAND_PART_C_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  RAND_PART_C_STATE);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
60	[BUG]  [BUGGY]  int  blockSize  =  this.bsBuff.read(this.charArray2d,  this.in);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.bsBuff.read(this.charArray2d,  this.in);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.bsBuff.read(this.charArray2d,  this.in);	  int    blockSize    =    this.in.read(this.charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
61	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
62	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff);	  int    blockSize    =    this.in.read(this.charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
63	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.charArray2d);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.charArray2d);	  int    blockSize    =    this.in.read(this.charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
64	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff);	  int    blockSize    =    this.in.read(this.charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
65	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy.size();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
66	[BUG]  [BUGGY]  int  blockSize  =  this.in.size();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.size();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.size();	  int    blockSize    =    getAndMoveToFrontDecode_yy.size();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
67	[BUG]  [BUGGY]  int  blockSize  =  this.getAndMoveToFrontDecode_yy.size();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.getAndMoveToFrontDecode_yy.size();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.getAndMoveToFrontDecode_yy.size();	  int    blockSize    =    getAndMoveToFrontDecode_yy.size();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
68	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size()  +  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size()  +  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.size()  +  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy.size();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
69	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  2;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  2;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  2;	  int    blockSize    =    getAndMoveToFrontDecode_yy.size();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
70	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  4;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  4;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.size()  -  4;	  int    blockSize    =    getAndMoveToFrontDecode_yy.size();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
71	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
72	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCombinedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
73	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC,  0);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC,  0);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
74	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bits);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
75	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bytes);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bytes);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bytes);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bits);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
76	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bits);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
77	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedBlockCRC);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
78	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedBlockCRC);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
79	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedBlockCRC);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
80	[BUG]  [BUGGY]  int  blockSize  =  this.bsBuff.read(this.bsLive,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.bsBuff.read(this.bsLive,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.bsBuff.read(this.bsLive,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedBlockCRC);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
81	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockBuff,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedBlockCRC);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
82	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  1);	  int    blockSize    =    this.in.read(temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
83	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  0);	  int    blockSize    =    this.in.read(temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
84	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  magic1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  magic1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  magic1);	  int    blockSize    =    this.in.read(temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
86	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)/  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)/  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff)/  1;	  int    blockSize    =    this.in.read(this.bsBuff)-    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
87	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC)-  1;	  int    blockSize    =    this.in.read(this.bsBuff)-    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
88	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC)-  1;	  int    blockSize    =    this.in.read(this.bsBuff)-    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
89	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)-  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)-  2;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff)-  2;	  int    blockSize    =    this.in.read(this.bsBuff)-    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
90	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC)-  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC)-  1;	  int    blockSize    =    this.in.read(this.bsBuff)-    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
91	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  /  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  /  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  /  1);	  int    blockSize    =    this.in.read(this.blockSize    +    1);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
92	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.blockSize  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.blockSize  +  1);	  int    blockSize    =    this.in.read(this.blockSize    +    1);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
93	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  *  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  *  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  *  1);	  int    blockSize    =    this.in.read(this.blockSize    +    1);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
94	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic1);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
95	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.computedCombinedCRC);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
96	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic0);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
97	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic2);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  magic2);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
98	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.buffer);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
99	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.buffer);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
100	[BUG]  [BUGGY]  int  blockSize  =  this.buffer.read(this.bsBuff,  this.in);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.buffer.read(this.bsBuff,  this.in);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.buffer.read(this.bsBuff,  this.in);	  int    blockSize    =    this.in.read(this.bsBuff,    this.buffer);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
101	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  0);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  0);	  int    blockSize    =    this.in.read(this.bsBuff,    this.buffer);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
102	[BUG]  [BUGGY]  int  blockSize  =  this.buffer.read(this.bsBuff,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.buffer.read(this.bsBuff,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.buffer.read(this.bsBuff,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bsBuff,    this.buffer);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
103	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy(magic0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy(magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy(magic0);	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
104	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode();	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
105	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy()  -  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy()  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy()  -  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
106	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode(magic0);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode(magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode(magic0);	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
107	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy()  +  1;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy()  +  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy()  +  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
108	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_xy(magic0);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_xy(magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_xy(magic0);	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
109	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.computedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
110	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
111	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  0);	  int    blockSize    =    this.in.read(this.buffer,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
112	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
113	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  0,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
114	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
115	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bits,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
116	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.bits,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
117	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.blockSize100k);	  int    blockSize    =    this.in.read(this.bits,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
118	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  0);	  int    blockSize    =    this.in.read(this.bits,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
119	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bits,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
120	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bits,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
121	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.bsLive,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bits,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
122	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.bits);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.bits);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.bits);	  int    blockSize    =    this.in.read(this.bits,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
123	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.bsLive  -  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
124	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCombinedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCombinedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.computedCombinedCRC  -  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
125	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.blockSize  -  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
126	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.bytes  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.bytes  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0,  this.bytes  -  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
127	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.computedCRC  -  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
128	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.BlockCRC,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.BlockCRC,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.BlockCRC,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
129	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.blockSize100k);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
130	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0,  1);	  int    blockSize    =    this.in.read(this.bytes,    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
131	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  16);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  16);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  16);	  int    blockSize    =    this.in.read(this.bytes,    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
132	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  0,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bits,    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
133	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  0,  this.blockSize);	  int    blockSize    =    this.in.read(this.bits,    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
134	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  0,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bits,    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
135	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  0,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bits,    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
136	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  1);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
137	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  0);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
138	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
139	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  MAX_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  MAX_BLOCK_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  MAX_BLOCK_STATE);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
140	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
141	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  this.bsLive);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
142	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
143	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.bsBuff);	  int    blockSize    =    this.in.read(this.charArray2d,    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
144	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.bsLive);	  int    blockSize    =    this.in.read(this.charArray2d,    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
145	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  0,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  0,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  0,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
146	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
147	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  0,  this.blockSize);	  int    blockSize    =    this.in.read(this.charArray2d,    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
148	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.blockSize100k);	  int    blockSize    =    this.in.read(this.bytes,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
149	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bytes,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
150	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bytes,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
151	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.bsLive);	  int    blockSize    =    this.in.read(this.bytes,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
152	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.blockSize,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bytes,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
153	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  0,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  0,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    0);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
154	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  0);	  int    blockSize    =    this.in.read(this.bsBuff,    0);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
155	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  1,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  1,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  1,  0);	  int    blockSize    =    this.in.read(this.bsBuff,    0);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
156	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(MAX_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(MAX_BLOCK_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(MAX_BLOCK_STATE);	  int    blockSize    =    this.in.read(0);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
157	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive  +  1);	  int    blockSize    =    this.in.read(this.blockSize100k    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
158	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  *  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  *  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  *  1);	  int    blockSize    =    this.in.read(this.blockSize100k    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
159	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.blockSize100k  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.blockSize100k  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.blockSize100k  +  1);	  int    blockSize    =    this.in.read(this.blockSize100k    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
160	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  /  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  /  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  /  1);	  int    blockSize    =    this.in.read(this.blockSize100k    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
161	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
162	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1,  magic2);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1,  magic2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1,  magic2);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
163	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic2);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic2);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
164	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1,  magic2);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1,  magic2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1,  magic2);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
165	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1  -  magic2);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1  -  magic2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1  -  magic2);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
166	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt()  /  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt()  /  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt()  /  1;	  int    blockSize    =    this.in.readInt()    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
167	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize100k,  this.in.readInt()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize100k,  this.in.readInt()  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize100k,  this.in.readInt()  +  1);	  int    blockSize    =    this.in.readInt()    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
168	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt()  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt()  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt()  +  1);	  int    blockSize    =    this.in.readInt()    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
169	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  temp_charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  temp_charArray2d);	  int    blockSize    =    this.in.read(this.charArray2d,    temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
170	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.hash);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.hash);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.hash);	  int    blockSize    =    this.in.read(this.charArray2d,    temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
171	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.ioContext);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.ioContext);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.ioContext);	  int    blockSize    =    this.in.read(this.charArray2d,    temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
172	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.hi);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.hi);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.hi);	  int    blockSize    =    this.in.read(this.charArray2d,    temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
173	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  temp_charArray2d,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  temp_charArray2d,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  temp_charArray2d,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
174	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.computedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.bits,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
175	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
176	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.computedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
177	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.computedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.buffer,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
178	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
179	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
180	[BUG]  [BUGGY]  int  blockSize  =  this.bsBuff.read(this.bsBuff,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.bsBuff.read(this.bsBuff,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.bsBuff.read(this.bsBuff,  this.bsLive);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
181	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
182	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  MAX_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  MAX_BLOCK_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0,  MAX_BLOCK_STATE);	  int    blockSize    =    this.in.read(this.bytes,    MAX_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
183	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE,  0);	  int    blockSize    =    this.in.read(this.bytes,    MAX_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
184	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  MAX_BLOCK_STATE,  1);	  int    blockSize    =    this.in.read(this.bytes,    MAX_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
185	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  RAND_PART_A_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  RAND_PART_A_STATE);	  int    blockSize    =    this.in.read(this.bytes,    MAX_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
186	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  0,  1);	  int    blockSize    =    this.in.read(this.blockSize,    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
187	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  4);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  4);	  int    blockSize    =    this.in.read(this.blockSize,    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
188	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  2);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  2);	  int    blockSize    =    this.in.read(this.blockSize,    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
189	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  3);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  3);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  3);	  int    blockSize    =    this.in.read(this.blockSize,    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
190	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  10);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  10);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  10);	  int    blockSize    =    this.in.read(this.blockSize,    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
191	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bytes,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
192	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bytes,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
193	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  0,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  0,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bytes,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
194	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
195	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
196	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
197	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC,  0);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
198	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  0,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
199	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
200	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
201	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
202	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.bsLive);	  int    blockSize    =    this.in.read(this.buffer,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
203	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
204	[BUG]  [BUGGY]  int  blockSize  =  this.in.getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.getAndMoveToFrontDecode_yy;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.getAndMoveToFrontDecode_yy;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
205	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy  +  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
206	[BUG]  [BUGGY]  int  blockSize  =  this.getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.getAndMoveToFrontDecode_yy;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.getAndMoveToFrontDecode_yy;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
207	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy  -  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy  -  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
208	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)/  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)/  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize)/  1;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
209	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bsLive)-  1;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
210	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k)-  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k)-  1;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
211	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  magic1)-  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  magic1)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  magic1)-  1;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
212	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.blockSize)-  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.blockSize)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  0,  this.blockSize)-  1;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
213	[BUG]  [BUGGY]  int  blockSize  =  this.in.readFully()  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readFully()  /  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readFully()  /  1;	  int    blockSize    =    this.in.readFully()    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
214	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize100k);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
215	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize,  this.computedCombinedCRC);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
216	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize,  this.bsLive);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
217	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize,  1);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
218	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize,  this.computedCRC);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
219	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize  -  1);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
220	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.computedCRC);	  int    blockSize    =    this.in.read(this.buffer,    0,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
221	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.buffer,    0,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
222	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  0);	  int    blockSize    =    this.in.read(this.buffer,    0,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
223	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff  -  1);	  int    blockSize    =    this.in.read(this.buffer,    0,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
224	[BUG]  [BUGGY]  String  blockSize  =  this.in.read(this.charArray2d);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  String  blockSize  =  this.in.read(this.charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	String  blockSize  =  this.in.read(this.charArray2d);	  char    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
225	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(temp_charArray2d);	  char    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
226	[BUG]  [BUGGY]  BZip2  blockSize  =  this.in.read(this.charArray2d);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  BZip2  blockSize  =  this.in.read(this.charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	BZip2  blockSize  =  this.in.read(this.charArray2d);	  char    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
227	[BUG]  [BUGGY]  BZip2  blockSize  =  this.in.read(temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  BZip2  blockSize  =  this.in.read(temp_charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	BZip2  blockSize  =  this.in.read(temp_charArray2d);	  char    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
228	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.charArray2d);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.charArray2d);	  char    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
229	[BUG]  [BUGGY]  Block  blockSize  =  this.in.read(this.charArray2d);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Block  blockSize  =  this.in.read(this.charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Block  blockSize  =  this.in.read(this.charArray2d);	  char    blockSize    =    this.in.read(this.charArray2d);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
230	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode();	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
231	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_xy(magic0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_xy(magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_xy(magic0);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
232	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode(magic0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode(magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode(magic0);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
233	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy()  -  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy()  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy()  -  1;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
234	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_int();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_int();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_int();	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
235	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.bsBuff);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.bsBuff);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
236	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.blockSize);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
237	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(magic0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(magic0);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
238	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read()  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read()  -  1;	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
239	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.blockSize100k);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
240	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive  -  1);	  int    blockSize    =    this.in.read(this.blockSize100k    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
241	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  2);	  int    blockSize    =    this.in.read(this.blockSize100k    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
242	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize100k    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
243	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  4);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  4);	  int    blockSize    =    this.in.read(this.blockSize100k    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
244	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
245	[BUG]  [BUGGY]  int  blockSize  =  this.bsBuff.read(this.blockSize100k,  this.in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.bsBuff.read(this.blockSize100k,  this.in);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.bsBuff.read(this.blockSize100k,  this.in);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
246	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
247	[BUG]  [BUGGY]  int  blockSize  =  this.bsBuff.read(this.blockSize100k,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.bsBuff.read(this.blockSize100k,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.bsBuff.read(this.blockSize100k,  this.bsBuff);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
248	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
249	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  1);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
250	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  this.in.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  this.in.read());	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
251	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff100k  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff100k  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff100k  -  1);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
252	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  -  1,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  -  1,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff  -  1,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
253	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC  -  1);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
254	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC  -  1);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
255	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive  -  1);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
256	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
257	[BUG]  [BUGGY]  int  blockSize  =  this.compressedCRC.read(this.charArray2d,  this.in);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.compressedCRC.read(this.charArray2d,  this.in);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.compressedCRC.read(this.charArray2d,  this.in);	  int    blockSize    =    this.in.read(this.charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
258	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
259	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
260	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
261	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
262	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
263	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.bsBuff);	  int    blockSize    =    this.in.readInt()    -    2;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
264	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.bsLive);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.bsLive);	  int    blockSize    =    this.in.readInt()    -    2;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
265	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
266	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(temp_charArray2d,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
267	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
268	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.computedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
269	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bytes,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
270	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bytes,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
271	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bytes,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
272	[BUG]  [BUGGY]  int  blockSize  =  this.bsLive.read(this.bytes,  this.in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.bsLive.read(this.bytes,  this.in);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.bsLive.read(this.bytes,  this.in);	  int    blockSize    =    this.in.read(this.bytes,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
273	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bsLive  +  1);	  int    blockSize    =    this.in.read(this.bsBuff    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
274	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsBuff  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bsBuff  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bsBuff  +  1);	  int    blockSize    =    this.in.read(this.bsBuff    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
275	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff100k  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff100k  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff100k  +  1);	  int    blockSize    =    this.in.read(this.bsBuff    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
276	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  /  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  /  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff  /  1);	  int    blockSize    =    this.in.read(this.bsBuff    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
277	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedCombinedCRC  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedCombinedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.computedCombinedCRC  -  1);	  int    blockSize    =    this.in.read(this.bsLive    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
278	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.computedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.computedCRC  -  1);	  int    blockSize    =    this.in.read(this.bsLive    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
279	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.computedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.bytes,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
280	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.bytes,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
281	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  0,  this.bsLive);	  int    blockSize    =    this.in.read(this.blockSize,    0);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
282	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  0,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  0,  this.bsBuff);	  int    blockSize    =    this.in.read(this.blockSize,    0);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
283	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bytes,  0);	  int    blockSize    =    this.in.read(this.buffer,    this.bytes);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
284	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.computedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.bytes);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
285	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bytes,  1);	  int    blockSize    =    this.in.read(this.buffer,    this.bytes);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
286	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.buffer);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.buffer);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.buffer);	  int    blockSize    =    this.in.read(this.buffer,    this.bytes);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
287	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bytes);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bytes);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bytes);	  int    blockSize    =    this.in.read(this.buffer,    this.bytes);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
288	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.buffer,    this.bytes);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
289	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.c.read()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.c.read()  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.c.read()  -  1);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
290	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bytes.read()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.bytes.read()  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.bytes.read()  -  1);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
291	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  +  1);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
292	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt()  -  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.readInt()  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.readInt()  -  1;	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
293	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt(magic0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.readInt(magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.readInt(magic0);	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
294	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readUTF();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.readUTF();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.readUTF();	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
295	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt()  +  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.readInt()  +  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.readInt()  +  1;	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
296	[BUG]  [BUGGY]  int  blockSize  =  this.in.readUTF()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readUTF()  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readUTF()  -  1;	  int    blockSize    =    this.in.readUTF();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
297	[BUG]  [BUGGY]  int  blockSize  =  this.in.readUTF()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readUTF()  +  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readUTF()  +  1;	  int    blockSize    =    this.in.readUTF();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
298	[BUG]  [BUGGY]  int  blockSize  =  this.in.readUTF()  /  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readUTF()  /  2;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readUTF()  /  2;	  int    blockSize    =    this.in.readUTF();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
299	[BUG]  [BUGGY]  int  blockSize  =  this.in.read()  :  this.in.read();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read()  :  this.in.read();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read()  :  this.in.read();	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
300	[BUG]  [BUGGY]  int  blockSize  =  this.in.read()  :  isFirstStream.read();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read()  :  isFirstStream.read();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read()  :  isFirstStream.read();	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
301	[BUG]  [BUGGY]  int  blockSize  =  this.in.read()  :  isFirstStream;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read()  :  isFirstStream;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read()  :  isFirstStream;	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
302	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.buffer,    0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
303	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bsLive);	  int    blockSize    =    this.in.read(this.buffer,    0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
304	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.buffer,    0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
305	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_0;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_0;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_0;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
306	[BUG]  [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
307	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy  +  1;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
308	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy  -  1;  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy  -  1;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
309	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_1;  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_1;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
310	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_hi;  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_hi;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_hi;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
311	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  -  2);	  int    blockSize    =    this.in.read(this.blockSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
312	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.BlockCRC,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.BlockCRC,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.BlockCRC,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
313	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
314	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(temp_charArray2d,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
315	[BUG]  [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  char  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	char  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
316	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
317	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
318	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
319	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
320	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsLive,  0);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
321	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  2);	  int    blockSize    =    this.in.read(this.bits,    4);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
322	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  3);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  3);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  3);	  int    blockSize    =    this.in.read(this.bits,    4);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
323	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  16);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  16);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  16);	  int    blockSize    =    this.in.read(this.bits,    4);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
324	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  0,  this.bsLive);	  int    blockSize    =    this.in.read(this.bits,    4);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
325	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
326	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
327	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  1);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
328	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
329	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive,  0);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
330	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  -  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  -  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy.getBlockSize();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
331	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  +  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  +  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy.getBlockSize();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
332	[BUG]  [BUGGY]  int  blockSize  =  this.in.getBlockSize();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.getBlockSize();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.getBlockSize();	  int    blockSize    =    getAndMoveToFrontDecode_yy.getBlockSize();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
333	[BUG]  [BUGGY]  int  blockSize  =  this.getAndMoveToFrontDecode_yy.getBlockSize();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.getAndMoveToFrontDecode_yy.getBlockSize();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.getAndMoveToFrontDecode_yy.getBlockSize();	  int    blockSize    =    getAndMoveToFrontDecode_yy.getBlockSize();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
334	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  -  2;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  -  2;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.getBlockSize()  -  2;	  int    blockSize    =    getAndMoveToFrontDecode_yy.getBlockSize();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
335	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt()  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt()  -  1);	  int    blockSize    =    this.in.readInt()    -    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
336	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize100k  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize100k  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize100k  -  1);	  int    blockSize    =    this.in.readInt()    -    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
337	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  this.in.readInt()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  this.in.readInt()  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize,  this.in.readInt()  -  1);	  int    blockSize    =    this.in.readInt()    -    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
338	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.length  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.length  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.length  -  1);	  int    blockSize    =    this.in.readInt()    -    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
339	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsLive)-  1;	  int    blockSize    =    this.in.read(this.buffer)-    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
340	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer)/  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer)/  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer)/  1;	  int    blockSize    =    this.in.read(this.buffer)-    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
341	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff)-  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff)-  1;	  int    blockSize    =    this.in.read(this.buffer)-    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
342	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize)-  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize)-  1;	  int    blockSize    =    this.in.read(this.buffer)-    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
343	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.buffer)-  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.buffer)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.buffer)-  1;	  int    blockSize    =    this.in.read(this.buffer)-    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
344	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
345	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.blockSize,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
346	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bsBuff);	  int    blockSize    =    this.in.read(this.blockSize,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
347	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bsLive,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.blockSize,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
348	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC,  0);	  int    blockSize    =    this.in.read(this.bsBuff,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
349	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
350	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  0,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  0,  1);	  int    blockSize    =    this.in.read(this.bits,    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
351	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  1);	  int    blockSize    =    this.in.read(this.buffer,    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
352	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  2);	  int    blockSize    =    this.in.read(this.buffer,    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
353	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_HARD;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_HARD;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_HARD;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
354	[BUG]  [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
355	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.bsLive,  0);	  int    blockSize    =    this.in.read(this.bytes,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
356	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.bsLive  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.bsLive  +  1);	  int    blockSize    =    this.in.read(this.bytes,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
357	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  *  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  *  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff  *  1);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
358	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  -  2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  -  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff  -  2);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
359	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff  -  1  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff  -  1  +  1);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
360	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bitsBuff  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bitsBuff  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bitsBuff  -  1);	  int    blockSize    =    this.in.read(this.bsBuff    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
361	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.compressedCRC,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.compressedCRC,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.compressedCRC,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bsBuff,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
362	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.compressedCRC  -  1);	  int    blockSize    =    this.in.read(this.bsBuff,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
363	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockBuff,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
364	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  16);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  16);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  16);	  int    blockSize    =    this.in.read(this.bsBuff,    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
365	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bsLive  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bsLive  +  1);	  int    blockSize    =    this.in.read(this.blockSize,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
366	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize);	  int    blockSize    =    this.in.read(this.blockSize,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
367	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.magic0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.magic0);	  int    blockSize    =    this.in.read(this.bytes,    magic1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
368	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.compressedCRC,  temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.compressedCRC,  temp_charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.compressedCRC,  temp_charArray2d);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
369	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.temp_charArray2d,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.temp_charArray2d,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.temp_charArray2d,  this.compressedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
370	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC  -  1);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
371	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.compressedCRC,  0);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
372	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize  -  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize  -  2);	  int    blockSize    =    this.in.readInt()    -    2;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
373	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.bits);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.bits);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.bits);	  int    blockSize    =    this.in.readInt()    -    2;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
374	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_yy.length;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_yy.length;	  int    blockSize    =    getAndMoveToFrontDecode_yy.size();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
375	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsLive,  0);	  int    blockSize    =    this.in.read(this.buffer,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
376	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsLive  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsLive  -  1);	  int    blockSize    =    this.in.read(this.buffer,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
377	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  *  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  *  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  *  1);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
378	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  -  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  -  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.in.read()  -  2);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
379	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.readFully());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.readFully());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.in.readFully());	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
380	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  8);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  8);	  int    blockSize    =    this.in.read(this.bytes,    3);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
381	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  0);	  int    blockSize    =    this.in.read(this.buffer,    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
382	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  4);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  4);	  int    blockSize    =    this.in.read(this.buffer,    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
383	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  16);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  16);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  16);	  int    blockSize    =    this.in.read(this.buffer,    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
384	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize  +  1);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
385	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize,  0);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
386	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  4);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize,  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize,  4);	  int    blockSize    =    this.in.readInt(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
387	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_0;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_0;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
388	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_1;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
389	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  getAndMoveToFrontDecode_yy);	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
390	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.blockSize  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.blockSize  +  1);	  int    blockSize    =    this.in.read(this.bytes,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
391	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  -  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  -  2);	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
392	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  *  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  *  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.in.read()  *  1);	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
393	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.readFully());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.in.readFully());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.in.readFully());	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
394	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  4);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  4);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
395	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  3);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  3);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  3);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
396	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  2);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
397	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCombinedCRC  +  1);	  int    blockSize    =    this.in.read(this.bsBuff,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
398	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize)+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize)+  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize)+  1;	  int    blockSize    =    this.in.readInt()    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
399	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt(MAX_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.readInt(MAX_BLOCK_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.readInt(MAX_BLOCK_STATE);	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
400	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt(this.blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.readInt(this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.readInt(this.blockSize);	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
401	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt(0);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.readInt(0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.readInt(0);	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
402	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0  +  1);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
403	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.size)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.size)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.size)-  1;	  int    blockSize    =    this.in.read(this.buffer)-    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
404	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer)-  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer)-  2;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer)-  2;	  int    blockSize    =    this.in.read(this.buffer)-    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
405	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy.getBlockSize()  :  getAndMoveToFrontDecode_yy.getBlockSize();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy.getBlockSize()  :  getAndMoveToFrontDecode_yy.getBlockSize();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy.getBlockSize()  :  getAndMoveToFrontDecode_yy.getBlockSize();	  int    blockSize    =    getAndMoveToFrontDecode_yy.getBlockSize();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
406	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy.getBlockSize()  :  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy.getBlockSize()  :  getAndMoveToFrontDecode_yy;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy.getBlockSize()  :  getAndMoveToFrontDecode_yy;	  int    blockSize    =    getAndMoveToFrontDecode_yy.getBlockSize();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
407	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
408	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.compressedCRC  -  1);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
409	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)-  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)-  2;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize)-  2;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
410	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)-  1L;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)-  1L;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize)-  1L;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
411	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)-  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize)-  0;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize)-  0;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
412	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read(this.bsBuff):  this.in.read();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read(this.bsBuff):  this.in.read();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  this.in.read(this.bsBuff):  this.in.read();	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
413	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bsLive);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bsLive);	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
414	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bsBuff);	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
415	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bits);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bits);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.bits);	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
416	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  0,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  0,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  0,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
417	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes  *  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes  *  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
418	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes  -  2);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
419	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  4);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes  -  4);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
420	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  3);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  3);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes  -  3);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
421	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes  -  1  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes  -  1  +  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
422	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  storedBlockCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  storedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.computedCombinedCRC,  storedBlockCRC);	  int    blockSize    =    this.in.read(this.bits,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
423	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  4);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  4);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
424	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  1);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
425	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize)-  1;	  int    blockSize    =    this.in.readInt()    -    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
426	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.bsBuff,  this.in.readInt());	  int    blockSize    =    this.in.readInt()    -    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
427	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_int();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_int();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_int();	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
428	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  0;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  0;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  0;	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
429	[BUG]  [BUGGY]  Block  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Block  blockSize  =  this.in.readInt();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Block  blockSize  =  this.in.readInt();	  char    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
430	[BUG]  [BUGGY]  double  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  double  blockSize  =  this.in.readInt();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	double  blockSize  =  this.in.readInt();	  char    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
431	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize  -  1);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
432	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize  +  1);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
433	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize,  0);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
434	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff  +  1);	  int    blockSize    =    this.in.read(this.buffer,    0,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
435	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.cftab);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.cftab);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.cftab);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
436	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.hash);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.hash);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.hash);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
437	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedBlockCRC);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
438	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedBlockCRC);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
439	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.crc,  this.computedBlockCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.crc,  this.computedBlockCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.crc,  this.computedBlockCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedBlockCRC);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
440	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
441	[BUG]  [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy(magic0,  magic2):  getAndMoveToFrontDecode_yy(magic0);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy(magic0,  magic2):  getAndMoveToFrontDecode_yy(magic0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy(magic0,  magic2):  getAndMoveToFrontDecode_yy(magic0);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
442	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1  -  magic2,  magic2);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1  -  magic2,  magic2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic1  -  magic2,  magic2);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
443	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  +  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  +  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  +  2);	  int    blockSize    =    this.in.read(this.blockSize    +    1);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
444	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bits);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
445	[BUG]  [BUGGY]  int  blockSize  =  this.in.readBytes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readBytes();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readBytes();	  int    blockSize    =    this.in.readUTF();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
446	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  1  +  1);	  int    blockSize    =    this.in.read(this.blockSize100k    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
447	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  3);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  3);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  3);	  int    blockSize    =    this.in.read(this.blockSize100k    -    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
448	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  +  2);	  int    blockSize    =    this.in.read(this.blockSize100k    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
449	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  4);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  +  4);	  int    blockSize    =    this.in.read(this.blockSize100k    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
450	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive  +  1);	  int    blockSize    =    this.in.read(this.bsLive    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
451	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive  *  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive  *  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive  *  1);	  int    blockSize    =    this.in.read(this.bsLive    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
452	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff  -  1);	  int    blockSize    =    this.in.read(this.buffer,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
453	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff  +  1);	  int    blockSize    =    this.in.read(this.buffer,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
454	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  1);	  int    blockSize    =    this.in.read(this.buffer,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
455	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  12);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  12);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  12);	  int    blockSize    =    this.in.read(this.bits,    4);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
456	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.byteArray2d,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.byteArray2d,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.byteArray2d,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
457	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(tempLens,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(tempLens,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(tempLens,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
458	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff  -  1);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
459	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsBuff  +  1);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
460	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
461	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC  -  1);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
462	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.computedCombinedCRC  +  1);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
463	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.temp_charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.temp_charArray2d);	  int    blockSize    =    this.in.read(temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
464	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.temp_charArray2d,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.temp_charArray2d,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.temp_charArray2d,  0);	  int    blockSize    =    this.in.read(temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
465	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  4);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  4);	  int    blockSize    =    this.in.read(temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
466	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.bits,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
467	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  16);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  16);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  16);	  int    blockSize    =    this.in.read(this.blockSize,    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
468	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.buffer,  1);	  int    blockSize    =    this.in.read(this.bsBuff,    this.buffer);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
469	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.buffer,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.buffer,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.buffer,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bsBuff,    this.buffer);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
470	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.bsLive  -  1);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
471	[BUG]  [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy(this.in):  getAndMoveToFrontDecode_yy(this.in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy(this.in):  getAndMoveToFrontDecode_yy(this.in);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy(this.in):  getAndMoveToFrontDecode_yy(this.in);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
472	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_xy(this.in);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_xy(this.in);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_xy(this.in);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
473	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  0);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
474	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.bsLive);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
475	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC  -  1);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
476	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCombinedCRC  +  1);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
477	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff  -  1);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
478	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  -  1,  this.bsBuff);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
479	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.bsBuff  +  1);	  int    blockSize    =    this.in.read(this.blockSize100k,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
480	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0')+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0')+  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  +  '0')+  1;	  int    blockSize    =    this.in.read(this.blockSize100k    +    '0');    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
481	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.hashCode);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.hashCode);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.hashCode);	  int    blockSize    =    this.in.read(this.charArray2d,    temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
482	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.ascii2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(temp_charArray2d,  this.ascii2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(temp_charArray2d,  this.ascii2);	  int    blockSize    =    this.in.read(this.charArray2d,    temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
483	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC  -  1);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
484	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(tempLens,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(tempLens,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(tempLens,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
485	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  RAND_PART_C_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  RAND_PART_C_STATE);	  int    blockSize    =    this.in.read(this.bytes,    MAX_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
486	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.bsLive  -  1);	  int    blockSize    =    this.in.read(this.bits,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
487	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits,  this.bsLive,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits,  this.bsLive,  0);	  int    blockSize    =    this.in.read(this.bits,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
488	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  4);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  -  4);	  int    blockSize    =    this.in.read(this.blockSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
489	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  1  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  -  1  +  1);	  int    blockSize    =    this.in.read(this.blockSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
490	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_0();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_0();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_0();	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
491	[BUG]  [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_int()  :  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_int()  :  getAndMoveToFrontDecode_yy();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_int()  :  getAndMoveToFrontDecode_yy();	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
492	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_peek();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_peek();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_peek();	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
493	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.bits);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.bits);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.bits);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
494	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.bytes);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.bytes);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.bytes);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
495	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  -  1);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
496	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  +  1);	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
497	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  +  '0');  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  +  '0');  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.blockSize100k  +  '0');	  int    blockSize    =    this.in.read(this.buffer,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
498	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.computedCRC  +  1);	  int    blockSize    =    this.in.read(this.bsBuff    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
499	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.byteArray2d,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.byteArray2d,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.byteArray2d,  this.bsBuff);	  int    blockSize    =    this.in.read(this.charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
500	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff,  0);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.bsBuff,  0);	  int    blockSize    =    this.in.read(this.charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
501	[BUG]  [BUGGY]  int  blockSize  =  this.in.readFully()  *  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readFully()  *  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readFully()  *  1;	  int    blockSize    =    this.in.readFully()    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
502	[BUG]  [BUGGY]  int  blockSize  =  this.in.readFully()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readFully()  +  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readFully()  +  1;	  int    blockSize    =    this.in.readFully()    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
503	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)-  0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)-  0;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff)-  0;	  int    blockSize    =    this.in.read(this.bsBuff)-    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
504	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)-  1L;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff)-  1L;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff)-  1L;	  int    blockSize    =    this.in.read(this.bsBuff)-    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
505	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive  -  1,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive  -  1,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive  -  1,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsLive    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
506	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_BLOCK_STATE;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_BLOCK_STATE;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
507	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_STATE;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_STATE;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_STATE;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
508	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_HIDE;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_HIDE;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_HIDE;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
509	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_BLOCK;  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_BLOCK;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_BLOCK;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
510	[BUG]  [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  0;  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  0;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  0;	  Integer    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
511	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.bsBuff,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.buffer,    0,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
512	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockBuff,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
513	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.temp_charArray2d,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.temp_charArray2d,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.temp_charArray2d,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
514	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.blockSize);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
515	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(this.in,  this.compressedCRC);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(this.in);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
516	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.savedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  0,  this.savedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  0,  this.savedCRC);	  int    blockSize    =    this.in.read(this.buffer,    0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
517	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  1);	  int    blockSize    =    this.in.read(this.charArray2d,    0);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
518	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize1,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize1,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize1,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
519	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bytes,  this.bsLive);	  int    blockSize    =    this.in.read(this.buffer,    this.bytes);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
520	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.bytes);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.bytes);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.bytes);	  int    blockSize    =    this.in.read(this.bytes,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
521	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize1,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize1,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize1,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsLive,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
522	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedCRC)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.computedCRC)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.computedCRC)-  1;	  int    blockSize    =    this.in.read(this.buffer)-    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
523	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  +  '0',  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize100k    +    '0');    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
524	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  /  '0');  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k  /  '0');  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k  /  '0');	  int    blockSize    =    this.in.read(this.blockSize100k    +    '0');    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
525	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  1,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  1,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  -  1,  this.computedCRC);	  int    blockSize    =    this.in.read(this.blockSize,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
526	[BUG]  [BUGGY]  int  blockSize  =  this.in.readBlock();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readBlock();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readBlock();	  int    blockSize    =    this.in.readUTF();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
527	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_XYY();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_XYY();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_XYY();	  Integer    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
528	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  10);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  10);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  10);	  int    blockSize    =    this.in.read(this.bytes,    3);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
529	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.computedCombinedCRC  -  1);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCombinedCRC);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
530	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_instance();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_instance();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_instance();	  int    blockSize    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
531	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  this.computedCRC);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
532	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this,  cftab);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this,  cftab);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this,  cftab);	  int    blockSize    =    this.in.read(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
533	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.in.read());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockBuff,  this.in.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockBuff,  this.in.read());	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
534	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.in.read()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k,  this.in.read()  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize100k,  this.in.read()  -  1);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
535	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  temp_charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  temp_charArray2d);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
536	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  32);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bytes,  32);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bytes,  32);	  int    blockSize    =    this.in.read(this.bytes,    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
537	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bytes);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.bytes);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.bytes);	  int    blockSize    =    this.in.read(this.bytes,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
538	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  this.blockSize);	  int    blockSize    =    this.in.read(this.bytes,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
539	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read(),  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.in.read(),  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.in.read(),  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
540	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.buffer);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.buffer);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.buffer);	  int    blockSize    =    this.in.read(this.bsBuff,    this.buffer);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
541	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.byteArray2d,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.byteArray2d,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.byteArray2d,  this.computedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
542	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(MAX_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(MAX_BLOCK_STATE);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(MAX_BLOCK_STATE);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
543	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.buffer);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.buffer);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.buffer);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
544	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.blockBuffer);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  this.in.read(this.blockBuffer);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  this.in.read(this.blockBuffer);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
545	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.computedCombinedCRC,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.computedCombinedCRC,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.computedCombinedCRC,  this.compressedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
546	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.computedCRC,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.computedCRC,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.computedCRC,  this.compressedCRC);	  int    blockSize    =    this.in.read(temp_charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
547	[BUG]  [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  getAndMoveToFrontDecode_BLOCK_STATE;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  getAndMoveToFrontDecode_BLOCK_STATE;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
548	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  START_BLOCK_STATE;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  START_BLOCK_STATE;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
549	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  1;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
550	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  0;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  0;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  0;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
551	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  RAND_PART_A_STATE;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  getAndMoveToFrontDecode_yy  :  RAND_PART_A_STATE;	  int    blockSize    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
552	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.block,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.block,  this.computedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.block,  this.computedCRC);	  int    blockSize    =    this.in.read(this.bsBuff,    this.computedCRC);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
553	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks  -  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
554	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bits  -  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bits  -  1);	  int    blockSize    =    this.in.read(this.bytes    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
555	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC)-  1;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize,  this.computedCRC)-  1;	  int    blockSize    =    this.in.read(this.blockSize)-    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
556	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  1,  this.in.read());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  1,  this.in.read());  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  -  1,  this.in.read());	  int    blockSize    =    this.in.read(this.blockSize,    this.in.read()    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
557	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  3);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize  -  3);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blockSize  -  3);	  int    blockSize    =    this.in.read(this.blockSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
558	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.blockSize);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.buffer,  this.bsBuff,  this.blockSize);	  int    blockSize    =    this.in.read(this.buffer,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
559	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  cftab);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  cftab);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  cftab);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
560	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  4);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  4);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  4);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
561	[BUG]  [BUGGY]  int  blockSize  =  this.in.read()?  this.in.read()  :  this.in.read();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read()?  this.in.read()  :  this.in.read();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read()?  this.in.read()  :  this.in.read();	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
562	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read(this.blockSize):  this.in.read();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read(this.blockSize):  this.in.read();  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  this.in.read(this.blockSize):  this.in.read();	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
563	[BUG]  [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.blockSize100k);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  isFirstStream?  this.in.read()  :  this.in.read(this.blockSize100k);	  int    blockSize    =    isFirstStream?    this.in.read()    :    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
564	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.bits);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.bits);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  this.bits);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bits);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
565	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.bsLive);	  int    blockSize    =    this.in.read(this.charArray2d,    this.bsBuff);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
566	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.compressedCRC);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.blocks,  this.compressedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.blocks,  this.compressedCRC);	  int    blockSize    =    this.in.read(this.blocks);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
567	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize  +  1);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsBuff,  this.blockSize  +  1);	  int    blockSize    =    this.in.read(this.bsBuff    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
568	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC,  this.computedCombinedCRC);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC,  this.computedCombinedCRC);	  int    blockSize    =    this.in.read(this.charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
569	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.compressedCRC,  this.charArray2d);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.compressedCRC,  this.charArray2d);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.compressedCRC,  this.charArray2d);	  int    blockSize    =    this.in.read(this.charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
570	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC,  this.bsLive);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.charArray2d,  this.compressedCRC,  this.bsLive);	  int    blockSize    =    this.in.read(this.charArray2d,    this.compressedCRC);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
571	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.read(this.bsLive,  this.bsBuff);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.read(this.bsLive,  this.bsBuff);	  int    blockSize    =    this.in.read(this.bsBuff,    this.bsLive);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
572	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize)-  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  int  blockSize  =  this.in.readInt(this.blockSize)-  2;  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	int  blockSize  =  this.in.readInt(this.blockSize)-  2;	  int    blockSize    =    this.in.readInt()    -    2;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
573	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  this.in,  magic2);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  this.in,  magic2);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  this.in,  magic2);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
574	[BUG]  [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1.length);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      }  int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }      [BUGGY]  Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1.length);  [BUGGY]      if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	245	245	1	replace	Integer  blockSize  =  getAndMoveToFrontDecode_yy(magic0,  magic1.length);	  Integer    blockSize    =    getAndMoveToFrontDecode_yy(magic0,    magic2);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
