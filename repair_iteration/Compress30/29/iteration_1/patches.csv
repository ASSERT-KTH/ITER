bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  1  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  0)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  0)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  1)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  <  1)?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  1)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  '0';  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  blockSize100k  -  '0';  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  '0';	  this.bsLive    =    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  +  '0';  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  blockSize100k  +  '0';  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  +  '0';	  this.bsLive    =    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  blockSize100k  +  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  +  1;	  this.bsLive    =    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  blockSize100k  -  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  1;	  this.bsLive    =    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  '1';  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  blockSize100k  -  '1';  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  '1';	  this.bsLive    =    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  '9';  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  blockSize100k  -  '9';  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  '9';	  this.bsLive    =    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  1  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  0)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  0  :  blockSize100k  +  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  this.bsLive  =  false;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  false;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  false;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0';  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.blockSize100k  =  blockSize  -  '0';  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.blockSize100k  =  blockSize  -  '0';	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '9')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  <  '9')?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '9')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  1  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '9')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >=  '9')?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '9')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '9')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  ==  '9')?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '9')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  1  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '0')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '0')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  this.bsLive  -=  4;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  -=  4;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  4;	  this.bsLive    =    4;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  this.bsLive  -=  2;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  -=  2;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  2;	  this.bsLive    =    2;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  -=  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k;	  this.bsLive    -=    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  this.bsLive  -=  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  -=  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  1;	  this.bsLive    -=    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  this.bsLive  -=  10;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  -=  10;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  10;	  this.bsLive    -=    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  this.bsLive  -=  100;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  -=  100;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  100;	  this.bsLive    -=    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  this.bsLive  -=  9;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  -=  9;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  9;	  this.bsLive    -=    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  this.bsLive  =  BlockSize100k;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  BlockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  BlockSize100k;	  this.bsLive    =    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  +  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  +  '1';  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  blockSize100k  +  '1';  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  +  '1';	  this.bsLive    =    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  0  :  blockSize100k  +  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
60	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  4;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
62	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  0;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  4;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
65	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  0  :  blockSize100k  +  1;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  = "BZip2 ".equals(this.blockSize100k);  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(this.blockSize100k);	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
67	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy);  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy);	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  true;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  true;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  true;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(this.blockSize100k));  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  = "BZip2 ".equals(this.blockSize100k));  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(this.blockSize100k));	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
70	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(this.blockSize100k)?  true  :  false;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  = "BZip2 ".equals(this.blockSize100k)?  true  :  false;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(this.blockSize100k)?  true  :  false;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k);  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  blockSize100k);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  blockSize100k);  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  blockSize100k);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0);  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0);  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0);  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
77	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  1)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =(blockSize100k  >  1)?  0  :  blockSize100k;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  1)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  this.bsLive  =  null;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  =  null;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  null;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
79	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ";  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  = "BZip2 ";  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ";	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  this.bsLive  :  false;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  :  false;  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  :  false;	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  this.bsLive  = " ";  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  = " ";  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = " ";	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  this.bsLive  = "Bzip2 ";  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.bsLive  = "Bzip2 ";  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "Bzip2 ";	  this.bsLive    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
83	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  this.in.read();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  this.in.read();  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
87	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
88	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]    :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';    [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]    this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
