bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.bsLive  &=  BZip2Compressor.DEFAULT;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  &=  BZip2Compressor.DEFAULT;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  &=  BZip2Compressor.DEFAULT;	  this.bsLive    |=    BZip2Compressor.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  this.bsLive  |=  blockSize100k;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  blockSize100k;	  this.bsLive    |=    BZip2Compressor.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  this.bsLive  -=  BZip2Compressor.DEFAULT;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  BZip2Compressor.DEFAULT;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  BZip2Compressor.DEFAULT;	  this.bsLive    |=    BZip2Compressor.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT  +  1;	  this.bsLive    |=    BZip2Compressor.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]  this.bsLive  |=  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  this.blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  this.blockSize100k;	  this.bsLive    |=    BZip2Compressor.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT  &&  blockSize100k  >  0;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT  &&  blockSize100k  >  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT  &&  blockSize100k  >  0;	  this.bsLive    |=    BZip2Compressor.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    4;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
8	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  10;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  10;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  10;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    4;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
9	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  2;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  2;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    4;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
10	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  8;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  8;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  8;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    4;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
12	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
15	[BUG]  [BUGGY]  this.bsLive  =  new  char[blockSize100k];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  new  char[blockSize100k];  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  new  char[blockSize100k];	  this.bsLive    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
16	[BUG]  [BUGGY]  this.bsLive  =  new  char[this.blockSize100k];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  new  char[this.blockSize100k];  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  new  char[this.blockSize100k];	  this.bsLive    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
17	[BUG]  [BUGGY]  this.bsLive  =  new  byte[blockSize100k];  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  new  byte[blockSize100k];  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  new  byte[blockSize100k];	  this.bsLive    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
18	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '9')?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '9')?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '9')?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
19	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  1  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  1  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  1  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
20	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '9')?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '9')?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '9')?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
21	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '9')?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '9')?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '9')?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
22	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  0  :  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  0  :  this.blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  0  :  this.blockSize100k;	  this.bsLive    =(this.blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  0  :  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  0  :  this.blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  0)?  0  :  this.blockSize100k;	  this.bsLive    =(this.blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >  0)?  0  :  blockSize100k;	  this.bsLive    =(this.blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  0)?  1  :  blockSize100k;	  this.bsLive    =(this.blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  1  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  1  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  1  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    0)?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  0)?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    0)?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  0)?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    0)?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    ==    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
30	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  ==  '1')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  ==  '1')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  ==  '1')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    ==    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '1')?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    ==    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
32	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    <    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
33	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  2;	  this.bsLive    =(blockSize100k    <    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
34	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  10;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  10;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  10;	  this.bsLive    =(blockSize100k    <    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
35	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '9')?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '9')?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '9')?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '9')?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
36	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '9')?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '9')?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '9')?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '9')?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
37	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '9')?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '9')?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '9')?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '9')?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
38	[BUG]  [BUGGY]  this.bsLive  =  blockSize  -  '9';  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize  -  '9';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize  -  '9';	  this.bsLive    =    blockSize100k    -    '9';    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  '9'  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  -  '9'  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  '9'  +  1;	  this.bsLive    =    blockSize100k    -    '9';    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  /  '9';  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  /  '9';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  /  '9';	  this.bsLive    =    blockSize100k    -    '9';    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >>  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >>  0)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >>  0)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
42	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k!=  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k!=  0)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k!=  0)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
43	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >=  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  >=  0)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >=  0)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
45	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    <    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
46	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  '0')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  <  '0')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  '0')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
47	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  /  '1';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  /  '1';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  /  '1';	  this.bsLive    =    blockSize100k    +    '1';    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
48	[BUG]  [BUGGY]  this.bsLive  =  bsBuff  +  '1';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsBuff  +  '1';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsBuff  +  '1';	  this.bsLive    =    blockSize100k    +    '1';    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
49	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  +  '1';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  +  '1';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  +  '1';	  this.bsLive    =    blockSize100k    +    '1';    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
50	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 ".equals(this.getAndMoveToFrontDecode_yy);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 ".equals(this.getAndMoveToFrontDecode_yy);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 ".equals(this.getAndMoveToFrontDecode_yy);	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
51	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 "  +  getAndMoveToFrontDecode_yy);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 "  +  getAndMoveToFrontDecode_yy);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 "  +  getAndMoveToFrontDecode_yy);	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
52	[BUG]  [BUGGY]  this.bsLive  =  getAndMoveToFrontDecode_yy.equals(getAndMoveToFrontDecode_yy);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  getAndMoveToFrontDecode_yy.equals(getAndMoveToFrontDecode_yy);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  getAndMoveToFrontDecode_yy.equals(getAndMoveToFrontDecode_yy);	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
53	[BUG]  [BUGGY]  this.bsLive  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  getAndMoveToFrontDecode_yy;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  getAndMoveToFrontDecode_yy;	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
54	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 "  +  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 "  +  getAndMoveToFrontDecode_yy;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 "  +  getAndMoveToFrontDecode_yy;	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
55	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
56	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC  =  0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC  =  0;  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC  =  0;  }	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
57	[BUG]  [BUGGY]  if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC  =  0;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC  =  0;  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC  =  0;  }	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
58	[BUG]  [BUGGY]  if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
59	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
60	[BUG]  [BUGGY]  if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
61	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  1)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  1)?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  1)?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    1)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
62	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  1)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  <  1)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  1)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    1)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
63	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  1)?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  1)?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  1)?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    <    1)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  2)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  2)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  2)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    1)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
65	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  this.blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  this.blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  this.blockSize100k  :  0;	  this.bsLive    =(this.blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
66	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  this.blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  this.blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  this.blockSize100k  :  0;	  this.bsLive    =(this.blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
67	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  0)?  blockSize100k  :  0;	  this.bsLive    =(this.blockSize100k    >    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
68	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '0')?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    ==    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
69	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  ==  '0')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  ==  '0')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  ==  '0')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    ==    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
70	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '0')?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    ==    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
71	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
73	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
74	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
75	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    ==    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
76	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  ==  '0')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  ==  '0')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  ==  '0')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    ==    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
77	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    ==    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
78	[BUG]  [BUGGY]  this.bsLive  -=  5;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  5;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  5;	  this.bsLive    -=    4;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
79	[BUG]  [BUGGY]  this.bsLive  :  true;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  :  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  :  true;	  this.bsLive    :    false;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
80	[BUG]  [BUGGY]  this.bsBuff  :  false;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsBuff  :  false;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsBuff  :  false;	  this.bsLive    :    false;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
81	[BUG]  [BUGGY]  this.bsLive  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  :  null;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  :  null;	  this.bsLive    :    false;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
82	[BUG]  [BUGGY]  this.blockSize100k  :  false;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.blockSize100k  :  false;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.blockSize100k  :  false;	  this.bsLive    :    false;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
83	[BUG]  [BUGGY]  bsLive  :  true;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  bsLive  :  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	bsLive  :  true;	  this.bsLive    :    false;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
84	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >>  '9')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >>  '9')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >>  '9')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
85	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k!=  '9')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k!=  '9')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k!=  '9')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
86	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  1)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  1)?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  1)?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    1)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
87	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  1)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  1)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  1)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    1)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
88	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  1)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  1)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  1)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    1)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  -  1);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  -  1);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  +  1);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  +  1);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  blockSize);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  blockSize);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  -  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  -  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  -  this.blockSize100k);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k;	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
94	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  1  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  1  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  1  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    '0')?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
95	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '0')?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    '0')?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
96	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  1;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
97	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  -  '0'  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  -  '0'  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  -  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
98	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  -  '0'  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  -  '0'  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  -  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
99	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  -  '0'  :  0;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  -  '0'  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '0')?  blockSize100k  -  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
102	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
103	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
104	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
105	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
108	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
109	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
110	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.block  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.block  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.block	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
111	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockS  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockS  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockS	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
112	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
113	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '0')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
114	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    <    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
115	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  1)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  1)?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  1)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    <    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
116	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
117	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
118	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  2;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
119	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  10;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  10;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  10;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0,  blockSize);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0,  blockSize);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  1);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  1);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  0,  this.blockSize100k);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  blockSize);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  blockSize);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  blockSize);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  2);  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  2);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  2);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  blockSize  -  '0');  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  blockSize  -  '0');  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  blockSize  -  '0');	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
126	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  0)?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    0)?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
127	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  1  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  1  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  1  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    <    0)?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
128	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  0)?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
129	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  +  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  +  2;	  this.bsLive    =    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
130	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  /  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  /  1;	  this.bsLive    =    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
131	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  +  '9';  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  +  '9';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  +  '9';	  this.bsLive    =    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
132	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k.equals(this.blockSize100k)?  true  :  false;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k.equals(this.blockSize100k)?  true  :  false;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k.equals(this.blockSize100k)?  true  :  false;	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k)?    true    :    false;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
133	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 ".equals(this.blockSize100k)?  false  :  false;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 ".equals(this.blockSize100k)?  false  :  false;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 ".equals(this.blockSize100k)?  false  :  false;	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k)?    true    :    false;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
134	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >>  '1')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >>  '1')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >>  '1')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >=    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
135	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k!=  '1')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k!=  '1')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k!=  '1')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >=    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0,  blockSize);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0,  blockSize);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  0,  this.blockSize100k);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
138	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  1);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  1);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  blockSize);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  blockSize);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  blockSize);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
140	[BUG]  [BUGGY]  this.bsLive  =  blockSize  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize  -  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize  -  1;	  this.bsLive    =    blockSize100k    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
141	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  -  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  2;	  this.bsLive    =    blockSize100k    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
142	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
143	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
144	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockS  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockS  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockS	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
145	[BUG]  [BUGGY]  if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
146	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  false;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  false;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  false;	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy)||    true;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
147	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 ".equals(this.getAndMoveToFrontDecode_yy)||  true;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 ".equals(this.getAndMoveToFrontDecode_yy)||  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 ".equals(this.getAndMoveToFrontDecode_yy)||  true;	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy)||    true;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
148	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)&&  false;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)&&  false;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)&&  false;	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy)||    true;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
149	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)&&  true;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)&&  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 ".equals(getAndMoveToFrontDecode_yy)&&  true;	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy)||    true;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
150	[BUG]  [BUGGY]  if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
151	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
152	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
153	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
154	[BUG]  [BUGGY]  if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
155	[BUG]  [BUGGY]  if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(!isFirstStream)  {  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.computedCombinedCRC);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.computedCombinedCRC);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.computedCRC);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.computedCRC);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
159	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.in);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.in);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.in);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
160	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  0)?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    ==    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
161	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  ==  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  ==  0)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  ==  0)?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    ==    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
162	[BUG]  [BUGGY]  this.bsLive  &=  BZip2Compressor.DEFAULT_BSTATE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  &=  BZip2Compressor.DEFAULT_BSTATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  &=  BZip2Compressor.DEFAULT_BSTATE;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BSTATE;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
163	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE  +  1;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BSTATE;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
164	[BUG]  [BUGGY]  this.bsLive  -=  BZip2Compressor.DEFAULT_BSTATE;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  BZip2Compressor.DEFAULT_BSTATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  BZip2Compressor.DEFAULT_BSTATE;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BSTATE;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
165	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE  -  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE  -  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT_BSTATE  -  1;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BSTATE;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
166	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
167	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
168	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
169	[BUG]  [BUGGY]  if(isLastStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isLastStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isLastStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
170	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
171	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '9')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '9')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '9')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    <    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
172	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  0)?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  0)?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    ==    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
173	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  ==  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  ==  0)?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  ==  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    ==    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
174	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k!=  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k!=  0)?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k!=  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    ==    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
177	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.data.read());  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.data.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.data.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
178	[BUG]  [BUGGY]  System.arraycopy(this.bytes,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.bytes,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.bytes,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
179	[BUG]  [BUGGY]  System.arraycopy(data,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(data,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(data,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
180	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.data,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.data,  this.blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.data,  this.blockSize100k,  this.in.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
181	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k!=  0)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k!=  0)?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k!=  0)?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    0)?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
182	[BUG]  [BUGGY]  bsLive  =  true;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  bsLive  =  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	bsLive  =  true;	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
183	[BUG]  [BUGGY]  This.bsLive  =  true;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  This.bsLive  =  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	This.bsLive  =  true;	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.blockSize100k    =    blockSize    -    '0';    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
185	[BUG]  [BUGGY]  if(this.in!=  null)  {  int  len  =  this.in.read();  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  int  len  =  this.in.read();  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  int  len  =  this.in.read();  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.blockSize100k    =    blockSize    -    '0';    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
186	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.blockSize100k    =    blockSize    -    '0';    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
187	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.blockSize100k    =    blockSize    -    '0';    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize100k;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.blockSize100k    =    blockSize    -    '0';    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
189	[BUG]  [BUGGY]  this.bsLive  =  bsBuff;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsBuff;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsBuff;	  this.bsLive    =    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
190	[BUG]  [BUGGY]  this.bsLive  =  RAND_PART_C_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  RAND_PART_C_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  RAND_PART_C_STATE;	  this.bsLive    =    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
191	[BUG]  [BUGGY]  this.bsLive  =  BZip2BlockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  BZip2BlockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  BZip2BlockSize100k;	  this.bsLive    =    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
192	[BUG]  [BUGGY]  this.bsLive  -=  100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  100k;	  this.bsLive    -=    100;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
193	[BUG]  [BUGGY]  this.bsLive  -=  1000;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  1000;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  1000;	  this.bsLive    -=    100;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
194	[BUG]  [BUGGY]  this.bsBuff  -=  100;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsBuff  -=  100;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsBuff  -=  100;	  this.bsLive    -=    100;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
195	[BUG]  [BUGGY]  this.bsLive  -=  200;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  200;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  200;	  this.bsLive    -=    100;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
196	[BUG]  [BUGGY]  this.bsLive  -=  50;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  50;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  50;	  this.bsLive    -=    100;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
197	[BUG]  [BUGGY]  this.bsLive  =  blockSize  -  '0';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize  -  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize  -  '0';	  this.bsLive    =    blockSize100k    -    '0';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
198	[BUG]  [BUGGY]  this.bsLive  =  bsBuff  -  '0';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsBuff  -  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsBuff  -  '0';	  this.bsLive    =    blockSize100k    -    '0';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
199	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  '0'  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  -  '0'  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  '0'  +  1;	  this.bsLive    =    blockSize100k    -    '0';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
200	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  /  '0';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  /  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  /  '0';	  this.bsLive    =    blockSize100k    -    '0';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
201	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  -  '0'  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  -  '0'  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  -  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
202	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  1;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
203	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  -  '0'  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  -  '0'  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  -  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
204	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  /  '0'  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  /  '0'  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  /  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
205	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0';  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.blockSize100k  =  blockSize  /  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.blockSize100k  =  blockSize  /  '0';	  this.blockSize100k    =    blockSize    -    '0';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
206	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  1;	  this.blockSize100k    =    blockSize    -    '0';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
207	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.blockSize100k  =  blockSize  -  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.blockSize100k  =  blockSize  -  1;	  this.blockSize100k    =    blockSize    -    '0';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
208	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  2;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  2;	  this.blockSize100k    =    blockSize    -    '0';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
209	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  4;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  4;	  this.blockSize100k    =    blockSize    -    '0';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
210	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  +  1;	  this.bsLive    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
211	[BUG]  [BUGGY]  this.blockSize100k  -=  blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.blockSize100k  -=  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.blockSize100k  -=  blockSize100k;	  this.bsLive    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
212	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  +  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  +  2;	  this.bsLive    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
213	[BUG]  [BUGGY]  this.bsBuff  -=  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsBuff  -=  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsBuff  -=  blockSize100k;	  this.bsLive    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
214	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 ",  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 ",  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 ",  blockSize100k;	  this.bsLive    =   "BZip2   ";    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
215	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 "  +  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 "  +  this.blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 "  +  this.blockSize100k;	  this.bsLive    =   "BZip2   ";    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
216	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '0')?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '0')?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '0')?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
217	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
218	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.data,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.data,  this.blockSize100k,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.data,  this.blockSize100k,  this.blockSize100k);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
219	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.in,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
221	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    >    '9')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
222	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '9')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '9')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '9')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '9')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
223	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  ==  '9')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  ==  '9')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  ==  '9')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >    '9')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
224	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k.equals(this.blockSize100k));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k.equals(this.blockSize100k));  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k.equals(this.blockSize100k));	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
225	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k.equals(this.blockSize100k));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k.equals(this.blockSize100k));  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k.equals(this.blockSize100k));	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
226	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k.equals( "BZip2 ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k.equals( "BZip2 ");  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k.equals( "BZip2 ");	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
227	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k.equals( "BZip2 "));  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k.equals( "BZip2 "));  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k.equals( "BZip2 "));	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
228	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  blockSize100k);	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
229	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >>  '0')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >>  '0')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >>  '0')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
230	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k!=  '0')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k!=  '0')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k!=  '0')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
231	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    4;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
232	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  '1')?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    4;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
233	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >=  0)?  blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >=  0)?  blockSize100k  :  1;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
234	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  2;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
235	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  10;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  10;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  10;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
236	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    >    0)?    blockSize100k    :    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
237	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  2;	  this.bsLive    =(blockSize100k    <    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
238	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  10;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  10;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  10;	  this.bsLive    =(blockSize100k    <    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
239	[BUG]  [BUGGY]  this.bsLive  =  blockSize  +  '0';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize  +  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize  +  '0';	  this.bsLive    =    blockSize100k    +    '0';    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
240	[BUG]  [BUGGY]  this.bsLive  =  bsBuff  +  '0';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsBuff  +  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsBuff  +  '0';	  this.bsLive    =    blockSize100k    +    '0';    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
241	[BUG]  [BUGGY]  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.read(this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.read(this.blockSize100k);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
242	[BUG]  [BUGGY]  this.in.readFully(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.readFully(this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.readFully(this.blockSize100k);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
243	[BUG]  [BUGGY]  this.in.write(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.write(this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.write(this.blockSize100k);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
244	[BUG]  [BUGGY]  this.in.read(blockSize100k);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.read(blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.read(blockSize100k);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
245	[BUG]  [BUGGY]  this.in.read(this.blockSize100k,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.read(this.blockSize100k,  blockSize);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.read(this.blockSize100k,  blockSize);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
246	[BUG]  [BUGGY]  this.in.read(this.blockSize100k,  blockSize100k);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.read(this.blockSize100k,  blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.read(this.blockSize100k,  blockSize100k);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
247	[BUG]  [BUGGY]  this.bsLive  &=  BZip2Constants.BSTART_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  &=  BZip2Constants.BSTART_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  &=  BZip2Constants.BSTART_BLOCK_STATE;	  this.bsLive    |=    BZip2Constants.BSTART_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
248	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE  +  1;	  this.bsLive    |=    BZip2Constants.BSTART_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
249	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE  -  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.BSTART_BLOCK_STATE  -  1;	  this.bsLive    |=    BZip2Constants.BSTART_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
250	[BUG]  [BUGGY]  this.bsLive  -=  BZip2Constants.BSTART_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  BZip2Constants.BSTART_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  BZip2Constants.BSTART_BLOCK_STATE;	  this.bsLive    |=    BZip2Constants.BSTART_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
251	[BUG]  [BUGGY]  this.bsLive  |=  RAND_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  RAND_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  RAND_BLOCK_STATE;	  this.bsLive    |=    BZip2Constants.BSTART_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
252	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  :  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  :  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  :  1;	  this.bsLive    =(this.blockSize100k    >    0)?    this.blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
253	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  this.blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  <  0)?  this.blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  0)?  this.blockSize100k  :  0;	  this.bsLive    =(this.blockSize100k    >    0)?    this.blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
254	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  ==  0)?  this.blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  ==  0)?  this.blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  ==  0)?  this.blockSize100k  :  0;	  this.bsLive    =(this.blockSize100k    >    0)?    this.blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
255	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >=  0)?  this.blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  >=  0)?  this.blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >=  0)?  this.blockSize100k  :  0;	  this.bsLive    =(this.blockSize100k    >    0)?    this.blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
256	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k.equals(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k.equals(this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k.equals(this.blockSize100k);	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
257	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k.equals(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k.equals(this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k.equals(this.blockSize100k);	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
258	[BUG]  [BUGGY]  this.bsLive  =  blockSize  -  '1';  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize  -  '1';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize  -  '1';	  this.bsLive    =    blockSize100k    -    '1';    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
259	[BUG]  [BUGGY]  this.bsLive  =  bsBuff  -  '1';  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsBuff  -  '1';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsBuff  -  '1';	  this.bsLive    =    blockSize100k    -    '1';    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
260	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  '1'  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  -  '1'  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  '1'  +  1;	  this.bsLive    =    blockSize100k    -    '1';    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
261	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >>  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >>  0)?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >>  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >=    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
262	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >=  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  >=  0)?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >=  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >=    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
263	[BUG]  [BUGGY]  this.bsLive  =   "BZip2  stream ";  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2  stream ";  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2  stream ";	  this.bsLive    =   "Bzip2   ";    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
264	[BUG]  [BUGGY]  this.bsLive  &=  BZip2Compressor.DEFAULT_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  &=  BZip2Compressor.DEFAULT_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  &=  BZip2Compressor.DEFAULT_BLOCK_STATE;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
265	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE  +  1;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
266	[BUG]  [BUGGY]  this.bsLive  -=  BZip2Compressor.DEFAULT_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  BZip2Compressor.DEFAULT_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  BZip2Compressor.DEFAULT_BLOCK_STATE;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
267	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE  -  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Compressor.DEFAULT_BLOCK_STATE  -  1;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
268	[BUG]  [BUGGY]  this.bsLive  =  BlockSize100k  -  blockSize;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  BlockSize100k  -  blockSize;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  BlockSize100k  -  blockSize;	  this.bsLive    =    BlockSize100k;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
269	[BUG]  [BUGGY]  this.bsLive  =  BlockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  BlockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  BlockSize100k  +  1;	  this.bsLive    =    BlockSize100k;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
270	[BUG]  [BUGGY]  this.bsLive  =  BlockSize100k  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  BlockSize100k  -  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  BlockSize100k  -  1;	  this.bsLive    =    BlockSize100k;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
271	[BUG]  [BUGGY]  this.bsLive  =  BlockSize100k  +  '0';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  BlockSize100k  +  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  BlockSize100k  +  '0';	  this.bsLive    =    BlockSize100k;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
272	[BUG]  [BUGGY]  this.bsLive  =  blockSize;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize;	  this.bsLive    =    BlockSize100k;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
273	[BUG]  [BUGGY]  this.bsLive  &=  BZip2Constants.BST_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  &=  BZip2Constants.BST_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  &=  BZip2Constants.BST_BLOCK_STATE;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
274	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE  +  1;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
275	[BUG]  [BUGGY]  this.bsLive  -=  BZip2Constants.BST_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  BZip2Constants.BST_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  BZip2Constants.BST_BLOCK_STATE;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
276	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE  -  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.BST_BLOCK_STATE  -  1;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
277	[BUG]  [BUGGY]  this.bsLive  |=  BST_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BST_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BST_BLOCK_STATE;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
278	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >>  '0')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >>  '0')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >>  '0')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >=    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
279	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k!=  '0')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k!=  '0')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k!=  '0')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >=    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
280	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  1)?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  1)?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  1)?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    >    1)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
281	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  0  :  blockSize100k  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  0  :  blockSize100k  *  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  0  :  blockSize100k  *  1;	  this.bsLive    =(blockSize100k    >    '9')?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
282	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
283	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k;	  this.bsLive    =   "BZip2   ";    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
284	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k  -  1);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k  -  1);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
285	[BUG]  [BUGGY]  System.arraycopy(this.bytes,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.bytes,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.bytes,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
286	[BUG]  [BUGGY]  System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k,  this.blockSize100k);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
287	[BUG]  [BUGGY]  if(this.computedCombinedCRC!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.computedCombinedCRC!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.computedCombinedCRC!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
288	[BUG]  [BUGGY]  if(this.computedCombinedCRC  ==  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.computedCombinedCRC  ==  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.computedCombinedCRC  ==  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
289	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
290	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
291	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  +  '9'  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  +  '9'  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  +  '9'  :  0;	  this.bsLive    =(blockSize100k    <    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
292	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  0L;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  0L;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  blockSize100k  :  0L;	  this.bsLive    =(blockSize100k    <    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
293	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
294	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.in.read());  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
295	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
296	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
297	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.in.read());  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.in.read());  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
298	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.bsBuff);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.bsBuff);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.bsBuff);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
299	[BUG]  [BUGGY]  This.bsLive  :  true;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  This.bsLive  :  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	This.bsLive  :  true;	  this.bsLive    :    false;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
300	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  +  '0');  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  +  '0');  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k  +  '0');	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
301	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  +  '0')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  +  '0')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  +  '0')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >=    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
302	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k.equals(this.blockSize100k)?  false  :  false;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k.equals(this.blockSize100k)?  false  :  false;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k.equals(this.blockSize100k)?  false  :  false;	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k)?    true    :    false;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
303	[BUG]  [BUGGY]  this.bsLive  =  bsSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsSize100k;	  this.bsLive    =    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
304	[BUG]  [BUGGY]  this.bsLive  =  BZip2SIZE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  BZip2SIZE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  BZip2SIZE;	  this.bsLive    =    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
305	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  4;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  4;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
306	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  -  '0'  :  2;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
307	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  this.in.read());  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  System.arraycopy(this.in,  0,  this.blockSize100k,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
308	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read();  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
309	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BSTATE;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BSTATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.BST_BSTATE;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
310	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BSTATE  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Constants.BST_BSTATE  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.BST_BSTATE  +  1;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
311	[BUG]  [BUGGY]  this.bsLive  |=  BZip2Constants.START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  BZip2Constants.START_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  BZip2Constants.START_BLOCK_STATE;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
312	[BUG]  [BUGGY]  System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.bsBuff,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
313	[BUG]  [BUGGY]  System.arraycopy(this.ioContext,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.ioContext,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.ioContext,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
314	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  4;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  4;	  this.bsLive    =(blockSize100k    >    '9')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
315	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  0L;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  0L;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  blockSize100k  :  0L;	  this.bsLive    =(blockSize100k    >    '9')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
316	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  -  1  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  -  1  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >  0)?  this.blockSize100k  -  1  :  0;	  this.bsLive    =(this.blockSize100k    >    0)?    this.blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
317	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  3;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  3;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  :  3;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    :    4;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
318	[BUG]  [BUGGY]  this.bsLive  =  System.currentTimeMillis();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  System.currentTimeMillis();  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  System.currentTimeMillis();	  this.bsLive    =   "Bzip2   ";    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
319	[BUG]  [BUGGY]  this.bsLive  =   "BZip2Stream ";  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2Stream ";  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2Stream ";	  this.bsLive    =   "Bzip2   ";    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
320	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  +  '0')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  +  '0')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  +  '0')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
321	[BUG]  [BUGGY]  this.bsLive  +=  BZip2Compressor.DEFAULT;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  +=  BZip2Compressor.DEFAULT;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  +=  BZip2Compressor.DEFAULT;	  this.bsLive    |=    BZip2Compressor.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
322	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  2  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  2  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  2  :  blockSize100k;	  this.bsLive    =(blockSize100k    <    '0')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
323	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  +  '9')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  +  '9')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  +  '9')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
324	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  [Delete]  '9')?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  [Delete]  '9')?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  [Delete]  '9')?  0  :  blockSize100k;	  this.bsLive    =(blockSize100k    >=    '9')?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
325	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  +  '1')?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  +  '1')?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  +  '1')?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    >=    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
326	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  +  '0';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  +  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  +  '0';	  this.bsLive    =    blockSize100k    +    '0';    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
327	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  4);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  4);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  4);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
328	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  3);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  3);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  3);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
329	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  8;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  8;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  :  8;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    :    4;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
330	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  +=  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  +=  blockSize  -  '0';  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.blockSize100k  +=  blockSize  -  '0';  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.blockSize100k    =    blockSize    -    '0';    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
331	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  >=  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.blockSize100k    =    blockSize    -    '0';    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
332	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  1  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  >  0)?  1  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >  0)?  1  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    0)?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
333	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
334	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
335	[BUG]  [BUGGY]  this.in.close();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.close();  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.close();	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
336	[BUG]  [BUGGY]  this.in.setRead(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.setRead(this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.setRead(this.blockSize100k);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
337	[BUG]  [BUGGY]  this.bsLive  |=  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  START_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  START_BLOCK_STATE;	  this.bsLive    |=    BZip2Constants.BSTART_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
338	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  -  '9'  +  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  -  '9'  +  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  -  '9'  +  2;	  this.bsLive    =    blockSize100k    -    '9';    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
339	[BUG]  [BUGGY]  this.bsLive  -=  100L;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  100L;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  100L;	  this.bsLive    -=    100;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
340	[BUG]  [BUGGY]  this.bsLive  -=  500;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  500;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  500;	  this.bsLive    -=    100;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
341	[BUG]  [BUGGY]  this.bsLive  +=  BZip2Compressor.DEFAULT_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  +=  BZip2Compressor.DEFAULT_BLOCK_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  +=  BZip2Compressor.DEFAULT_BLOCK_STATE;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
342	[BUG]  [BUGGY]  this.bsLive  +=  BZip2Compressor.DEFAULT_BSTATE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  +=  BZip2Compressor.DEFAULT_BSTATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  +=  BZip2Compressor.DEFAULT_BSTATE;	  this.bsLive    |=    BZip2Compressor.DEFAULT_BSTATE;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
343	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  =  0)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  =  0)?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  =  0)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    <    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
344	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  -  '0';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  -  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  -  '0';	  this.bsLive    =    blockSize100k    -    '0';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
345	[BUG]  [BUGGY]  this.bsLive  =  getAndMoveToFrontDecode_yy.equals(getAndMoveToFrontDecode_yy)||  true;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  getAndMoveToFrontDecode_yy.equals(getAndMoveToFrontDecode_yy)||  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  getAndMoveToFrontDecode_yy.equals(getAndMoveToFrontDecode_yy)||  true;	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy)||    true;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
346	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  <  =  0)?  0  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  <  =  0)?  0  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  <  =  0)?  0  :  blockSize100k;	  this.bsLive    =(this.blockSize100k    <    0)?    0    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
347	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  4;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  4;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
348	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  2;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '1')?  blockSize100k  -  '0'  :  2;	  this.bsLive    =(blockSize100k    >    '1')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
349	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  2);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  2);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  2);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
350	[BUG]  [BUGGY]  this.bsLive  =  blockSize100k  +  4;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  blockSize100k  +  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  blockSize100k  +  4;	  this.bsLive    =    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
351	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  -  '1';  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  -  '1';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  -  '1';	  this.bsLive    =    blockSize100k    -    '1';    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
352	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  +  '9';  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  +  '9';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  +  '9';	  this.bsLive    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
353	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  +  4;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  +  4;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  +  4;	  this.bsLive    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
354	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
355	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
356	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
357	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
358	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
359	[BUG]  [BUGGY]  this.bsLive  =  '0';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  '0';	  this.bsLive    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
360	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
361	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy  (blockSize100k));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy  (blockSize100k));  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy  (blockSize100k));	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
362	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy;	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
363	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy());	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
364	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(getAndMoveToFrontDecode_yy)||  getAndMoveToFrontDecode_yy);	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
365	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k);  }	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
366	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
367	[BUG]  [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
368	[BUG]  [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.inUse)  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
369	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
370	[BUG]  [BUGGY]  this.bsLive  =   "BZip2  block  size   ".equals(this.blockSize100k));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2  block  size   ".equals(this.blockSize100k));  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2  block  size   ".equals(this.blockSize100k));	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
371	[BUG]  [BUGGY]  this.bsLive  =   "BZip2 "  +  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =   "BZip2 "  +  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =   "BZip2 "  +  this.blockSize100k);	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
372	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k  +  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k  +  this.blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k  +  this.blockSize100k;	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
373	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k  +  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k  +  this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k  +  this.blockSize100k);	  this.bsLive    =   "BZip2   ".equals(this.blockSize100k));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
374	[BUG]  [BUGGY]  this.bsLive  |=  RAND_PART_C_STATE;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  RAND_PART_C_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  RAND_PART_C_STATE;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
375	[BUG]  [BUGGY]  this.bsLive  |=  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  |=  RAND_PART_A_STATE;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  |=  RAND_PART_A_STATE;	  this.bsLive    |=    BZip2Constants.BST_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
376	[BUG]  [BUGGY]  this.bsLive  -=  8;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  8;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  8;	  this.bsLive    -=    10;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
377	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  1,  0);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  1,  0);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.blockSize100k,  1,  0);	  System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
378	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  2  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '9')?  2  :  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '9')?  2  :  blockSize100k;	  this.bsLive    =(blockSize100k    >    '9')?    1    :    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
379	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
380	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
381	[BUG]  [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
382	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  1);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    1);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
383	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.readLine();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.readLine();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.readLine();  i  <  len;  ++i)  {  this.blockSize100k  =  blockSize  -  '0';  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.blockSize100k    =    blockSize    -    '0';    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
384	[BUG]  [BUGGY]  this.bsLive  =  bsLive  +  '1';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsLive  +  '1';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsLive  +  '1';	  this.bsLive    =    blockSize100k    +    '1';    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
385	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  0  :  blockSize100k  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  0)?  0  :  blockSize100k  *  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  0)?  0  :  blockSize100k  *  1;	  this.bsLive    =(blockSize100k    >    0)?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
386	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  BlockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  BlockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  BlockSize100k  :  0;	  this.bsLive    =(blockSize100k    <    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
387	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  10)?  blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  10)?  blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  10)?  blockSize100k  :  0;	  this.bsLive    =(blockSize100k    <    0)?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
388	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  1  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '1')?  1  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '1')?  1  :  0;	  this.bsLive    =(blockSize100k    <    '1')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
389	[BUG]  [BUGGY]  this.bsLive  =  bsLive  -  '0';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsLive  -  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsLive  -  '0';	  this.bsLive    =    blockSize100k    -    '0';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
390	[BUG]  [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.data.length);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.data.length);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  this.data.length);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
391	[BUG]  [BUGGY]  this.bsLive  = "Block ".equals(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  = "Block ".equals(this.blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "Block ".equals(this.blockSize100k);	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
392	[BUG]  [BUGGY]  this.bsLive  = "BZip2 ".equals(this.in.read());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  = "BZip2 ".equals(this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BZip2 ".equals(this.in.read());	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
393	[BUG]  [BUGGY]  this.bsLive  = "BSTART_BLOCK_STATE ";  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  = "BSTART_BLOCK_STATE ";  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  = "BSTART_BLOCK_STATE ";	  this.bsLive    =    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
394	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k  +  '0';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k  +  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k  +  '0';	  this.bsLive    =   "BZip2   ";    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
395	[BUG]  [BUGGY]  this.bsLive  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.in.read();  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.in.read();	  this.bsLive    =   "BZip2   ";    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
396	[BUG]  [BUGGY]  this.bsLive  =  this.blockSize100k  -  '0';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  this.blockSize100k  -  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  this.blockSize100k  -  '0';	  this.bsLive    =   "BZip2   ";    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
397	[BUG]  [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.blockSize100k,  this.blockSize	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
398	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
399	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.in.read());    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
400	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  /  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  /  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  /  1;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
401	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  *  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  *  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  0)?  0  :  blockSize100k  *  1;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
402	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  10)?  0  :  blockSize100k  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  10)?  0  :  blockSize100k  +  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  10)?  0  :  blockSize100k  +  1;	  this.bsLive    =(blockSize100k    <    0)?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
403	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.out,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.out,  0,  this.blockSize100k,  this.blockSize100k,  this.in.read());	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    this.in.read());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
404	[BUG]  [BUGGY]  if(this.blockSize100k!=  blockSize100k)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.blockSize100k!=  blockSize100k)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.blockSize100k!=  blockSize100k)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
405	[BUG]  [BUGGY]  if(this.blockSize100k  ==  blockSize100k)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.blockSize100k  ==  blockSize100k)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.blockSize100k  ==  blockSize100k)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
406	[BUG]  [BUGGY]  if(this.blockSize100k!=  blockSize)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.blockSize100k!=  blockSize)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.blockSize100k!=  blockSize)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
407	[BUG]  [BUGGY]  if(this.blockSize100k  ==  blockSize)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.blockSize100k  ==  blockSize)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.blockSize100k  ==  blockSize)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
408	[BUG]  [BUGGY]  this.bsLive  -=  blockSize100k  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  blockSize100k  -  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  blockSize100k  -  1;	  this.bsLive    -=    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
409	[BUG]  [BUGGY]  this.bsLive  =(this.blockSize100k  >  1)?  this.blockSize100k  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(this.blockSize100k  >  1)?  this.blockSize100k  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(this.blockSize100k  >  1)?  this.blockSize100k  :  0;	  this.bsLive    =(this.blockSize100k    >    0)?    this.blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
410	[BUG]  [BUGGY]  this.bsLive  =  c;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  c;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  c;	  this.bsLive    =    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
411	[BUG]  [BUGGY]  this.bsLive  =  bsLive;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsLive;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsLive;	  this.bsLive    =    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
412	[BUG]  [BUGGY]  this.bsLive  =  new  char[getAndMoveToFrontDecode_yy];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  new  char[getAndMoveToFrontDecode_yy];  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  new  char[getAndMoveToFrontDecode_yy];	  this.bsLive    =   "BZip2   ".equals(getAndMoveToFrontDecode_yy);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
413	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  0L;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  0L;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  <  '0')?  blockSize100k  :  0L;	  this.bsLive    =(blockSize100k    <    '0')?    blockSize100k    :    0;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
414	[BUG]  [BUGGY]  this.bsBuff  :  true;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsBuff  :  true;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsBuff  :  true;	  this.bsLive    :    false;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
415	[BUG]  [BUGGY]  this.bsLive  =  bsLive  +  '0';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  bsLive  +  '0';  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  bsLive  +  '0';	  this.bsLive    =    blockSize100k    +    '0';    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
416	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.getLength();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.getLength();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.getLength();  i  <  len;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
417	[BUG]  [BUGGY]  this.bsLive  -=  BlockSize100k;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  -=  BlockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  -=  BlockSize100k;	  this.bsLive    =    BlockSize100k;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
418	[BUG]  [BUGGY]  this.bsLive  =  BlockSize100k  -  blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =  BlockSize100k  -  blockSize100k;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =  BlockSize100k  -  blockSize100k;	  this.bsLive    =    BlockSize100k;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
419	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  /  '0'  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  /  '0'  :  0;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  blockSize100k  /  '0'  :  0;	  this.bsLive    =(blockSize100k    >    '0')?    blockSize100k    -    '0'    :    0;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
420	[BUG]  [BUGGY]  this.in.seek(blockSize100k);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.seek(blockSize100k);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.seek(blockSize100k);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
421	[BUG]  [BUGGY]  this.in.skip();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.in.skip();  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.in.skip();	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
422	[BUG]  [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.savedCRC);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.savedCRC);  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	System.arraycopy(this.data,  0,  this.blockSize100k,  this.blockSize100k,  this.savedCRC);	  System.arraycopy(this.data,    0,    this.blockSize100k,    this.blockSize100k,    blockSize100k);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
423	[BUG]  [BUGGY]  if(this.computedCombinedCRC  ==  this.computedCombinedCRC)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.computedCombinedCRC  ==  this.computedCombinedCRC)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.computedCombinedCRC  ==  this.computedCombinedCRC)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
424	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  blockSize100k,  this.blockSize100k	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
425	[BUG]  [BUGGY]  if(this.computedCombinedCRC!=  this.computedCombinedCRC)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.computedCombinedCRC!=  this.computedCombinedCRC)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.computedCombinedCRC!=  this.computedCombinedCRC)  {  System.arraycopy(this.blockSize100k,  0,  this.blockSize100k,  0,  this.blockSize100k);  }  else  {  System.arraycopy(this.blockSize100k,  0,	  if(isFirstStream)    {    System.arraycopy(this.blockSize100k,    0,    this.blockSize100k,    0,    blockSize100k);    }    else    {    System.arraycopy(this.blockSize100k,    0,    blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
426	[BUG]  [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  0  :  blockSize100k  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  this.bsLive  =(blockSize100k  >  '0')?  0  :  blockSize100k  *  1;  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	this.bsLive  =(blockSize100k  >  '0')?  0  :  blockSize100k  *  1;	  this.bsLive    =(blockSize100k    >    '0')?    0    :    blockSize100k    +    1;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
427	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
428	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
429	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.computedCombinedCRC);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
430	[BUG]  [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';      [BUGGY]  if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block  [BUGGY]      this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	252	252	1	replace	if(this.inUse)  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.blockSize100k);  }  else  {  System.arraycopy(temp_charArray2d,  0,  this.blockSize100k,  this.block	  if(inUse)    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    blockSize100k);    }    else    {    System.arraycopy(temp_charArray2d,    0,    this.blockSize100k,    this.blockSize100k    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
