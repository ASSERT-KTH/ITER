bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  offs  +(c  +  len)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  offs  +(c  +  len)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  offs  +(c  +  len)/  2;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  return  c  +(destOffs  +  len)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(destOffs  +  len)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(destOffs  +  len)/  2;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  return  c  +(offs  +  len)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(offs  +  len)/  2  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(offs  +  len)/  2  +  1;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  return  c  +(len  +  offs)/  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(len  +  offs)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(len  +  offs)/  2;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  return  offs  +(len  +  c)/  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  offs  +(len  +  c)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  offs  +(len  +  c)/  2;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  return  hi  +(offs  +  len)/  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  hi  +(offs  +  len)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  hi  +(offs  +  len)/  2;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  return  c  -  offs  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  offs  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  offs  +  1;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  return  c  -  offs  +  len;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  offs  +  len;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  offs  +  len;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  return  c  -  destOffs;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  destOffs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  destOffs;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  return  offs  -  c;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  offs  -  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  offs  -  c;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  return  c  -  hi;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  hi;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  hi;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  return  c  -  offs,  len;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  offs,  len;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  offs,  len;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  return  c  -  offs  +  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  offs  +  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  offs  +  2;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  return  c  >  0?  1  :  b;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  1  :  b;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  1  :  b;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  return  c  <  0?  1  :  c;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  0?  1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  0?  1  :  c;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  return  c  >  0?  1  :  c  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  1  :  c  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  1  :  c  +  1;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  return  c  >  0?  1  :  destOffs;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  1  :  destOffs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  1  :  destOffs;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  return  c  >  0?  1  :  c.length;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  1  :  c.length;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  1  :  c.length;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  return  c  ==  0?  1  :  c;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  ==  0?  1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  ==  0?  1  :  c;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  return  c  <  <  1?  -1  :  b;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  1?  -1  :  b;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  1?  -1  :  b;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  return  c  <  <  1?  -1  :  c  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  1?  -1  :  c  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  1?  -1  :  c  +  1;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  return  c  <  <  1?  -1  :  c.length;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  1?  -1  :  c.length;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  1?  -1  :  c.length;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  return  c  <  <  1?  -1  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  1?  -1  :  0;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  1?  -1  :  0;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  return(c  <  <  1)?  -1  :  c;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return(c  <  <  1)?  -1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return(c  <  <  1)?  -1  :  c;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  return  c  <  <  1?  2  :  c;  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  1?  2  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  1?  2  :  c;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  return  c  <  <  16?  1  :  0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  16?  1  :  0;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  16?  1  :  0;	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  return  c  <  <  16?  1  :  b;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  16?  1  :  b;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  16?  1  :  b;	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  return  c  <  <  16?  1  :  c  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  16?  1  :  c  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  16?  1  :  c  +  1;	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  return  c  <  <  16?  1  :  c.length;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  16?  1  :  c.length;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  16?  1  :  c.length;	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  return(c  <  <  16)?  1  :  c;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return(c  <  <  16)?  1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return(c  <  <  16)?  1  :  c;	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  return  c  <  <  16?  2  :  c;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  16?  2  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  16?  2  :  c;	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  return  c  <  <  8?  1  :  b;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  8?  1  :  b;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  8?  1  :  b;	  return    c    <    <    8?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  return  c  <  <  8?  1  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  8?  1  :  0;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  8?  1  :  0;	  return    c    <    <    8?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
34	[BUG]  [BUGGY]  return  c  <  <  1?  1  :  c;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  1?  1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  1?  1  :  c;	  return    c    <    <    8?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
35	[BUG]  [BUGGY]  return  hi  &  0xff;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  hi  &  0xff;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  hi  &  0xff;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
36	[BUG]  [BUGGY]  return  offs  &  0xff;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  offs  &  0xff;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  offs  &  0xff;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
37	[BUG]  [BUGGY]  return  c  -  0xff;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  0xff;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  0xff;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  return  c  %  0xff;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  %  0xff;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  %  0xff;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  return  len  &  0xff;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  len  &  0xff;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  len  &  0xff;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  return  c  &  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  1;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  return  c  &  0x7F  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7F  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7F  +  1;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  return  hi  &  0x7F;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  hi  &  0x7F;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  hi  &  0x7F;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  return  c  &  0x7F  |  c;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7F  |  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7F  |  c;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  return  offs  &  0x7F;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  offs  &  0x7F;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  offs  &  0x7F;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  return  c  &  0x7F  +  offs;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7F  +  offs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7F  +  offs;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  return  c  <  <  2?  1  :  0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  2?  1  :  0;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  2?  1  :  0;	  return    c    <    <    2?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  return  c  <  <  2?  1  :  b;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  2?  1  :  b;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  2?  1  :  b;	  return    c    <    <    2?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  return  c  <  <  2?  1  :  c  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  2?  1  :  c  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  2?  1  :  c  +  1;	  return    c    <    <    2?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  return  c  <  <  2?  1  :  c.length;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  2?  1  :  c.length;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  2?  1  :  c.length;	  return    c    <    <    2?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  return  c  +  2;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +  2;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  return  c  +  1,  len;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +  1,  len;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +  1,  len;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  return  offs  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  offs  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  offs  +  1;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  return  c  +  3;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +  3;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +  3;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  return  hi  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  hi  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  hi  +  1;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  return  len  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  len  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  len  +  1;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  return  c  -  2;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  2;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  return  c  -  1L;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  1L;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  1L;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  return  len  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  len  -  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  len  -  1;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
59	[BUG]  [BUGGY]  return  c  /  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  /  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  /  1;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  return  c  +(destOffs  +  hi)/  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(destOffs  +  hi)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(destOffs  +  hi)/  2;	  return    c    +(offs    +    hi)/    2;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
61	[BUG]  [BUGGY]  return  hi  +(offs  +  c)/  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  hi  +(offs  +  c)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  hi  +(offs  +  c)/  2;	  return    c    +(offs    +    hi)/    2;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  return  offs  +(c  +  hi)/  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  offs  +(c  +  hi)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  offs  +(c  +  hi)/  2;	  return    c    +(offs    +    hi)/    2;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  return  c  +(hi  +  offs)/  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(hi  +  offs)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(hi  +  offs)/  2;	  return    c    +(offs    +    hi)/    2;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  dest[i][i]);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  dest[i][i]);  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  dest[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i],  0,  len);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i],  0,  len);  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i],  0,  len);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  dest[i][i],  offs[i][i]);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  dest[i][i],  offs[i][i]);  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  dest[i][i],  offs[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i]);  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  if(c  ==  0)  {  for(int  i  =  offs;  i  <  len;  ++i)  {  dest[i][c]  =  c;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  0)  {  for(int  i  =  offs;  i  <  len;  ++i)  {  dest[i][c]  =  c;  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  0)  {  for(int  i  =  offs;  i  <  len;  ++i)  {  dest[i][c]  =  c;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i],  offs[i][i]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i],  offs[i][i]);  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(c,  0,  dest[i][i],  offs[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data[i],  0,  dest[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data[i],  0,  dest[i][i]);  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  System.arraycopy(data[i],  0,  dest[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  return  c  &  0x7f  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7f  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7f  +  1;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  return  hi  &  0x7f;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  hi  &  0x7f;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  hi  &  0x7f;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
73	[BUG]  [BUGGY]  return  c  &  0x7f  &  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7f  &  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7f  &  1;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
74	[BUG]  [BUGGY]  return  c  &  0x7f  -  offs;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7f  -  offs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7f  -  offs;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
75	[BUG]  [BUGGY]  return  c  &  0x7f  +  offs;  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7f  +  offs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7f  +  offs;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
76	[BUG]  [BUGGY]  return  c  &  0x7f,  offs;  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7f,  offs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7f,  offs;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  return  c  -  1  +  len;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  1  +  len;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  1  +  len;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  return  c  -  1  +  destOffs;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  1  +  destOffs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  1  +  destOffs;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  return  c  -  1  +  offs;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  1  +  offs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  1  +  offs;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  return  c  <  <  2?  1  :  destOffs;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  2?  1  :  destOffs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  2?  1  :  destOffs;	  return    c    <    <    2?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
81	[BUG]  [BUGGY]  return  c  <  <  2?  1  :  -1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  2?  1  :  -1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  2?  1  :  -1;	  return    c    <    <    2?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  return  c  %  0x7f;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  %  0x7f;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  %  0x7f;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
83	[BUG]  [BUGGY]  return  c  &  0x7f  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7f  +  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7f  +  2;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
84	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
87	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0,  len  =  offs;  i  <  len;  ++i)  {  dest[i][i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0,  len  =  offs;  i  <  len;  ++i)  {  dest[i][i]  =  0;  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0,  len  =  offs;  i  <  len;  ++i)  {  dest[i][i]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
88	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  continue;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  continue;  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  continue;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  continue;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  continue;  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  continue;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
90	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0,  len  =  offs;  i  <  len;  ++i)  {  dest[i][b]  =  0;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0,  len  =  offs;  i  <  len;  ++i)  {  dest[i][b]  =  0;  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0,  len  =  offs;  i  <  len;  ++i)  {  dest[i][b]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
91	[BUG]  [BUGGY]  return  c  &  0xff  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0xff  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0xff  +  1;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
92	[BUG]  [BUGGY]  return  c  &  1xff;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  1xff;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  1xff;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
93	[BUG]  [BUGGY]  return  c  <  =  0xff;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  =  0xff;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  =  0xff;	  return    c    &    0xff;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
94	[BUG]  [BUGGY]  return  c  +  1L;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +  1L;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +  1L;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
95	[BUG]  [BUGGY]  return  c  +  offs;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +  offs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +  offs;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
96	[BUG]  [BUGGY]  return  c  +  len;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +  len;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +  len;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
97	[BUG]  [BUGGY]  return  c  %  0x7F;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  %  0x7F;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  %  0x7F;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
98	[BUG]  [BUGGY]  return  c  &  1x7F;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  1x7F;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  1x7F;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
99	[BUG]  [BUGGY]  return  c  &  0x3F;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x3F;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x3F;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
100	[BUG]  [BUGGY]  return  c  >=  0?  1  :  c;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >=  0?  1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >=  0?  1  :  c;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
101	[BUG]  [BUGGY]  return  c  +(len  +  hi)/  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(len  +  hi)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(len  +  hi)/  2;	  return    c    +(offs    +    hi)/    2;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
102	[BUG]  [BUGGY]  return  c  +(offs  *  hi)/  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(offs  *  hi)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(offs  *  hi)/  2;	  return    c    +(offs    +    hi)/    2;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
103	[BUG]  [BUGGY]  return  c  -  offs  *  len;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  offs  *  len;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  offs  *  len;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
104	[BUG]  [BUGGY]  return  c  <  <  8?  1  :  c  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  8?  1  :  c  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  8?  1  :  c  +  1;	  return    c    <    <    8?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
105	[BUG]  [BUGGY]  return  c  <  <  8?  1  :  -1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  8?  1  :  -1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  8?  1  :  -1;	  return    c    <    <    8?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
106	[BUG]  [BUGGY]  return  c  <  <  8?  1  :  destOffs;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  8?  1  :  destOffs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  8?  1  :  destOffs;	  return    c    <    <    8?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
107	[BUG]  [BUGGY]  return  c  +(offs  *  len)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(offs  *  len)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(offs  *  len)/  2;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
108	[BUG]  [BUGGY]  return  c  <  <  16?  1  :  destOffs;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  16?  1  :  destOffs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  16?  1  :  destOffs;	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
109	[BUG]  [BUGGY]  return  c  <  <  16?  1  :  -1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  16?  1  :  -1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  16?  1  :  -1;	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
110	[BUG]  [BUGGY]  return  c  <  <  16?  1  :  dst[c];  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  16?  1  :  dst[c];  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  16?  1  :  dst[c];	  return    c    <    <    16?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
111	[BUG]  [BUGGY]  return  c  >=  1?  -1  :  c;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >=  1?  -1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >=  1?  -1  :  c;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
112	[BUG]  [BUGGY]  return  c  ==  1?  -1  :  c;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  ==  1?  -1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  ==  1?  -1  :  c;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
113	[BUG]  [BUGGY]  return  c  <  <  1?  -1  :  destOffs;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  1?  -1  :  destOffs;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  1?  -1  :  destOffs;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
114	[BUG]  [BUGGY]  return  c  &  0x7F  &  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7F  &  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7F  &  1;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
115	[BUG]  [BUGGY]  return  len  &  0x7F;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  len  &  0x7F;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  len  &  0x7F;	  return    c    &    0x7F;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
116	[BUG]  [BUGGY]  return  destOffs  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  destOffs  +  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  destOffs  +  1;	  return    c    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
117	[BUG]  [BUGGY]  return  c  +(offs  +  c)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(offs  +  c)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(offs  +  c)/  2;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
118	[BUG]  [BUGGY]  return  c  +(destOffs  +  c)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  +(destOffs  +  c)/  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  +(destOffs  +  c)/  2;	  return    c    +(offs    +    len)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
119	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
120	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  for(int  i  =  0;  i  <  len;  ++i)  {  decompressConcatenated  =  true;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
121	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
122	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
123	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
124	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
125	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	if(c  ==  '.'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
126	[BUG]  [BUGGY]  return  c  &  1x7f;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  1x7f;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  1x7f;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
127	[BUG]  [BUGGY]  return  len  &  0x7f;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  len  &  0x7f;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  len  &  0x7f;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
128	[BUG]  [BUGGY]  return  c  &  0x7f  &  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  &  0x7f  &  2;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  &  0x7f  &  2;	  return    c    &    0x7f;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
129	[BUG]  [BUGGY]  return  c  <  <  1  ||  -1  :  c;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  <  <  1  ||  -1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  <  <  1  ||  -1  :  c;	  return    c    <    <    1?    -1    :    c;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
130	[BUG]  [BUGGY]  return  c  >  0?  destOffs  -  1  :  c  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  destOffs  -  1  :  c  -  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  destOffs  -  1  :  c  -  1;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
131	[BUG]  [BUGGY]  return  c  >  0?  c  -  1  :  c;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  c  -  1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  c  -  1  :  c;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
132	[BUG]  [BUGGY]  return  c  >  0?  1  :  c  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  1  :  c  -  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  1  :  c  -  1;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
133	[BUG]  [BUGGY]  return  c  >  0?  hi  -  1  :  c  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  hi  -  1  :  c  -  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  hi  -  1  :  c  -  1;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
134	[BUG]  [BUGGY]  return  c  >  0?  hi  :  c  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  hi  :  c  -  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  hi  :  c  -  1;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
135	[BUG]  [BUGGY]  return  c  >  0?  destOffs  :  c  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  >  0?  destOffs  :  c  -  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  >  0?  destOffs  :  c  -  1;	  return    c    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
136	[BUG]  [BUGGY]  return  c!=  0?  1  :  c;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c!=  0?  1  :  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c!=  0?  1  :  c;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
137	[BUG]  [BUGGY]  return  destOffs  -  c;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  destOffs  -  c;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  destOffs  -  c;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
138	[BUG]  [BUGGY]  return  c  -  offs  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  int  c  =  (destOffs  ==  offs)  ?  -1  :  (destOffs  -  offs);    [BUGGY]  return  c  -  offs  -  1;  [BUGGY]    }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	178	178	1	replace	return  c  -  offs  -  1;	  return    c    -    offs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
