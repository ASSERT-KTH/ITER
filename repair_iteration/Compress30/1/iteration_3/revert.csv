projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream(in);}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in);}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByte();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=newBZip2CompressorInputStream(in,false);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=newBZip2CompressorInputStream(in,false);}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{System.arraycopy(in,0,this.in,0,in.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{System.arraycopy(in,0,this.in,1,in.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,baseSize);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.read();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readUTF();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readByteArray();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getAstRoot());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readInt());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{returnnewBZip2CompressorInputStream();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{returnnewBZip2CompressorInputStream(in,false);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110This.in=newBZip2CompressorInputStream(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8"));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in,in);}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=inUse;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newLinkedHashMap<String,Integer>();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.MAX_VALUE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,this);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,this);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.baseSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(in.readByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream(in.getBytes());}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream(in.getVersion());}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream(in.readLine());}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,RAND_PART_A_STATE,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,NO_RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,RAND_PART_A_STATE,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,EOF);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,MISSING_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,baseSize,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,baseSize,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,baseSize+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,baseSize-1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,baseSize,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,baseSize,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes(),1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes(),in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes()+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes(),2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes(),4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes(),3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110This.in=newBZip2CompressorInputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110This.in=newBZip2CompressorInputStream(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110This.in=newBZip2CompressorInputStream(in,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this.in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getAstRoot(),1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getAstRoot()+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getCharacterEncoding());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getAstRoot(),in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getAstRoot(),2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFully();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readShort();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.read(this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.getVersion());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.getCharArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110||in!=null){this.in=in;}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110((BZip2CompressorInputStream)in).setEncoding(getAndMoveToFrontDecode_yy);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{thrownewIllegalStateException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,null,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.selectorMtf);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this.selectorMtf,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this.selector,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in.getBytes());}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this.selector,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this.in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,this.selector,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,this.crc);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,this.selector,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,0L);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.selector,this.blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.selector,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.selector,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.selector,this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.selector,this.baseSize);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine(),in.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine(),1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine()+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine(),in.readEnd());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine(),in.readCharAt(0));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine()-1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,false,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this.in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in.getVersion());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(Integer.MIN_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.toString();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in)+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in,false);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.recvDecodingTables_pos.readFromByteArray(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.recvDecodingTables_pos+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.recvDecodingTables_pos.readFromByteArray();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.recvDecodingTables_pos,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.recvDecodingTables_pos,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.recvDecodingTables_pos-1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in,in);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(this.in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110This.in=newBZip2InputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readByte();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readUnseq();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,0L);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,0,in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,0L);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,0,in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,temp_charArray2d);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,baseUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,0,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,32);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,temp_charArray2d);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.data.readByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.in.readByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(in.readByteArray(),in.readByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos.readByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.in,in.readByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.recvDecodingTables_pos.readByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110||in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110((BZip2CompressorInputStream)in).setEncoding(getAndMoveToFrontDecode_yy());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in,this);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,cftab,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,cftab,minLens);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,cftab,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,cftab,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,RAND_PART_A_STATE,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,RAND_PART_A_STATE,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,NO_RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,RAND_PART_A_STATE,RAND_PART_B_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.baseSize100k.readFromByteArray(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.baseSize100k,this.blockSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.baseSize100k,this.bsBuff);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.baseSize100k+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.baseSize100k,baseLens);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.baseSize100k,this.data.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,blockSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize100k+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize100k,blockSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize100k,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize100k,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize100k-1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110System.arraycopy(in,0,this.in,0,in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}else{System.arraycopy(in,0,this.in,0,in.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{System.arraycopy(in,1,this.in,0,in.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this.selector,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this.in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,this.selector,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,this.crc);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,this.selector,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110||in!=null){in=newBZip2CompressorInputStream(in);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110((BZip2CompressorInputStream)in).setEncoding(getAndMoveToFrontDecode_yy);this.in=in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110((BZip2CompressorInputStream)in).setEncoding(getAndMoveToFrontDecode_yy());this.in=in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}else{returnnewBZip2CompressorInputStream(in,false);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{returnnewBZip2CompressorInputStream(in,true);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}else{returnnewBZip2CompressorInputStream(in,true);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(this.selector,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.selector,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.selector,this.blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in,this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.selector,this.baseSize);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,cftab,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,cftab,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,temp_charArray2d);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,cftab,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2SelectorInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newchar[inUse.length];
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newboolean[inUse.length];
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110||in==null){in=newBZip2CompressorInputStream();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,RAND_PART_A_STATE,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,RAND_PART_A_STATE,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,NO_RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,RAND_PART_A_STATE,RAND_PART_B_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,32);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,0,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClear();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readByteBuffer();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteBuffer();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes()+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this.in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110This.selector=newBZip2CompressorInputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,minLens);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,baseSize);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(this.seqToUnseq,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,this.seqToUnseq+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,this.seqToUnseq,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,this.seqToUnseq,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,this.selectorMtf);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getRecvDecodingTables_pos());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy()+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy(),false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy(),true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readEndByteArray();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,this,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.readLine(),in.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.readLine(),in.readEnd());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.readLine(),in.readCharArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,in.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,0L);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110System.arraycopy(in,0,this.in,1,in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}else{System.arraycopy(in,0,this.in,1,in.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{System.arraycopy(in,1,this.in,1,in.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8")+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8_"));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(0));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8"),in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readInt()-1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readInt(),1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readInt()+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readInt(),in.readInt());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readInt(),2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readInt(),4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this.in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(InputStream.DEFAULT,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.MAX_VALUE+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.MIN_VALUE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.MAX_VALUE|Integer.MAX_VALUE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.MAX_VALUE-1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newInteger(Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,5);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,0,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this.in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in)+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,baseUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.selector.readFromByteArray(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.selector.readFromByteArray();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.in.readFromByteArray(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.data.readFromByteArray(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in.getVersion());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream(in.getVersion());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(false,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(false,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(true,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(true,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,data);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in.readLine());}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in.readLine());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newArrayList<String,Integer>();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newjava.util.ArrayList<String,Integer>();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newHashMap<String,Integer>();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newLinkedList<String,Integer>();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}else{returnnewBZip2CompressorInputStream();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos,getAndMoveToFrontDecode_yy);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy,recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy||getAndMoveToFrontDecode_yy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,cftab,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,cftab,RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,cftab,data.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,cftab,baseLens);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=getAndMoveToFrontDecode_yy(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=getAndMoveToFrontDecode_yy();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,in,null);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,in,false,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,RAND_PART_A_STATE,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,NO_RAND_PART_A_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,RAND_PART_A_STATE,RAND_PART_C_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,RAND_PART_A_STATE,EOF);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in)+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=in.parseInt(Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=Integer.parseInt(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in.readInt());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readChar();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readCharAt(0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,Integer.MIN_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,0,Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(this.seqToUnseq,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.seqToUnseq,this.blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.seqToUnseq=newBZip2CompressorInputStream(in,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.seqToUnseq,this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.seqToUnseq,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=newBZip2CompressorInputStream(in,false);}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=newBZip2CompressorInputStream(in,false);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in.getCharArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in.getChar());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(-1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,RAND_PART_C_STATE,START_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,0L);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,0,in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByte(recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByte(true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByte(false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,Integer.MIN_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,Integer.MAX_VALUE,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,Integer.MAX_VALUE,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,0,Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,Integer.MAX_VALUE,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,Integer.MAX_VALUE,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab,minLens);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab,baseLens);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,Integer.MIN_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,0,Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,in.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_xy(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,Integer.toHexString(in),false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,Integer.toHexString(in));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this,out,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(this,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this-1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream(in);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in.getVersion());}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newArrayHashMap<String,Integer>();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.seqToUnseq,this.maxSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){System.arraycopy(in,0,this.in,0,in.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){System.arraycopy(in,0,this.in,1,in.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=in;}else{System.arraycopy(in,0,this.in,1,in.length+1);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,unzftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.MAX_VALUE/2;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.MAX_VALUE|Integer.MIN_VALUE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,RAND_PART_B_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer(0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer(true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearCharBuffer();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer(1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(Integer.toString(in),true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this,in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this.data,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,unzftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,RAND_PART_B_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in,16);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(this,in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readUTF());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in,16);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in,4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this.data,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newbyte[inUse.length];
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getChars());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getAstRoot(),4);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.toByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy+2;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy+6;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_xy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy+in.read();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this.data,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,16);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,32);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,baseSize);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine(),in.readColumn());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(null,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=newBZip2CompressorInputStream(in,true);}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,base);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,RAND_PART_B_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,16);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy,getAndMoveToFrontDecode_yy);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_xy);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.read(in.getBytes("UTF-8"));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(this.in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.selector,this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,bsBuff);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this,in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,cftab,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.crc);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,unzftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_xy();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_int();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,cftab,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_xy());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy(),getAndMoveToFrontDecode_yy);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in.getEncoding());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in.getCharacterIndex());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8"))+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8"),0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8"),in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8"),1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110This.in=newBZip2InputStream(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,base);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,RAND_PART_B_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.readLine(),in.readBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.readLine(),in.readChars());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,EOF);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readObject();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readUnsequence();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110This.selector=newBZip2CompressorInputStream(in,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,Integer.MAX_VALUE+1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,in.readInt());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(seqToUnseq,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,this.seqToUnseq,this.blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos-1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(0,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByte(getAndMoveToFrontDecode_yy);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByte(getAndMoveToFrontDecode_yy());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.recvDecodingTables.readFromByteArray(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.in.readFromByteArray(this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.baseSize100k.readFromByteArray();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(this.baseSize100k-baseSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in.readUTF());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in).readUTF();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in.readLine(),in.readColumn());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this.crc,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this,in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=newBZip2CompressorInputStream();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(in,in.readByteArray());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(in.readByteArray(),in.readUTF());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,baseSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy(in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,INVALID_BLOCK_STATE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(Integer.toString(in));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in,baseSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this.crc,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in.getBytes());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,in.readInt());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,2);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,this,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(this);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getAstRoot(),in.available());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.getAstRoot(),in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,this,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,cftab,in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,this.seqToUnseq,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(this.seqToUnseq,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,this.seqToUnseq,this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.readLine(),out.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy()+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=createAndMoveToFrontDecode_yy();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=super.getAndMoveToFrontDecode_yy();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer(bsBuff);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer(BZip2Compressor.DEFAULT_SIZE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer(BZip2Compressor.DEFAULT_SECTION);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer(BZip2CompressorInputStream.DEFAULT_SIZE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readAndClearBuffer(BZip2Compressor.DEFAULT);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,inUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,cftab,in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(this.crc,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(recvDecodingTables_pos,baseSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,inUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110((BZip2CompressorInputStream)in).start();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2CompressorInputStream(in,baseUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.data.readFromByteArray(in.readFromByteArray(this.baseSize100k));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.in.readFromByteArray(this.baseSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in==null){in=newBZip2CompressorInputStream(in,false);}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,Integer.MAX_VALUE,3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=this.seqToUnseq.readFromByteArray(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in).intValue();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.parseInt(in)-1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110InputStreamin=newBZip2CompressorInputStream(in.getAstRoot());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,null,inUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes(),in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=Integer.toString(in.getBytes(),16);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy(),in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_xyy());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8"),in.readLine());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes("UTF-8"),in.available());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab,in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,cftab,Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),16);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toString(in.getBytes(),in.available());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){in=newBZip2CompressorInputStream(in,in.readLine());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readIO();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newchar[getAndMoveToFrontDecode_yy];
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=getAndMoveToFrontDecode_yy+su_chPrev;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,this.selectionToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(this,in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2InputStream(in,Integer.MAX_VALUE,3);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByte(in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByte(this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize100k,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=newBZip2Compressor(in,baseSize100k,inUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readOnly();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=inUse.read();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.read(this);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=newBZip2CompressorInputStream(in);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110if(in!=null){this.in=newBZip2CompressorInputStream(in,true);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy,Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(getAndMoveToFrontDecode_yy,true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in.readInt(),in.readBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,cftab,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,cftab,in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.toHexString(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(true,in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(false,in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=in.readFromByteArray(true,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this,inUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,cftab,in.read());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.in=newBZip2CompressorInputStream(in,cftab,inUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(in,this.seqToUnseq,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110in=newBZip2CompressorInputStream(this.seqToUnseq,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java110this.selector=Integer.parseInt(in)-1;
