projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(tarsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(dumpsig,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig.length);signatureLength=in.read(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=2){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig.length);signatureLength=in.read(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=0){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(tarsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(signature,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(!TarArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(!TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,signatureLength)||TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(tarheader,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(CpioArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){thrownewIllegalStateException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dumpsig,0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(dumpsig,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(CpioArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(JARArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(dumpsig,32)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDumpArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dupsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(signature,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(signatureLength,dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=TarArchiveInputStream.createInputStream(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227nisipLength=in.read(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=in.readInt();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDumpArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDUMPArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(tarsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(dirsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(CpioArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DummpArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(!TarArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(!TarArchiveInputStream.matches(tarsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(dirsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(signature.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig.length,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig.length-1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(strategy.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength!=2){thrownewIllegalArgumentException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength!=2){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength>=2){thrownewIllegalArgumentException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227thrownewIllegalArgumentException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227nisipLength=in.read(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumArchiveInputStream.matches(tarsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumArchiveInputStream.matches(fragment,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(tarheader,signatureLength)||DUMP.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(!DUMP.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(dupsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227||signatureLength!=0){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227nisipLength=0;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227||(signatureLength!=0&&dumpsig.length>512)||(signatureLength!=256)){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227||(signatureLength!=0&&dumpsig.length>2&&signatureLength<2)||(signatureLength>=2)){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227||(signatureLength!=0&&dumpsig.length>512)||(signatureLength>=256)){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227||(signatureLength!=0&&dumpsig.length<2)||(signatureLength>=2)){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227||(signatureLength!=0&&dumpsig.length>512)||(signatureLength==256)){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength==2){thrownewIllegalStateException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength>=2){thrownewIllegalStateException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength==2){thrownewIllegalStateException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227thrownewIllegalStateException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(signature,signatureLength)||TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,DUMP)||TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,signatureLength)&&TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,512)||TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(signature,signatureLength)||TarArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,100)||TarArchiveInputStream.matches(signature,100)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(tais.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(signature,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(dupsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(in,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(signatureLength,dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(signature,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(signature,0,dumpsigLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(signature,0,dumpsig.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(in,0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(signatureLength,0,dumpsig.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(tarsig,0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=TarArchiveInputStream.createInputStream(signature,0,dumpsigLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dupsig,0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(signature.length);signatureLength=in.read(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(signatureLength);signatureLength=in.read(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(strategy.length);signatureLength=in.read(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig.length);signatureLength=in.read(dumpsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDumpArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDumpArchiveInputStream(in);}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewArchiveArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227Thread.currentThread().setContextClassLoader(TarArchiveInputStream.class);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227Thread.currentThread().setContextClassLoader(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(tarsig,signatureLength)||DUMP.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(tarsig,signatureLength)||tais.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(signature,32)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(tarsig,32)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(dumpsig,DUMP)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(dumpsig,512)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumpArchiveInputStream.matches(dirty,32)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength==2){thrownewIllegalArgumentException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength==2){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(signatureLength,dumpsig.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(signatureLength+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsigLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(JARArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(signatureLength,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(fragment,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(tarheader,signatureLength)||DUMPArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(tarheader,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(strategy.length);signatureLength=in.read(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=this.tais.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=TarArchiveInputStream.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){in.mark(dumpsig.length);signatureLength=in.read(signature);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=0){in.mark(dumpsig.length);signatureLength=in.read(signature);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){in.mark(dumpsig.length);signatureLength=in.read(signature);}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){in.mark(dumpsig.length);signatureLength=in.read(signature);}else{returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(dumpsig,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength<2){thrownewIllegalArgumentException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength<2){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227nisipLength=in.read(dump);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){in.mark(dumpsig.length);signatureLength=in.read(dumpsig);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=0){in.mark(dumpsig.length);signatureLength=in.read(dumpsig);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){in.mark(dumpsig.length);signatureLength=in.read(dumpsig);}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){in.mark(dumpsig.length);signatureLength=in.read(dumpsig);}else{returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=0){in.mark(dumpsig.length);signatureLength=in.read(dumpsig);}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dumpsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(tarsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig.length+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig.length,dumpsig.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(dumpsig,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DebugArchiveInputStream.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(dumpsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(tarsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(dumpsig,32)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=2){thrownewIllegalArgumentException("".);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227validate(dumpsig,0,signatureLength)){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==1){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227validate(dumpsig,0,signatureLength){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(dumpsig,signatureLength)||TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,dumpsig)||TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,dumpsig.length)||TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,signatureLength)||TarArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(tarheader,DEPRECATED)||TarArchiveInputStream.matches(signature,DEPRECATED)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(JARArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.set(dumpsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227tais.mark(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DebugArchiveInputStream.matches(dumpsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(JAR.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(tarsig.matches(tarheader,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength!=2){thrownewIllegalStateException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength<2){thrownewIllegalStateException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength<2){thrownewIllegalStateException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength!=2){thrownewIllegalStateException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(tarheader,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(!TarArchiveInputStream.matches(tarheader,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(!TarArchiveInputStream.matches(dumpingsig,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dumpsig,0,dumpsig.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dupsig,0,dumpsig.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(fragment,0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=1){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=2){returnnewDumpArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDUMPArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDumpArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream(DEPRECATED);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=this.tarArchiveInputStream.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream(dirty);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==1){returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength!=2){returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDumpArchiveInputStream(dumpsig);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(dumpsig.matches(signatureLength,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(tais.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(!TarArchiveInputStream.matches(signatureLength,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DumArchiveInputStream.matches(signature,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227nisipLength=in.read(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227warning=newIllegalArgumentException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(signatureLength,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMP.matches(dirty,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength>=2){thrownewIllegalStateException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream(JAR);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.getInputStream(jAR);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227aughtExceptionHandler.throwAsIOException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227aughtExceptionHandler(in,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(signature,0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dirty,0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){in.mark(dumpsig.length);signatureLength=in.read(dumpsig);}else{thrownewIllegalStateException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(signature.length);signatureLength=in.read(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(TarArchiveInputStream.matches(signature,signatureLength)&&TarArchiveInputStream.matches(signature,signatureLength)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227in.mark(strategyLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227Thread.currentThread().interrupt();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227Thread.currentThread().getContextClassLoader().reset();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227Thread.currentThread().getContextClassLoader().setCurrentName("ArchiveInputStream");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227Thread.currentThread().getContextClassLoader().process(dumpsig);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227Thread.currentThread().getContextClassLoader().report(newIllegalArgumentException(""));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createArchiveInputStream(dumsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(signature,dumpsig.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(testsig,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227InputStreamin=tais.createInputStream(dirty);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){returnnewDumpArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==0){returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2){returnnewDumpArchiveInputStream(in,dumpsig);}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2||signatureLength==2){returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength<2){returnnewDumpArchiveInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227while(signatureLength<2){returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2||in.mark(signatureLength)<2){returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(signatureLength==2||signatureLength<2){returnnewDumpArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java227if(DUMPArchiveInputStream.matches(dirty,signatureLength)){
