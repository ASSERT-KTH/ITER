bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  byte  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  final  byte  signatureLength  =  in.read(signature);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	final  byte  signatureLength  =  in.read(signature);	  byte    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  String  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  String  signatureLength  =  in.read(signature);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	String  signatureLength  =  in.read(signature);	  byte    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  Integer  signatureLength  =  in.readInt();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.readInt();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.readInt();	  Integer    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read(signature.length);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read(signature.length);	  Integer    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature,  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read(signature,  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read(signature,  12);	  Integer    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read();	  Integer    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature,  10);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read(signature,  10);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read(signature,  10);	  Integer    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature,  32);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read(signature,  32);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read(signature,  32);	  Integer    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  in.read(signature,  4096);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.read(signature,  4096);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.read(signature,  4096);	  int    signatureLength    =    in.read(signature,    4096);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  10000);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  10000);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  10000);	  int    signatureLength    =    in.read(signature,    4096);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature,  4096);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read(signature,  4096);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read(signature,  4096);	  int    signatureLength    =    in.read(signature,    4096);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  1024);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  1024);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  1024);	  int    signatureLength    =    in.read(signature,    4096);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  byte  signatureLength  =  in.read(signature,  4096);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  byte  signatureLength  =  in.read(signature,  4096);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	byte  signatureLength  =  in.read(signature,  4096);	  int    signatureLength    =    in.read(signature,    4096);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  2096);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  2096);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  2096);	  int    signatureLength    =    in.read(signature,    4096);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  in.read();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.read();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.read();	  int    signatureLength    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  byte  signatureLength  =  in.read();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  byte  signatureLength  =  in.read();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	byte  signatureLength  =  in.read();	  int    signatureLength    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  int  signatureLength  =  in.readInt();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.readInt();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.readInt();	  int    signatureLength    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  final  int  signatureLength  =  in.length();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  final  int  signatureLength  =  in.length();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	final  int  signatureLength  =  in.length();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  InputStream  in  =  tais.getInputStream();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	InputStream  in  =  tais.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  in.mark(signature.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.mark(signature.length);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.mark(signature.length);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  final  int  signatureLength  =  in.mark(signature.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  final  int  signatureLength  =  in.mark(signature.length);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	final  int  signatureLength  =  in.mark(signature.length);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  InputStream  in  =  in.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  InputStream  in  =  in.getInputStream();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	InputStream  in  =  in.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(in.getPath());  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  InputStream  in  =  new  FileInputStream(in.getPath());  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	InputStream  in  =  new  FileInputStream(in.getPath());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.close();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.close();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  in.read(signature,  0,  12);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.read(signature,  0,  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.read(signature,  0,  12);	  int    signatureLength    =    in.read(signature,    0,    12);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature,  0,  12);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read(signature,  0,  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read(signature,  0,  12);	  int    signatureLength    =    in.read(signature,    0,    12);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  0,  10);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  0,  10);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  0,  10);	  int    signatureLength    =    in.read(signature,    0,    12);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  byte  signatureLength  =  in.read(signature,  0,  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  byte  signatureLength  =  in.read(signature,  0,  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	byte  signatureLength  =  in.read(signature,  0,  12);	  int    signatureLength    =    in.read(signature,    0,    12);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  0,  11);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  0,  11);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  0,  11);	  int    signatureLength    =    in.read(signature,    0,    12);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  in.read(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.read(signature,  tarheader);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.read(signature,  tarheader);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  tarheader,  tais);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  tarheader,  tais);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  tarheader,  tais);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  TAR);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  TAR);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  file);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  file);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  file);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  int  signatureLength  =  tarheader.read(signature,  in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  tarheader.read(signature,  in);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  tarheader.read(signature,  in);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  12);	  int    signatureLength    =    in.read(signature,    10);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  0);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  0);	  int    signatureLength    =    in.read(signature,    10);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  16);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  16);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  16);	  int    signatureLength    =    in.read(signature,    10);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  1);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  1);	  int    signatureLength    =    in.read(signature,    10);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  8);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  8);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  8);	  int    signatureLength    =    in.read(signature,    10);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  11);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  11);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  11);	  int    signatureLength    =    in.read(signature,    10);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  Integer  signatureLength  =  tais.read(signature);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  tais.read(signature);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  tais.read(signature);	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  byte  signatureLength  =  tais.read(signature);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  byte  signatureLength  =  tais.read(signature);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	byte  signatureLength  =  tais.read(signature);	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  final  int  signatureLength  =  tais.read(signature);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  final  int  signatureLength  =  tais.read(signature);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	final  int  signatureLength  =  tais.read(signature);	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  int  signatureLength  =  tais.read(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  tais.read(signature,  tarheader);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  tais.read(signature,  tarheader);	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  in.readFully(signature);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.readFully(signature);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.readFully(signature);	  in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.read(signature,  0,  signatureLength);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.read(signature,  0,  signatureLength);	  in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  in.read(signature.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.read(signature.length);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.read(signature.length);	  in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  in.skipChildren();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.skipChildren();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.skipChildren();	  in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature.length  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature.length  -  1);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature.length  -  1);	  int    signatureLength    =    in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature.length,  12);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature.length,  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature.length,  12);	  int    signatureLength    =    in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature.length  -  12);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature.length  -  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature.length  -  12);	  int    signatureLength    =    in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature.length  +  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature.length  +  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature.length  +  12);	  int    signatureLength    =    in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature.length  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature.length  -  2);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature.length  -  2);	  int    signatureLength    =    in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  byte  signatureLength  =  in.read(signature.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  byte  signatureLength  =  in.read(signature.length);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	byte  signatureLength  =  in.read(signature.length);	  byte    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  byte  signatureLength  =  in.read(signature,  10);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  byte  signatureLength  =  in.read(signature,  10);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	byte  signatureLength  =  in.read(signature,  10);	  byte    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  in.read(tarheader);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.read(tarheader);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.read(tarheader);	  in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  in.read(dump);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.read(dump);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.read(dump);	  in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  0,  16);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  0,  16);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  0,  16);	  int    signatureLength    =    in.read(signature,    0,    12);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  32);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  32);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  32);	  int    signatureLength    =    in.read(signature,    10);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
60	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read(signature,  tarheader);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read(signature,  tarheader);	  Integer    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  100);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  100);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  100);	  int    signatureLength    =    in.read(signature,    4096);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
62	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	InputStream  in  =  new  ZipInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
63	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	InputStream  in  =  new  ZipInputStream(in.getPath());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  InputStream  in  =  tais.createInputStream(signature);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  InputStream  in  =  tais.createInputStream(signature);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	InputStream  in  =  tais.createInputStream(signature);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  int  signatureLength  =  tais.read(signature.length);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  tais.read(signature.length);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  tais.read(signature.length);	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  int  signatureLength  =  tais.read(signature,  10);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  tais.read(signature,  10);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  tais.read(signature,  10);	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  int  signatureLength  =  tais.read(signature,  4096);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  tais.read(signature,  4096);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  tais.read(signature,  4096);	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  int  signatureLength  =  in.read(tarheader,  signature);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(tarheader,  signature);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(tarheader,  signature);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  tarheader.length);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  tarheader.length);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  int  signatureLength  =  in.read(dirty,  tarheader);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(dirty,  tarheader);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(dirty,  tarheader);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  int  signatureLength  =  tais.read(signature,  0,  12);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  tais.read(signature,  0,  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  tais.read(signature,  0,  12);	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  int  signatureLength  =  tais.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  tais.read();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  tais.read();	  int    signatureLength    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature.length  -  16);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature.length  -  16);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature.length  -  16);	  int    signatureLength    =    in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  tarheader).length;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  tarheader).length;  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  tarheader).length;	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  int  signatureLength  =  tarheader.read(signature,  in.readCharacters());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  tarheader.read(signature,  in.readCharacters());  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  tarheader.read(signature,  in.readCharacters());	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  DUMP);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  DUMP);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  DUMP);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  int  signatureLength  =  in.read(signature,  dumpsig.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  in.read(signature,  dumpsig.length);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  in.read(signature,  dumpsig.length);	  int    signatureLength    =    in.read(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  int  signatureLength  =  this.in.read(signature,  0,  12);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  int  signatureLength  =  this.in.read(signature,  0,  12);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	int  signatureLength  =  this.in.read(signature,  0,  12);	  int    signatureLength    =    in.read(signature,    0,    12);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
79	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature,  16);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  Integer  signatureLength  =  in.read(signature,  16);  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	Integer  signatureLength  =  in.read(signature,  16);	  Integer    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	InputStream  in  =  this.archiverName.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
81	[BUG]  [BUGGY]  in.setLength(in.getLength());  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  in.setLength(in.getLength());  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	in.setLength(in.getLength());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  InputStream  in  =  new  byte[12];  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {    [BUGGY]  InputStream  in  =  new  byte[12];  [BUGGY]    in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	210	210	1	replace	InputStream  in  =  new  byte[12];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
