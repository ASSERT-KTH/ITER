projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||!in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&!in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||!in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()||in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.read());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=tais.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getArchiveInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getVersion());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()||!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||!in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(signature==null||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()||!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||!in.isSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||!in.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.printSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)&&signatureLength>0){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null){thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null){thrownewIllegalArgumentException("Markmustnotbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null){thrownewIllegalArgumentException("Markmustbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null){thrownewIllegalArgumentException("Markisnotsupported.");}else{in.close();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null){thrownewIllegalArgumentException("Markisnotsupported..");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getBytes());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in,4096);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.readLine());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in,this.tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.mark()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in>=null||in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markInt()||!in.markInt()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read(),4096);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read()+File.separator);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.readLine());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.readUTF());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read()+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read(),file);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAME)&&signatureLength>0){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)&&signatureLength>12){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)&&signatureLength>2){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)&&signatureLength==0){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(signature!=null||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()&&in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()||in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()||in.mark()<=0){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.mark()||!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.mark()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markInt()||!in.markInt()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markBytes()||!in.markBytes()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&!in.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||!in.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||!in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME)||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(64);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(0);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(System.err);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(System.out);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(System.in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()||!in.mark()||!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()>0||!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark(signature.length)||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||!in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markInt()||!in.markInt()||!in.markInt()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203aughtExceptionHandler{thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in==null){thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203thrownewIllegalArgumentException("Markisnotsupported.");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){if(in==null){thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){if(in==null){thrownewIllegalArgumentException("Markisnotsupported.");}else{in.close();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203thrownewIllegalArgumentException("Markisnotsupported.");}else{in.close();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalbytesignatureLength=in.read(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read(signature.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read(in.mark(signature.length));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read(signature,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalStringsignatureLength=in.read(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in>=null||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(signature!=null||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in>>null||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()&&in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAMES)||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.enabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()&&!in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()||!in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAMES)||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAMES)||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||!in.isSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(signature==null||!in.isSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.isSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||!in.isStream()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.read(),in.read());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.read(),in.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.readUTF());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.read()+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.read()+File.separator);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=TarArchiveInputStream.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=tais.getInputStream("UTF-8");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.tais.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.tarheader.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=tais.getInputStream(archiverName);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=tais.readInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()&&!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in==null){thrownewIllegalArgumentException("Markmustbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){thrownewIllegalArgumentException("Markmustbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203aughtExceptionHandler{thrownewIllegalArgumentException("Markmustbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.WRITE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream("UTF-8");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream(IResource.DEPRECATED);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getOutputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream(IResource.DEFAULT_VERSION);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream(IResource.DEFAULT_SIZE);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()||in.mark()||in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()||in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.markSupported()||in.reset()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()||in.mark()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES||in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||in.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||in.isEnabled(Feature.WRITE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||in.isEnabled(Feature.QUOTE_FIELD_SIGNATURES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||in.isEnabled(Feature.QUOTE_FIELD_FACTOR)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in==null){thrownewIllegalArgumentException("Markmustnotbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){thrownewIllegalArgumentException("Markmustnotbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203aughtExceptionHandler{thrownewIllegalArgumentException("Markmustnotbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203thrownewIllegalArgumentException("Markmustnotbenull.");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()&&!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()||!in.mark()||!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()&&in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NON_NULL)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getRawClass());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getVersion()+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getVersion(),this);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getVersion(),file);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getVersion(),4096);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getAbsolutePath());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.openStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.getInputStream("UTF-8");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.toInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=archiverName.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.toByteArray();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&in.printSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.printSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.printSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getRawInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getArchiveInputStream(in.getVersion());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getRandomArchiveInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getClass().getResourceAsStream("ArchiveInputStream");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getInternalInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getArchiveInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getVersion(),Integer.MAX_VALUE);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)&&signatureLength>1){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)&&signatureLength>0){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read(),TarArchiveInputStream.DEFAULT);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read(),in.read());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||!in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||!in.markSupported()||!in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markSupported()||!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||!in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null&&in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in!=null.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||out.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){thrownewIllegalArgumentException("Streammustnotbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in==null){thrownewIllegalArgumentException("Streammustnotbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in>=null||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&!in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.getInputStream(this.tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()||in.mark(signature.length)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){thrownewIllegalArgumentException("Markmustbenull..");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){finalintsignatureLength=in.read(signature);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()||!in.reset()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read(dump);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.printInput()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||!in.isInput()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(signature!=null||in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in,TarArchiveInputStream.DEFAULT);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in,this);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){finalintsignatureLength=in.read(signature);if(signatureLength==0){thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){finalin=in.read();if(in!=null){thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){finalintsignatureLength=in.read();if(signatureLength==0){thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){finalintsignatureLength=in.read(signature);if(signatureLength==0){returnnewZipArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){finalintsignatureLength=in.read(signature);if(signatureLength==0){thrownewIllegalArgumentException("Markisnotsupported.n");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){finalintsignatureLength=in.read(signature);if(signatureLength==0){thrownewIllegalArgumentException("Markmustnotbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream(in.getVersion());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream(archiverName);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream(in.readLine());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203While(in!=null){thrownewIllegalArgumentException("Markmustnotbenull..");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&in.markSupported()&&in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.read()||in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.mark()||in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getZipArchiveInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getCurrentInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getResourceInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getRandomInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.mark()||!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||!in.markSupported()||!in.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.readBytes());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_SIGNATURES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_FACTOR)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME||isEnabled(Feature.QUOTE_FIELD_NAME))){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_LITERAL_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||in.isEnabled(Feature.QUOTE_FIELD_RANGE)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||in.isEnabled(Feature.QUOTE_FIELD_FILENAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markSupported()||!in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markBytes()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markDigits()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markFull()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markInvalid()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markTransient()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null||in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.read(),Integer.MAX_VALUE);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||in.close()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(signature==null||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()||in.printSurrogate()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=getInputStream(JAR);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203[Delete]
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203}elseif(in==null){thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203}elseif(in==null){thrownewIllegalArgumentException("Markisnotsupported..");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203}elseif(in==null){thrownewIllegalArgumentException("Markisnotsupported.".);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203aughtExceptionHandler(in,"Markisnotsupported.");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null&&!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null&&in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(isEnabled(Feature.QUOTE_FIELD_NAME)&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null&&in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||isEnabled(Feature.QUOTE_FIELD_NAME,AR)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||!in.markSupported()&&in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(signature==null||in.markSupported()||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in!=null&&in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.markSupported()||in.isEnabled(Feature.QUOTE_FIELD_NAMES)&&signatureLength>0){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markSupported()||!in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.startsWith("Archive")?this.archiverName.getInputStream():null;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.startsWith("ArchiveInputStream")?this.archiverName.getInputStream():null;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=this.archiverName.startsWith("/")?this.archiverName.getInputStream():null;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in.mark()==0||!in.mark()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getVersion(),in.readUTF());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.getVersion(),in.readBytes());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||!in.isInputStream()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.isBridge()||in.markSupported()||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in!=null||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=newZipInputStream(in.read(),JAR);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=createArchiveInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=tais.getInputStream(PRINT_SIGNATURE);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203InputStreamin=tais.getInputStream("jAR");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAME)||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203Thread.currentThread().getContextClassLoader().report(newIllegalStateException("Markmustnotbenull.");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203Thread.currentThread().getContextClassLoader().loadClass("org.apache.jdk.internal.ArchiveInputStream");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203Thread.currentThread().getContextClassLoader().loadClass("org.apache.commons.core.ArchiveInputStream");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203Thread.currentThread().getContextClassLoader().report(newIllegalStateException("Markmustnotbenull."));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203Thread.currentThread().getContextClassLoader().setCurrentName("ArchiveInputStream");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(in==null||in.markDigits()||!in.markDigits()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203>>[Delete]elseif(in==null){thrownewIllegalArgumentException("Markmustbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203}elseif(in==null){thrownewIllegalArgumentException("Markmustbenull.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203aughtException("Markmustbenull.");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203>>[Delete]elseif(in==null){thrownewIllegalArgumentException("Markmustbenull..");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(signature.length==0||!in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203ArchiveInputStreamin=newArchiveInputStream(in.read(),in.available());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203if(!in.markSupported()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||in.markSupported()){
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read(signature,4096);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java203finalintsignatureLength=in.read(signature)+1;
