bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tais.mark(signature.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.getValue());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.getValue());	  tais.mark(signature.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
2	[BUG]  [BUGGY]  tais.mark(signature.toString()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toString()  +  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toString()  +  1);	  tais.mark(signature.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
3	[BUG]  [BUGGY]  tais.mark(signature.toCharArray());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toCharArray());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toCharArray());	  tais.mark(signature.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature.toString());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature.toString());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature.toString());	  tais.mark(signature.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[16];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  new  byte[16];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[16];	  final    byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[6];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  new  byte[6];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[6];	  final    byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[10];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  new  byte[10];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[10];	  final    byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[1];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  new  byte[1];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[1];	  final    byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[4];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  new  byte[4];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[4];	  final    byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[2];  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  new  byte[2];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[2];	  final    byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  in.mark(signature.length  /  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  /  2);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  /  2);	  in.mark(signature.length    /    12);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
12	[BUG]  [BUGGY]  in.mark(signature.length  *  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  *  12);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  *  12);	  in.mark(signature.length    /    12);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
13	[BUG]  [BUGGY]  in.mark(signature.length  /  10);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  /  10);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  /  10);	  in.mark(signature.length    /    12);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
14	[BUG]  [BUGGY]  in.mark(signature.length  /  4);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  /  4);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  /  4);	  in.mark(signature.length    /    12);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
15	[BUG]  [BUGGY]  in.mark(signature.length  /  3);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  /  3);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  /  3);	  in.mark(signature.length    /    12);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
16	[BUG]  [BUGGY]  in.mark(signature.length  /  8);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  /  8);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  /  8);	  in.mark(signature.length    /    12);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
17	[BUG]  [BUGGY]  InputStream  in  =  getOutputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  getOutputStream();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  getOutputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
18	[BUG]  [BUGGY]  InputStream  in  =  this.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  this.getInputStream();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  this.getInputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
19	[BUG]  [BUGGY]  InputStream  in  =  getInputStream().readInt();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  getInputStream().readInt();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  getInputStream().readInt();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
20	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  getInputStream(),  signatureLength);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  getInputStream(),  signatureLength);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
21	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(true);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  getInputStream(true);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  getInputStream(true);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
22	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  getInputStream(in.getVersion());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  getInputStream(in.getVersion());	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
23	[BUG]  [BUGGY]  InputStream  in  =  tais.readIn(signature);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readIn(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readIn(signature);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
24	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully(signature);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readFully(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readFully(signature);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
25	[BUG]  [BUGGY]  InputStream  in  =  this.tais.readIn();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  this.tais.readIn();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  this.tais.readIn();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
26	[BUG]  [BUGGY]  InputStream  in  =  tais.readIn(in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readIn(in);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readIn(in);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
27	[BUG]  [BUGGY]  InputStream  in  =  tais.readFile();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readFile();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readFile();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
28	[BUG]  [BUGGY]  tais.mark(signature.length  +  11);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  +  11);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  +  11);	  tais.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  tais.mark(signature.length  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  +  2);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  +  2);	  tais.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  tais.mark(signature.length  +  6);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  +  6);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  +  6);	  tais.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  tais.mark(signature.length  +  4);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  +  4);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  +  4);	  tais.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  tais.mark(signature.length  +  3);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  +  3);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  +  3);	  tais.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  this.tais.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
34	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.getInputStream( "UTF-8 ");	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
35	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  this.tarheader.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
36	[BUG]  [BUGGY]  InputStream  in  =  tais.readInputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readInputStream();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
37	[BUG]  [BUGGY]  InputStream  in  =  TarArchiveInputStream.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  TarArchiveInputStream.getInputStream();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  TarArchiveInputStream.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
38	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.getInputStream(archiverName);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.getInputStream(archiverName);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
39	[BUG]  [BUGGY]  in.skipChildren();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.skipChildren();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.skipChildren();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
40	[BUG]  [BUGGY]  in.markSupported();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.markSupported();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.markSupported();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
41	[BUG]  [BUGGY]  in.defaultRead();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.defaultRead();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.defaultRead();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
42	[BUG]  [BUGGY]  in.defaultWrite();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.defaultWrite();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.defaultWrite();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
43	[BUG]  [BUGGY]  in.defaultReader();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.defaultReader();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.defaultReader();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  in.defaultReader().write(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.defaultReader().write(signature,  tarheader);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.defaultReader().write(signature,  tarheader);	  in.defaultReader().write(signature);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
45	[BUG]  [BUGGY]  in.read().write(signature);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.read().write(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.read().write(signature);	  in.defaultReader().write(signature);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
46	[BUG]  [BUGGY]  in.defaultReader().write(signature,  0,  12);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.defaultReader().write(signature,  0,  12);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.defaultReader().write(signature,  0,  12);	  in.defaultReader().write(signature);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
47	[BUG]  [BUGGY]  in.write(signature);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.write(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.write(signature);	  in.defaultReader().write(signature);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
48	[BUG]  [BUGGY]  in.defaultReader().write(signature,  10);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.defaultReader().write(signature,  10);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.defaultReader().write(signature,  10);	  in.defaultReader().write(signature);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
49	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[32];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[32];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[32];	  final    byte[]    signature    =    new    byte[16];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[64];  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[64];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[64];	  final    byte[]    signature    =    new    byte[16];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[11];  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[11];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[11];	  final    byte[]    signature    =    new    byte[16];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[7];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[7];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[7];	  final    byte[]    signature    =    new    byte[6];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature.length  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature.length  -  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature.length  -  1);	  TarArchiveInputStream.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
54	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature.length  +  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature.length  +  12);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature.length  +  12);	  TarArchiveInputStream.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature,  in.length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature,  in.length);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature,  in.length);	  TarArchiveInputStream.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature.length  +  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature.length  +  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature.length  +  1);	  TarArchiveInputStream.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature.length  -  2);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature.length  -  2);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature.length  -  2);	  TarArchiveInputStream.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
58	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature,  tarheader);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature,  tarheader);	  TarArchiveInputStream.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
59	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
60	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());  tais.mark(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());  tais.mark(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());  tais.mark(signature);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
61	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
62	[BUG]  [BUGGY]  tais.markSupported();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.markSupported();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.markSupported();	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
63	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(in);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
64	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  signature);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  signature);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
65	[BUG]  [BUGGY]  in.readFully(signature);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.readFully(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.readFully(signature);	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
66	[BUG]  [BUGGY]  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.read(signature);	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
67	[BUG]  [BUGGY]  in.readFully();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.readFully();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.readFully();	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
68	[BUG]  [BUGGY]  final  byte  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte  signatureLength  =  in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte  signatureLength  =  in.read(signature);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  int  signatureLength  =  in.read();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  int  signatureLength  =  in.read();	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  int  signatureLength  =  in.read(signature,  tarheader);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  int  signatureLength  =  in.read(signature,  tarheader);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  final  String  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  String  signatureLength  =  in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  String  signatureLength  =  in.read(signature);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
72	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature,  10);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  int  signatureLength  =  in.read(signature,  10);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  int  signatureLength  =  in.read(signature,  10);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature,  0,  12);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  int  signatureLength  =  in.read(signature,  0,  12);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  int  signatureLength  =  in.read(signature,  0,  12);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  tais.mark(signature.toByteArray()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toByteArray()  +  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toByteArray()  +  1);	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
75	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature.toByteArray());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature.toByteArray());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature.toByteArray());	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
76	[BUG]  [BUGGY]  tais.mark(signature.toByteArray()).reset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toByteArray()).reset();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toByteArray()).reset();	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
77	[BUG]  [BUGGY]  tais.mark(signature.toByteArray(),  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toByteArray(),  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toByteArray(),  1);	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
78	[BUG]  [BUGGY]  tais.mark(signature.toByteArray(),  10);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toByteArray(),  10);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toByteArray(),  10);	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
79	[BUG]  [BUGGY]  in.mark(signature.length  *  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  *  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  *  1);	  in.mark(signature.length    /    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
80	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[1];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[1];	  final    byte[]    signature    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[4];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[4];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[4];	  final    byte[]    signature    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
82	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[2];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[2];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[2];	  final    byte[]    signature    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
83	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[14];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[14];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[14];	  final    byte[]    signature    =    new    byte[10];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
84	[BUG]  [BUGGY]  tais.mark(signature.getBytes()  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.getBytes()  +  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.getBytes()  +  1);	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
85	[BUG]  [BUGGY]  tais.mark(signature.getBytes(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.getBytes(),  signatureLength);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.getBytes(),  signatureLength);	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
86	[BUG]  [BUGGY]  tais.mark(signature.toBytes());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toBytes());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toBytes());	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
87	[BUG]  [BUGGY]  tais.setBytes(signature.getBytes());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.setBytes(signature.getBytes());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.setBytes(signature.getBytes());	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
88	[BUG]  [BUGGY]  tais.mark(signature.getBytes(),  in);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.getBytes(),  in);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.getBytes(),  in);	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
89	[BUG]  [BUGGY]  tais.mark(signature.getBytes(),  signature.length);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.getBytes(),  signature.length);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.getBytes(),  signature.length);	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  byte[]  dumpsig  =  new  byte[16];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  new  byte[16];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  new  byte[16];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
91	[BUG]  [BUGGY]  byte[]  signature  =  new  byte[16];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  signature  =  new  byte[16];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  signature  =  new  byte[16];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  byte[]  signature  =  new  byte[6];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  signature  =  new  byte[6];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  signature  =  new  byte[6];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
93	[BUG]  [BUGGY]  byte[]  dumpsig  =  new  byte[6];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  new  byte[6];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  new  byte[6];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
94	[BUG]  [BUGGY]  byte[]  dumpsig  =  new  byte[1];  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  new  byte[1];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  new  byte[1];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
95	[BUG]  [BUGGY]  byte[]  signature  =  new  byte[1];  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  signature  =  new  byte[1];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  signature  =  new  byte[1];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
96	[BUG]  [BUGGY]  in.mark(signature.length  /  11);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  /  11);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  /  11);	  in.mark(signature.length    +    11);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
97	[BUG]  [BUGGY]  byte[]  signature  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  signature  =  in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  signature  =  in.read(signature);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
98	[BUG]  [BUGGY]  byte[]  signature  =  in.read();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  signature  =  in.read();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  signature  =  in.read();	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
99	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  in.read(signature);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
100	[BUG]  [BUGGY]  byte[]  dumpsig  =  in.read();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  in.read();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  in.read();	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
101	[BUG]  [BUGGY]  byte[]  signaturesig  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  signaturesig  =  in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  signaturesig  =  in.read(signature);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
102	[BUG]  [BUGGY]  byte[]  dumpsig  =  in.read(signature,  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  in.read(signature,  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  in.read(signature,  1);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
103	[BUG]  [BUGGY]  tais.mark(signature.length  -  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  -  2);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  -  2);	  tais.mark(signature.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
104	[BUG]  [BUGGY]  tais.mark(signature.length  -  3);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  -  3);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  -  3);	  tais.mark(signature.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
105	[BUG]  [BUGGY]  tais.mark(signature.length  -  12);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  -  12);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  -  12);	  tais.mark(signature.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
106	[BUG]  [BUGGY]  tais.mark(signature.length  -  4);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  -  4);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  -  4);	  tais.mark(signature.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
107	[BUG]  [BUGGY]  tais.mark(signature.length  -  6);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  -  6);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  -  6);	  tais.mark(signature.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
108	[BUG]  [BUGGY]  final  byte[]  dumpsignature  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsignature  =  in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsignature  =  in.read(signature);	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
109	[BUG]  [BUGGY]  byte[]  dumpsignature  =  in.read();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsignature  =  in.read();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsignature  =  in.read();	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
110	[BUG]  [BUGGY]  byte[]  dumpsignature  =  in.read(signature,  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsignature  =  in.read(signature,  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsignature  =  in.read(signature,  1);	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
111	[BUG]  [BUGGY]  byte[]  dumpsignature  =  in.read(signature,  2);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsignature  =  in.read(signature,  2);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsignature  =  in.read(signature,  2);	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
112	[BUG]  [BUGGY]  InputStream  in  =  tais.read();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.read();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.read();	  InputStream    in    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
113	[BUG]  [BUGGY]  InputStream  in  =  tais.read(signature,  4096);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.read(signature,  4096);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.read(signature,  4096);	  InputStream    in    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
114	[BUG]  [BUGGY]  InputStream  in  =  tais.read(signature,  10);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.read(signature,  10);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.read(signature,  10);	  InputStream    in    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
115	[BUG]  [BUGGY]  InputStream  in  =  tais.read(signature,  2);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.read(signature,  2);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.read(signature,  2);	  InputStream    in    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
116	[BUG]  [BUGGY]  InputStream  in  =  tais.readInt();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readInt();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readInt();	  InputStream    in    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
117	[BUG]  [BUGGY]  byte[]  dumpsignature  =  in.read(duplicate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsignature  =  in.read(duplicate);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsignature  =  in.read(duplicate);	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
118	[BUG]  [BUGGY]  byte[]  dumpsignature  =  in.read(tarheader);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsignature  =  in.read(tarheader);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsignature  =  in.read(tarheader);	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
119	[BUG]  [BUGGY]  byte[]  dumpsignature  =  in.read(dirty);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsignature  =  in.read(dirty);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsignature  =  in.read(dirty);	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
120	[BUG]  [BUGGY]  byte[]  dumpsignature  =  in.read(fragment);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsignature  =  in.read(fragment);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsignature  =  in.read(fragment);	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
121	[BUG]  [BUGGY]  in.mark(signature.length  +  16);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  +  16);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  +  16);	  in.mark(signature.length    +    13);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
122	[BUG]  [BUGGY]  byte[]  dumpsig  =  in.read(duplicate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  in.read(duplicate);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  in.read(duplicate);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
123	[BUG]  [BUGGY]  byte[]  dumpsig  =  in.read(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  in.read(signature,  tarheader);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  in.read(signature,  tarheader);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
124	[BUG]  [BUGGY]  byte[]  dumpsig  =  in.read(dirty);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  in.read(dirty);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  in.read(dirty);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
125	[BUG]  [BUGGY]  byte[]  dumpsig  =  in.read(signature,  2);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  in.read(signature,  2);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  in.read(signature,  2);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
126	[BUG]  [BUGGY]  InputStream  in  =  tais.readIn(archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readIn(archiverName);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readIn(archiverName);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
127	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readFully();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readFully();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
128	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[64];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  new  byte[64];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[64];	  final    byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
129	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[256];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  dumpsig  =  new  byte[256];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[256];	  final    byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
130	[BUG]  [BUGGY]  in.flush();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.flush();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.flush();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
131	[BUG]  [BUGGY]  InputStream  in  =  tais.read(signature,  0,  12);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.read(signature,  0,  12);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.read(signature,  0,  12);	  InputStream    in    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
132	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[8];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  byte[]  signature  =  new  byte[8];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  byte[]  signature  =  new  byte[8];	  final    byte[]    signature    =    new    byte[10];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
133	[BUG]  [BUGGY]  in.mark(signature.length  -  16);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  -  16);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  -  16);	  in.mark(signature.length    -    11);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
134	[BUG]  [BUGGY]  tais.mark(signature.getByteArray());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.getByteArray());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.getByteArray());	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
135	[BUG]  [BUGGY]  tais.mark(signature.toByteArray(),  in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toByteArray(),  in);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toByteArray(),  in);	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
136	[BUG]  [BUGGY]  tais.markSupported(signature.toByteArray());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.markSupported(signature.toByteArray());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.markSupported(signature.toByteArray());	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
137	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature,  32);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  int  signatureLength  =  in.read(signature,  32);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  int  signatureLength  =  in.read(signature,  32);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
138	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature,  4096);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  int  signatureLength  =  in.read(signature,  4096);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  int  signatureLength  =  in.read(signature,  4096);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
139	[BUG]  [BUGGY]  byte[]  dumpsig  =  new  byte[4];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  new  byte[4];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  new  byte[4];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
140	[BUG]  [BUGGY]  byte[]  dumpsig  =  new  byte[10];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  new  byte[10];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  new  byte[10];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
141	[BUG]  [BUGGY]  byte[]  dumpsig  =  new  byte[64];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  new  byte[64];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  new  byte[64];	  byte[]    dumpsig    =    new    byte[12];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
142	[BUG]  [BUGGY]  in.markSupported().write(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.markSupported().write(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.markSupported().write(signature);	  in.defaultReader().write(signature);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
143	[BUG]  [BUGGY]  in.defaultReader().write(signature,  4096);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.defaultReader().write(signature,  4096);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.defaultReader().write(signature,  4096);	  in.defaultReader().write(signature);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
144	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  getInputStream(archiverName);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  getInputStream(archiverName);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
145	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature,  in.read());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature,  in.read());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature,  in.read());	  TarArchiveInputStream.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
146	[BUG]  [BUGGY]  tais.markSupported(signature.toString());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.markSupported(signature.toString());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.markSupported(signature.toString());	  tais.mark(signature.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
147	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  this.archiverName.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
148	[BUG]  [BUGGY]  tais.setSupported(true);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.setSupported(true);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.setSupported(true);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
149	[BUG]  [BUGGY]  tais.reset();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.reset();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.reset();	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
150	[BUG]  [BUGGY]  tais.mark(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature,  tarheader);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature,  tarheader);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
151	[BUG]  [BUGGY]  tais.release(signature);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.release(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.release(signature);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
152	[BUG]  [BUGGY]  tais.add(signature);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.add(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.add(signature);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
153	[BUG]  [BUGGY]  tais.mark(signature.getBytes( "UTF-8 "));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.getBytes( "UTF-8 "));  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.getBytes( "UTF-8 "));	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
154	[BUG]  [BUGGY]  tais.markSupported(signature.getBytes());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.markSupported(signature.getBytes());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.markSupported(signature.getBytes());	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
155	[BUG]  [BUGGY]  tais.mark(in.getBytes());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(in.getBytes());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(in.getBytes());	  tais.mark(signature.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
156	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature.length  -  12);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  TarArchiveInputStream.mark(signature.length  -  12);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	TarArchiveInputStream.mark(signature.length  -  12);	  TarArchiveInputStream.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
157	[BUG]  [BUGGY]  tais.mark(signature.length  +  13);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  +  13);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  +  13);	  tais.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
158	[BUG]  [BUGGY]  tais.mark(signature.length  +  16);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  +  16);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  +  16);	  tais.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
159	[BUG]  [BUGGY]  tais.close();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.close();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.close();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
160	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(in.read());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  new  FileInputStream(in.read());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  new  FileInputStream(in.read());	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
161	[BUG]  [BUGGY]  InputStream  in  =  new  byte[12];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  new  byte[12];  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  new  byte[12];	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
162	[BUG]  [BUGGY]  in.skip();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.skip();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.skip();	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
163	[BUG]  [BUGGY]  tais.mark(signature.toString()  + ".js ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toString()  + ".js ");  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toString()  + ".js ");	  tais.mark(signature.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
164	[BUG]  [BUGGY]  InputStream  in  =  tais.read(signature,  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.read(signature,  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.read(signature,  1);	  InputStream    in    =    tais.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
165	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
166	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIZE);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIZE);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.getInputStream(PRINT_SIZE);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
167	[BUG]  [BUGGY]  InputStream  in  =  getInputStream().readLine();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  getInputStream().readLine();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  getInputStream().readLine();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
168	[BUG]  [BUGGY]  final  int  signatureLength  =  this.in.read(signature);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  final  int  signatureLength  =  this.in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	final  int  signatureLength  =  this.in.read(signature);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
169	[BUG]  [BUGGY]  byte[]  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  signatureLength  =  in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  signatureLength  =  in.read(signature);	  byte[]    dumpsignature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
170	[BUG]  [BUGGY]  tais.write(signature);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.write(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.write(signature);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
171	[BUG]  [BUGGY]  tais.mark(signature,  in.read());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature,  in.read());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature,  in.read());	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
172	[BUG]  [BUGGY]  tais.print(signature);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.print(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.print(signature);	  tais.mark(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
173	[BUG]  [BUGGY]  InputStream  in  =  tais.readIO();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readIO();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readIO();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
174	[BUG]  [BUGGY]  InputStream  in  =  tais.readUTF();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  InputStream  in  =  tais.readUTF();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	InputStream  in  =  tais.readUTF();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
175	[BUG]  [BUGGY]  tais.mark(signature.toByteArray(),  in.toByteArray());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toByteArray(),  in.toByteArray());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toByteArray(),  in.toByteArray());	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
176	[BUG]  [BUGGY]  tais.mark(signature.toByteArray(),  signature.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.toByteArray(),  signature.length);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.toByteArray(),  signature.length);	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
177	[BUG]  [BUGGY]  tais.set(signature.toByteArray());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.set(signature.toByteArray());  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.set(signature.toByteArray());	  tais.mark(signature.toByteArray());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
178	[BUG]  [BUGGY]  tais.mark(signature.length  -  11);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  tais.mark(signature.length  -  11);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	tais.mark(signature.length  -  11);	  tais.mark(signature.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
179	[BUG]  [BUGGY]  in.mark(signature.length  -  13);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.mark(signature.length  -  13);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.mark(signature.length  -  13);	  in.mark(signature.length    +    13);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
180	[BUG]  [BUGGY]  byte[]  dumpsig  =  in.read(signature).toByteArray();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  in.read(signature).toByteArray();  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  in.read(signature).toByteArray();	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
181	[BUG]  [BUGGY]  byte[]  dumpsig  =  this.in.read(signature);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  byte[]  dumpsig  =  this.in.read(signature);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	byte[]  dumpsig  =  this.in.read(signature);	  byte[]    dumpsig    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
182	[BUG]  [BUGGY]  in.defaultReader().write(signature,  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];      [BUGGY]  in.defaultReader().write(signature,  1);  [BUGGY]      try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	208	208	1	replace	in.defaultReader().write(signature,  1);	  in.defaultReader().write(signature);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
