projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.closeEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSignatureLength());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSimpleName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getDescriptor());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signature));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getValue();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.toString();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getSimpleName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getRawEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getParent();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.getName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(tarheader):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TITLE_FONT:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST_ERROR:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signature),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(signatureLength):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?JAR:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.NONE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.close();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
