projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.closeEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSignatureLength());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSimpleName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getDescriptor());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signature));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getValue();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.toString();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getSimpleName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getRawEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getParent();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.getName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(tarheader):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TITLE_FONT:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST_ERROR:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signature),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(signatureLength):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?JAR:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.NONE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.close();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(signatureLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),this.signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),4096));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),0));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength+1));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),256));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getRawName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getLastEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getValueEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newIntegerArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(tais,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(tarheader):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(signatureLength):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais==null?newTarArchiveInputStream(tarheader):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais==null?newTarArchiveInputStream(signatureLength):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(tarheader,tais.getNextEntry()):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signature.length));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length+1));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength>0){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength<0){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().setContextClassLoader(TarArchiveInputStream.class);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().setContextClassLoader(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().setContextClassLoader(TarArchiveInputStream.class.getClassLoader());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245thrownewArchiveException("");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signature));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader+1));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length()));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader.getSignatureLength());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getEntryLength());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSignatureLength(),in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSignatureLength()+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<1){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength<=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength>512){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength<512){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TEST_ERROR:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST_ERROR:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null)TarArchiveInputStream.DEFAULT_TEST_ERROR:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST_ERROR:tais,signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245while(tais!=null){in=newTarArchiveInputStream(in,tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245InputStreamin=newFileInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245InputStreamin=newByteArrayInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength),tarheader.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength,tarheader.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength.intValue());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tarheader.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength.remaining());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,SignatureLength),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,SignatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(in!=null||tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength!=512){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength==512){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245InputStreamin=newFileInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||signatureLength!=512){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||in==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||signatureLength!=0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tarheader!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(Exceptione){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getSimpleName()+1;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais.getSimpleName()!=null){returntais.getSimpleName();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getSimpleName()+signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais.getSimpleName()==null){returntais.getSimpleName();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais.getSimpleName()!=null){returntais.getSimpleName();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais.getSimpleName()==null){returntais.getSimpleName();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getLastChild();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getRawParent();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));ta
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength<512){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2||tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>=0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),this.signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),4096);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),0);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(tais,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(tais,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(signatureLength,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,tarheader,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(!TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245ArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry()
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais.getValue()!=null){returntais.getValue();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getValue()+signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais.getValue()==null){returntais.getValue();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getValue()+1;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais.getValue()!=AR){returntais.getValue();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returntais.toString();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returntais.toString();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.toString()+signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returntais.toString();}else{System.arraycopy(tarheader,0,tais,0,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?JAR:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?JAR:tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?JAR:tais.getValue();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?JAR:tais.getEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getFullName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getName()+1;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getName()+signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getAbsolutePath();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader),signatureLength+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader),signatureLength,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader),signatureLength,0);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader),signatureLength,512);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader)+1,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader),signatureLength+2);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,32));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,100));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(signatureLength==0){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getSimpleName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader.getSimpleName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getVersion());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(256);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(64);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(512);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(signatureLength+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(0);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(-1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.closePath();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.closeInput();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){try{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){try{returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null)TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=0){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=512){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(signatureLength!=0){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signature));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(tarheader,signatureLength):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?newTarArchiveInputStream(signatureLength):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?newTarArchiveInputStream(tarheader):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais!=null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),this);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength),tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TEST:in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null)TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST:in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(tais.getName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais.getName()!=null){returnnewTarArchiveInputStream(tais.getName());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(tais.getName());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),TarArchiveInputStream.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setSignatureLength(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(entryLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException(
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TITLE_FONT:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TITLE_FONT:in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null)TarArchiveInputStream.DEFAULT_TITLE_FONT:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TITLE_FONT:tais,signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(in,tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamin=newTarArchiveInputStream(tais,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null&&tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChunk());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finaltry{if(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getDescriptor());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader.getDescriptor());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==1){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,0,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,DUMP);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(signatureLength,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,signatureLength+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,newString(signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nas=newTarArchiveInputStream(newByteArrayInputStream(tarheader));nais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>256){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245while(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245while(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader,tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){returnnewTarArchiveInputStream(in,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||in==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245ArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature),tais.getNextEntry());}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null)TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST:tais,signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(signatureLength+1):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.NONE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.NONE:tais,signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.NONE:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.NONE:in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||signatureLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||signatureLength==512){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(tarheader):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(signatureLength):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in,signatureLength):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais==null?newTarArchiveInputStream(tarheader):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(tarheader,in):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null&&tais.getType()==Token.GETPROP){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null&&tais.getType()==Token.EXPR_RESULT){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null&&tais.getType()==Token.STRING){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),TarArchiveInputStream.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+1));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245while(tais!=null){in=newTarArchiveInputStream(in,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(tarheader,signatureLength)){if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,32));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,4096));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,100));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,1024));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,64));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,512));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,0,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,4096));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,32));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,100));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,1024));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,DUMP));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader.getName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null)TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||in==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null||in==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais==null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,tarheader,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}else{returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}else{returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setName(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setString(newString(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setString("ArchiveInputStream");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setPropertyName(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245&&tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?null:tais.getValue();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245while(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==256){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:TAR_ArchiveInputStream.DEFAULT_SIGNATURE;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,TarArchiveInputStream));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,TarArchiveInputStream.DEFAULT));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,TarArchiveInputStream.DEFAULT_SIZE),TarArchiveInputStream);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?null:tais.getName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getArchiveName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.NONE:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.NONE:tarheader;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),0);tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setArchiveEntryLength(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?null:tais.toString();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?null:tais.toString();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.toString()+1;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getString();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TEST_ERROR:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST_ERROR:TarArchiveInputStream.DEFAULT_TEST_ERROR;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST_ERROR:newTarArchiveInputStream(tais,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,0);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,0);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getValue());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getName(),in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getQualifiedName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength<0){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength<256){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength<1){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais==null||signatureLength<512){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,16));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),256);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),512);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),-1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>=0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in):in.readLine();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?null:tais.getParent();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?null:tais.getParent();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?null:tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?null:tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?JAR:tais.getParent();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?JAR:TarArchiveInputStream.DEFAULT;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(newString(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setName(newString(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader),this.signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getNextEntry()));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newIntegerArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader+1));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:TAR_ArchiveInputStream.DEFAULT_SIGNATURE;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,64));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntryLength(newString(tarheader,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(signature):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in):tais.getLastEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in):tais.getParentEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(64));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try==null){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().registerInternal(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().setCurrentName(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().interrupt();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.closeArchive();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));ta
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));ta
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==256){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));ta
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));t
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245safeTarArchiveInputStream(tais){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245while(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getNumberEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||in!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||in!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245natureLength>0){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().setScope(newFileScope(tarheader),tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().setScope(newFileScope(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.getName(),in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.getValue());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.getSimpleName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.getName(),tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.getParent());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>=512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>=512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptionioe){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245safeTarArchiveInputStream(tais){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(arheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{}catch(IOExceptione){if(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(TarArchiveInputStream!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{}catch(IOExceptione){if(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signature),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signature),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,0);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,4096);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,512);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntryLength());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getValueLength());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getDescriptorLength());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),512));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),_signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader)+1,tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in,tarheader):null;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,TARIO);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry());}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?null:tais.getSimpleName();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getSimpleName()+File.separator;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getSimpleName()+File.separatorChar+signatureLength;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>=0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TEST:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TEST:TAR_ArchiveInputStream.DEFAULT_TEST;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,in,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,TAR);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(tarheader):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(signature):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(tarheader),tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));ta
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));ta
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==512){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry()
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getCurrentName());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TITLE_FONT:newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TITLE_FONT:tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,CPIO);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tarheader,tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST:TAR_ArchiveInputStream.DEFAULT_TEST;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST:newTarArchiveInputStream(tais,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength!=0){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getRawEntry(0);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength,TarArchiveInputStream));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+1));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setCurrentEntryLength(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+512),tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength)+1,tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength<=0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,AR));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(signature,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,signatureLength),in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null&&TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().reset();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().process(tais);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().setSimpleName(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().setScope(newFileInputStream(tarheader,signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245Thread.currentThread().getContextClassLoader().setSimpleName("ArchiveInputStream");
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.toByteArray();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.toString()+"ArchiveInputStream";
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null||TarArchiveInputStream.NONE=tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),TarArchiveInputStream));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength>0){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength>512){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptionioe){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais==null?newTarArchiveInputStream(in):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(signatureLength,tais):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in,signatureLength):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null)returnnewTarArchiveInputStream(in):tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in):tais.getParent();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(signatureLength,tarheader):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null||newTarArchiveInputStream(tarheader):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TITLE_FONT:tais,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245[Delete]
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tries||tais==null){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptionioe){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(ArcheExceptione){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){thrownewArchiveException("Couldnotuseresetandmarkoperations.",e);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){thrownewArchiveException("Couldnotuseresetandmarkoperations.");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||!tais.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(signatureLength,512):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?newTarArchiveInputStream(signatureLength+2):tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getRawClass();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.newInstance();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength,tais.getNextEntry());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.closeArchiveInputStream();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.closeArchiveEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setSignatureLength(512);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245while(tais!=null&&signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245while(tais!=null&&signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST:tais,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null||TarArchiveInputStream.DEFAULT_TEST=tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null&&tais.hasNextEntry()){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||(tais!=null&&tais.getNextEntry()!=null)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+2));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newBufferedInputStream(tarheader));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null&&tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+1));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength,TarArchiveInputStream));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tries||tais!=null){thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,archiverName);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,this.archiverName,tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,tarheader,archiverName);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,tarheader,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength,TarArchiveInputStream.length));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+1));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),TarArchiveInputStream,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptionioe){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,tarheader,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null&&TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?TarArchiveInputStream.DEFAULT_TEST:tais,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){returnnewTarArchiveInputStream(in,tais.getParent());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(tarheader,AR);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setValue(signatureLength,TarArchiveInputStream.getValue(tarheader),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||tais.getNextEntry()!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSimpleName(),in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChild());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||in!=null){returnnewTarArchiveInputStream(in,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||in==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength>512){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais.getSignature();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais!=null?null:tais.getValue();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){if(signatureLength==512){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getLength()));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptionioe){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.getAbsolutePath());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais.toString());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||tais.getNextEntry()!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(tarheader,ARCPIO),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais.setEntry(newString(signatureLength),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?JAR:tais.toString();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,in,signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returnnewTarArchiveInputStream(tais,in.readLine());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry()
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry()
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null||TarArchiveInputStream.DEFAULT_TEST_ERROR:tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_TEST_ERROR:tais,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245atch(tais){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245||(tais!=null&&tais.getNextEntry()==null)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>512){TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(in==null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||in!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245While(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245If(tais==null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245aughtExceptiontais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getNextEntry()),signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength>2){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry()
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry()
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(TarArchiveInputStream.matches(signature,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais==null?newTarArchiveInputStream(in):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais!=null?newTarArchiveInputStream(in,file):in;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,256));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength,TarArchiveInputStream));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245nisipLength<=0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null||TarArchiveInputStream.DEFAULT_SIGNATURE=tais;
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais,in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245try{[Delete]catch(IOExceptionioe){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength,TarArchiveInputStream.DEFAULT));tais.getNextEntry();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(tais!=null||tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245reader=newJARArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getSignatureLength());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength==2){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java245if(signatureLength<2){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
