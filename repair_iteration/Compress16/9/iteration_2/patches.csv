bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  in.set(signatureLength,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  0);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  0);	  in.set(signatureLength,    12);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
2	[BUG]  [BUGGY]  in.set(signatureLength,  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  2);	  in.set(signatureLength,    12);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
3	[BUG]  [BUGGY]  in.set(signatureLength,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  1);	  in.set(signatureLength,    12);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
4	[BUG]  [BUGGY]  in.set(signatureLength,  16);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  16);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  16);	  in.set(signatureLength,    12);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
5	[BUG]  [BUGGY]  in.set(signatureLength,  4);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  4);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  4);	  in.set(signatureLength,    12);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
6	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
7	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  0)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  0)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
8	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  2)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  2)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
9	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  0)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  0)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
10	[BUG]  [BUGGY]  if(signatureLength  >  12)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  >  12)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  >  12)  {  in.flush();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
11	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.flush();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.flush();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.flush();  }  else  {  throw  new  IllegalStateException( " ");  }	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
12	[BUG]  [BUGGY]  tais.seek(signatureLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.seek(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.seek(signatureLength);	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
13	[BUG]  [BUGGY]  tais.setChildren(true);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setChildren(true);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setChildren(true);	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
14	[BUG]  [BUGGY]  tais.closeArchiveInputStream();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.closeArchiveInputStream();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.closeArchiveInputStream();	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
15	[BUG]  [BUGGY]  tais.reset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.reset();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.reset();	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
16	[BUG]  [BUGGY]  in.set(signature,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  signatureLength);	  in.set(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
17	[BUG]  [BUGGY]  in.set(signature,  tarheader,  tais);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  tarheader,  tais);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  tarheader,  tais);	  in.set(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
18	[BUG]  [BUGGY]  in.set(signature,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  tarheader.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  tarheader.length);	  in.set(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
19	[BUG]  [BUGGY]  in.set(signature,  0,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  0,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  0,  signatureLength);	  in.set(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
20	[BUG]  [BUGGY]  in.set(signature,  tarheader,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  tarheader,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  tarheader,  signatureLength);	  in.set(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
21	[BUG]  [BUGGY]  in.set(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  +  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  +  2);	  in.set(signatureLength    +    12);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  in.set(signatureLength  /  12);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  /  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  /  12);	  in.set(signatureLength    +    12);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  in.set(signatureLength  +  10);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  +  10);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  +  10);	  in.set(signatureLength    +    12);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  in.set(signatureLength  +  3);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  +  3);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  +  3);	  in.set(signatureLength    +    12);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  in.mark(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  +  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  +  2);	  in.mark(signatureLength    +    11);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
26	[BUG]  [BUGGY]  in.mark(signatureLength  +  6);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  +  6);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  +  6);	  in.mark(signatureLength    +    11);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
27	[BUG]  [BUGGY]  in.mark(signatureLength  /  11);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  /  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  /  11);	  in.mark(signatureLength    +    11);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
28	[BUG]  [BUGGY]  in.set(signatureLength  -  6);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  6);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  6);	  in.set(signatureLength    -    2);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
29	[BUG]  [BUGGY]  in.set(signatureLength  -  11);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  11);	  in.set(signatureLength    -    2);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
30	[BUG]  [BUGGY]  in.set(signatureLength  -  4);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  4);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  4);	  in.set(signatureLength    -    2);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
31	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(signatureLength  +  1);	  InputStream    in    =    tais.getInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
32	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(signatureLength  +  12);	  InputStream    in    =    tais.getInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
33	[BUG]  [BUGGY]  InputStream  in  =  tais.readInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.readInputStream(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.readInputStream(signatureLength);	  InputStream    in    =    tais.getInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
34	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.getInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.tarheader.getInputStream(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.tarheader.getInputStream(signatureLength);	  InputStream    in    =    tais.getInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
35	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength,  4096);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength,  4096);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(signatureLength,  4096);	  InputStream    in    =    tais.getInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
36	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength,  10);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength,  10);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(signatureLength,  10);	  InputStream    in    =    tais.getInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
37	[BUG]  [BUGGY]  in.set(signatureLength,  signature.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  signature.length);	  in.set(signatureLength,    dumpsig.length);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
38	[BUG]  [BUGGY]  in.set(signatureLength,  file.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  file.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  file.length);	  in.set(signatureLength,    dumpsig.length);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
39	[BUG]  [BUGGY]  in.set(signatureLength  /  11);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  /  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  /  11);	  in.set(signatureLength    +    11);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
40	[BUG]  [BUGGY]  in.set(signatureLength  +  6);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  +  6);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  +  6);	  in.set(signatureLength    +    11);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
41	[BUG]  [BUGGY]  in.set(signatureLength,  10000);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  10000);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  10000);	  in.set(signatureLength,    4096);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
42	[BUG]  [BUGGY]  in.set(signature,  4096);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  4096);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  4096);	  in.set(signatureLength,    4096);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
43	[BUG]  [BUGGY]  in.set(signatureLength,  100);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  100);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  100);	  in.set(signatureLength,    4096);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
44	[BUG]  [BUGGY]  in.set(signatureLength,  2096);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  2096);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  2096);	  in.set(signatureLength,    4096);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
45	[BUG]  [BUGGY]  in.set(signatureLength,  1024);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  1024);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  1024);	  in.set(signatureLength,    4096);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
46	[BUG]  [BUGGY]  in.set(signatureLength,  4192);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  4192);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  4192);	  in.set(signatureLength,    4096);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
47	[BUG]  [BUGGY]  in.setLength(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setLength(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setLength(signatureLength  +  12);	  in.setLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
48	[BUG]  [BUGGY]  in.setLength(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setLength(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setLength(signatureLength  +  1);	  in.setLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
49	[BUG]  [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  TarArchiveInputStream.DEFAULT  -  1);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
50	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  2);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
51	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  +  1);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
52	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.defaultReader().write(signatureLength,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.defaultReader().write(signatureLength,  tarheader);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
53	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.defaultReader().write(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.defaultReader().write(signatureLength  +  12);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
54	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.defaultReader().write(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.defaultReader().write(signatureLength  -  1);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
55	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.defaultReader().write(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.defaultReader().write(signatureLength  +  1);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
56	[BUG]  [BUGGY]  in.defaultReader().write(signature,  0,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.defaultReader().write(signature,  0,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.defaultReader().write(signature,  0,  signatureLength);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
57	[BUG]  [BUGGY]  in.defaultReader().write(signature);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.defaultReader().write(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.defaultReader().write(signature);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
58	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.TAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.TAR);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.TAR);	  in.set(signatureLength,    tais);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
59	[BUG]  [BUGGY]  in.set(signatureLength,  file);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  file);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  file);	  in.set(signatureLength,    tais);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
60	[BUG]  [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT)-  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT)-  1;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  TarArchiveInputStream.DEFAULT)-  1;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)-    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
61	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  2;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  2;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)-    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
62	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)/  1;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)/  1;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)-    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
63	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  3;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  3;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  3;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)-    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
64	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  4;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  4;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  4;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)-    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
65	[BUG]  [BUGGY]  in.copyCurrentStructure(signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signatureLength,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signatureLength,  tarheader);	  in.copyCurrentStructure(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
66	[BUG]  [BUGGY]  in.copyCurrentStructure(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signatureLength  +  12);	  in.copyCurrentStructure(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
67	[BUG]  [BUGGY]  in.copyCurrentStructure(signature,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signature,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signature,  signatureLength);	  in.copyCurrentStructure(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
68	[BUG]  [BUGGY]  in.copyCurrentStructure(signatureLength,  file);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signatureLength,  file);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signatureLength,  file);	  in.copyCurrentStructure(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
69	[BUG]  [BUGGY]  in.copyCurrentStructure(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signatureLength  +  1);	  in.copyCurrentStructure(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
70	[BUG]  [BUGGY]  in.readFully(signature,  0,  signatureLength);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signature,  0,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signature,  0,  signatureLength);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
71	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  0,  signatureLength,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  0,  signatureLength,  tarheader);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
72	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  0,  signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  0,  signatureLength  -  1);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
73	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength,  file);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  0,  signatureLength,  file);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  0,  signatureLength,  file);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
74	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength,  4096);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  0,  signatureLength,  4096);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  0,  signatureLength,  4096);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
75	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength,  dumpsig);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  0,  signatureLength,  dumpsig);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  0,  signatureLength,  dumpsig);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
76	[BUG]  [BUGGY]  InputStream  in  =  new  byte[12].readInt();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[12].readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[12].readInt();	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
77	[BUG]  [BUGGY]  InputStream  in  =  new  byte[12];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[12];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[12];	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
78	[BUG]  [BUGGY]  InputStream  in  =  new  byte[16].readInt();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[16].readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[16].readInt();	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
79	[BUG]  [BUGGY]  InputStream  in  =  new  byte[6].readInt();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[6].readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[6].readInt();	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
80	[BUG]  [BUGGY]  InputStream  in  =  new  byte[32].readInt();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[32].readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[32].readInt();	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
81	[BUG]  [BUGGY]  InputStream  in  =  new  byte[10].readInt();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[10].readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[10].readInt();	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
82	[BUG]  [BUGGY]  InputStream  in  =  new  byte[64].readInt();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[64].readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[64].readInt();	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
83	[BUG]  [BUGGY]  InputStream  in  =  in.readInt();  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.readInt();  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.readInt();  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
84	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  final  int  signatureLength  =  in.read(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	final  int  signatureLength  =  in.read(signature);	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
85	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
86	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ".equals(signatureLength));  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ".equals(signatureLength));  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ".equals(signatureLength));  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
87	[BUG]  [BUGGY]  InputStream  in  =  in.readInt();  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.readInt();  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.readInt();  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
88	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
89	[BUG]  [BUGGY]  nisipLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  nisipLength  =  in.read(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	nisipLength  =  in.read(signature);	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
90	[BUG]  [BUGGY]  nisip  =  in.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  nisip  =  in.read(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	nisip  =  in.read(signatureLength);	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
91	[BUG]  [BUGGY]  in.set(signatureLength  -  2,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  2,  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  2,  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
92	[BUG]  [BUGGY]  in.set(signatureLength  +  1,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  +  1,  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  +  1,  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
93	[BUG]  [BUGGY]  in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT,  signatureLength);	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
94	[BUG]  [BUGGY]  in.set(signatureLength  -  4,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  4,  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  4,  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
95	[BUG]  [BUGGY]  in.set(signatureLength  -  1,  file,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  1,  file,  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  1,  file,  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
96	[BUG]  [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT  -  signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT  -  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  TarArchiveInputStream.DEFAULT  -  signatureLength);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength  +  1);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
98	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength));  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength));	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  in.skipBytes(signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skipBytes(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skipBytes(signatureLength);	  in.skipSupported();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
100	[BUG]  [BUGGY]  in.skipCharacters();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skipCharacters();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skipCharacters();	  in.skipSupported();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
101	[BUG]  [BUGGY]  in.read(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  tarheader);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
102	[BUG]  [BUGGY]  in.readFully(signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength,  tarheader);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
103	[BUG]  [BUGGY]  in.read(signatureLength,  dumpsig);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength,  dumpsig);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength,  dumpsig);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
104	[BUG]  [BUGGY]  in.read(signatureLength,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength,  tarheader.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength,  tarheader.length);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
105	[BUG]  [BUGGY]  in.read(signatureLength,  dumpsig.length);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength,  dumpsig.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength,  dumpsig.length);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
106	[BUG]  [BUGGY]  in.skipChildren(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skipChildren(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skipChildren(signatureLength  -  1);	  in.skipChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
107	[BUG]  [BUGGY]  in.skipChildren(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skipChildren(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skipChildren(signatureLength  +  1);	  in.skipChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  in.skipChildren(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skipChildren(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skipChildren(signatureLength  +  12);	  in.skipChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
109	[BUG]  [BUGGY]  in.skipChildren(signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skipChildren(signatureLength,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skipChildren(signatureLength,  tarheader);	  in.skipChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
110	[BUG]  [BUGGY]  in.skipChildren(signatureLength  +  11);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skipChildren(signatureLength  +  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skipChildren(signatureLength  +  11);	  in.skipChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
111	[BUG]  [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT));  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  TarArchiveInputStream.DEFAULT));	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
112	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT));  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT));	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
113	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT),  tarheader);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT),  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT),  tarheader);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
114	[BUG]  [BUGGY]  in.setChildren(chunkerLength  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(chunkerLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(chunkerLength  -  1);	  in.setChildren(chunkerLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
115	[BUG]  [BUGGY]  in.setChildren(chunkerLength  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(chunkerLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(chunkerLength  +  1);	  in.setChildren(chunkerLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
116	[BUG]  [BUGGY]  in.setChildren(chunkerLength  -  signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(chunkerLength  -  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(chunkerLength  -  signatureLength);	  in.setChildren(chunkerLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
117	[BUG]  [BUGGY]  in.setChildren(chunkerLength  +  12);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(chunkerLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(chunkerLength  +  12);	  in.setChildren(chunkerLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
118	[BUG]  [BUGGY]  in.setChildren(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signatureLength  -  1);	  in.setChildren(chunkerLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
119	[BUG]  [BUGGY]  tais.setSupported(signatureLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setSupported(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setSupported(signatureLength);	  tais.markSupported();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
120	[BUG]  [BUGGY]  tais.markSupported(signatureLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.markSupported(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.markSupported(signatureLength);	  tais.markSupported();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
121	[BUG]  [BUGGY]  tais.mark(signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.mark(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.mark(signatureLength);	  tais.markSupported();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
122	[BUG]  [BUGGY]  tais.setState(signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setState(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setState(signatureLength);	  tais.markSupported();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
123	[BUG]  [BUGGY]  tais.startSupported();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.startSupported();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.startSupported();	  tais.markSupported();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
124	[BUG]  [BUGGY]  tais.setSupported(true);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setSupported(true);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setSupported(true);	  tais.markSupported();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
125	[BUG]  [BUGGY]  InputStream  in  =  in.read();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.read();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.read();	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
126	[BUG]  [BUGGY]  InputStream  in  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.read(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.read(signature);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
127	[BUG]  [BUGGY]  InputStream  in  =  in.readFully(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.readFully(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.readFully(signatureLength);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
128	[BUG]  [BUGGY]  InputStream  in  =  in.read(signature.length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.read(signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.read(signature.length);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
129	[BUG]  [BUGGY]  InputStream  in  =  this.in.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.in.read(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.in.read(signatureLength);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
130	[BUG]  [BUGGY]  InputStream  in  =  tais.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.read(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.read(signatureLength);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
131	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
132	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  System.arraycopy(signature,  0,  dumpsig,  0,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  System.arraycopy(signature,  0,  dumpsig,  0,  signatureLength);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  System.arraycopy(signature,  0,  dumpsig,  0,  signatureLength);  }	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
133	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  throw  new  IllegalStateException( " ");  }	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
134	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
135	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  return  new  ArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  return  new  ArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.mark(signature.length);  }  else  {  return  new  ArchiveInputStream(in);  }	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
136	[BUG]  [BUGGY]  in.skip(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skip(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skip(signatureLength  -  1);	  in.skip(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
137	[BUG]  [BUGGY]  in.skip(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skip(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skip(signatureLength  +  1);	  in.skip(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
138	[BUG]  [BUGGY]  in.skip(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skip(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skip(signatureLength  +  12);	  in.skip(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
139	[BUG]  [BUGGY]  in.skip(signatureLength  +  11);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skip(signatureLength  +  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skip(signatureLength  +  11);	  in.skip(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
140	[BUG]  [BUGGY]  in.readFully(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength  +  12);	  in.readFully(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
141	[BUG]  [BUGGY]  in.readFully(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength  -  1);	  in.readFully(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
142	[BUG]  [BUGGY]  in.readFully(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength  +  1);	  in.readFully(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
143	[BUG]  [BUGGY]  in.readFully(signatureLength,  2);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength,  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength,  2);	  in.readFully(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
144	[BUG]  [BUGGY]  in.readFully(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength  -  12);	  in.readFully(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
145	[BUG]  [BUGGY]  in.mark(signatureLength  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  -  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  -  2);	  in.mark(signatureLength    -    12);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
146	[BUG]  [BUGGY]  in.mark(signatureLength  -  4);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  -  4);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  -  4);	  in.mark(signatureLength    -    12);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
147	[BUG]  [BUGGY]  in.mark(signatureLength  -  10);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  -  10);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  -  10);	  in.mark(signatureLength    -    12);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
148	[BUG]  [BUGGY]  in.write(signature.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.write(signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.write(signature.length);	  in.write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
149	[BUG]  [BUGGY]  in.write(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.write(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.write(signatureLength  +  12);	  in.write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
150	[BUG]  [BUGGY]  in.write(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.write(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.write(signatureLength  +  1);	  in.write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
151	[BUG]  [BUGGY]  in.write(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.write(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.write(signatureLength  -  1);	  in.write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
152	[BUG]  [BUGGY]  in.write(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.write(signatureLength  +  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.write(signatureLength  +  2);	  in.write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
153	[BUG]  [BUGGY]  in.write(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.write(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.write(signatureLength  -  12);	  in.write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
154	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported(),  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported(),  signatureLength);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
155	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported());  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported());	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
156	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported());  tais.close();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported());  tais.close();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.markSupported());  tais.close();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
157	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(in);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
158	[BUG]  [BUGGY]  TarArchiveInputStream.instance.close();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  TarArchiveInputStream.instance.close();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	TarArchiveInputStream.instance.close();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
159	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  TarArchiveInputStream  in  =  tais.getInputStream();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	TarArchiveInputStream  in  =  tais.getInputStream();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
160	[BUG]  [BUGGY]  in.set(signatureLength  -  10);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  10);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  10);	  in.set(signatureLength    -    12);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
161	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  1];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength  +  1];	  InputStream    in    =    new    byte[signatureLength    +    12];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
162	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  2];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  2];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength  +  2];	  InputStream    in    =    new    byte[signatureLength    +    12];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
163	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  3];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  3];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength  +  3];	  InputStream    in    =    new    byte[signatureLength    +    12];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
164	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength  *  12];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength  *  12];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength  *  12];	  InputStream    in    =    new    byte[signatureLength    +    12];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
165	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  4];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  4];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength  +  4];	  InputStream    in    =    new    byte[signatureLength    +    12];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
166	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  16];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  16];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength  +  16];	  InputStream    in    =    new    byte[signatureLength    +    12];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
167	[BUG]  [BUGGY]  InputStream  in  =  this.in.readInt();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.in.readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.in.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
168	[BUG]  [BUGGY]  InputStream  in  =  in.readUTF();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.readUTF();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.readUTF();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
169	[BUG]  [BUGGY]  InputStream  in  =  tais.readInt();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
170	[BUG]  [BUGGY]  InputStream  in  =  in.readFully();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.readFully();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.readFully();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
171	[BUG]  [BUGGY]  InputStream  in  =  in.readInt()  -  1;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.readInt()  -  1;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.readInt()  -  1;	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
172	[BUG]  [BUGGY]  InputStream  in  =  in.readIO();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.readIO();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.readIO();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
173	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    |    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
174	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  &  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  &  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  &  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    |    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
175	[BUG]  [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    |    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
176	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT  +  1);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    |    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
177	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  /  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  /  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  /  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    |    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
178	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT  -  1);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    |    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
179	[BUG]  [BUGGY]  in.setChildren(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signatureLength  +  12);	  in.setChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
180	[BUG]  [BUGGY]  in.setChildren(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signatureLength  +  1);	  in.setChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
181	[BUG]  [BUGGY]  in.setChildren(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signatureLength  -  12);	  in.setChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
182	[BUG]  [BUGGY]  in.setChildren(signatureLength  -  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signatureLength  -  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signatureLength  -  2);	  in.setChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
183	[BUG]  [BUGGY]  in.setChildren(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signatureLength  +  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signatureLength  +  2);	  in.setChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
184	[BUG]  [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
185	[BUG]  [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
186	[BUG]  [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
187	[BUG]  [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
188	[BUG]  [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
189	[BUG]  [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
190	[BUG]  [BUGGY]  in.setSupported(false);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(false);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(false);	  in.setSupported(true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
191	[BUG]  [BUGGY]  in.setSupported(true,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(true,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(true,  signatureLength);	  in.setSupported(true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
192	[BUG]  [BUGGY]  in.setSupported(false,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(false,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(false,  signatureLength);	  in.setSupported(true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
193	[BUG]  [BUGGY]  tais.setSupported(false);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setSupported(false);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setSupported(false);	  in.setSupported(true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
194	[BUG]  [BUGGY]  in.copyCurrentStructure(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signature,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signature,  tarheader);	  in.copyCurrentStructure(signature);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
195	[BUG]  [BUGGY]  in.copyCurrentStructure(signatureLength,  signature);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signatureLength,  signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signatureLength,  signature);	  in.copyCurrentStructure(signature);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
196	[BUG]  [BUGGY]  InputStream  in  =  new  byte[10];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[10];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[10];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
197	[BUG]  [BUGGY]  InputStream  in  =  new  byte[16];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[16];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[16];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
198	[BUG]  [BUGGY]  InputStream  in  =  new  String[signatureLength];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  String[signatureLength];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  String[signatureLength];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
199	[BUG]  [BUGGY]  InputStream  in  =  new  byte[32];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[32];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[32];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
200	[BUG]  [BUGGY]  InputStream  in  =  new  byte[6];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[6];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[6];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
201	[BUG]  [BUGGY]  InputStream  in  =  new  byte[11];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[11];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[11];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
202	[BUG]  [BUGGY]  in.mark(signatureLength  +  4);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  +  4);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  +  4);	  in.mark(signatureLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
203	[BUG]  [BUGGY]  in.setSupported(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(signatureLength  +  12);	  in.setSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
204	[BUG]  [BUGGY]  in.setSupported(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(signatureLength  +  1);	  in.setSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
205	[BUG]  [BUGGY]  in.setSupported(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(signatureLength  -  1);	  in.setSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
206	[BUG]  [BUGGY]  in.setSupported(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(signatureLength  -  12);	  in.setSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
207	[BUG]  [BUGGY]  in.set(signatureLength,  tarheader.length  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  tarheader.length  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  tarheader.length  +  1);	  in.set(signatureLength,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
208	[BUG]  [BUGGY]  in.set(signatureLength,  tarheader.length  +  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  tarheader.length  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  tarheader.length  +  12);	  in.set(signatureLength,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
209	[BUG]  [BUGGY]  in.set(signatureLength,  tarheader.length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  tarheader.length  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  tarheader.length  -  1);	  in.set(signatureLength,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
210	[BUG]  [BUGGY]  in.set(signatureLength,  cacherName.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  cacherName.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  cacherName.length);	  in.set(signatureLength,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
211	[BUG]  [BUGGY]  in.readFully(signature.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signature.length);	  in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
212	[BUG]  [BUGGY]  in.read(signature.length,  12);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature.length,  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature.length,  12);	  in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
213	[BUG]  [BUGGY]  in.read(signature.length  -  12);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature.length  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature.length  -  12);	  in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
214	[BUG]  [BUGGY]  in.read(signature.length  +  12);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature.length  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature.length  +  12);	  in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
215	[BUG]  [BUGGY]  in.read(signature.length  -  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature.length  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature.length  -  1);	  in.read(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
216	[BUG]  [BUGGY]  in.set(signatureLength  /  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  /  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  /  1);	  in.set(signatureLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
217	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  2;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  2;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
218	[BUG]  [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT)+  1;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  TarArchiveInputStream.DEFAULT)+  1;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
219	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  4;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  4;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  4;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
220	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  3;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  3;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  3;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
221	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  12;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  12;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  12;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
222	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  10;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  10;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  10;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
223	[BUG]  [BUGGY]  in.readFully(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signature,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signature,  tarheader);	  in.readFully(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
224	[BUG]  [BUGGY]  tais.readFully(signature);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.readFully(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.readFully(signature);	  in.readFully(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
225	[BUG]  [BUGGY]  in.set(signature,  10);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  10);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  10);	  in.set(signatureLength,    10);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
226	[BUG]  [BUGGY]  in.mark(signatureLength  /  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  /  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  /  12);	  in.mark(signatureLength    +    12);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
227	[BUG]  [BUGGY]  in.mark(signatureLength  +  10);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  +  10);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  +  10);	  in.mark(signatureLength    +    12);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
228	[BUG]  [BUGGY]  in.mark(signatureLength  +  3);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  +  3);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  +  3);	  in.mark(signatureLength    +    12);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
229	[BUG]  [BUGGY]  in.setState(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setState(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setState(signatureLength  +  12);	  in.setState(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
230	[BUG]  [BUGGY]  in.setState(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setState(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setState(signatureLength  +  1);	  in.setState(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
231	[BUG]  [BUGGY]  in.setState(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setState(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setState(signatureLength  -  1);	  in.setState(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
232	[BUG]  [BUGGY]  in.setState(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setState(signatureLength  +  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setState(signatureLength  +  2);	  in.setState(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
233	[BUG]  [BUGGY]  in.seek(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.seek(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.seek(signatureLength  +  12);	  in.seek(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
234	[BUG]  [BUGGY]  in.seek(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.seek(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.seek(signatureLength  -  1);	  in.seek(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
235	[BUG]  [BUGGY]  in.seek(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.seek(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.seek(signatureLength  -  12);	  in.seek(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
236	[BUG]  [BUGGY]  in.read(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength  -  12);	  in.read(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
237	[BUG]  [BUGGY]  in.read(signatureLength  -  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength  -  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength  -  2);	  in.read(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
238	[BUG]  [BUGGY]  in.read(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength  +  12);	  in.read(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
239	[BUG]  [BUGGY]  in.read(signatureLength,  12);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength,  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength,  12);	  in.read(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
240	[BUG]  [BUGGY]  in.read(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength  +  1);	  in.read(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
241	[BUG]  [BUGGY]  in.markSupported(signature.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.markSupported(signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.markSupported(signature.length);	  in.markSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
242	[BUG]  [BUGGY]  in.markSupported(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.markSupported(signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.markSupported(signatureLength  +  12);	  in.markSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
243	[BUG]  [BUGGY]  in.markSupported(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.markSupported(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.markSupported(signatureLength  -  1);	  in.markSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
244	[BUG]  [BUGGY]  in.markSupported(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.markSupported(signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.markSupported(signatureLength  +  1);	  in.markSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
245	[BUG]  [BUGGY]  in.markSupported(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.markSupported(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.markSupported(signatureLength  -  12);	  in.markSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
246	[BUG]  [BUGGY]  in.mark(signatureLength  -  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  -  3);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  -  3);	  in.mark(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
247	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
248	[BUG]  [BUGGY]  in.set(signatureLength,  tarheaderName);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  tarheaderName);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  tarheaderName);	  in.set(signatureLength,    cacherName);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
249	[BUG]  [BUGGY]  in.set(signature,  tarheaderName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  tarheaderName);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  tarheaderName);	  in.set(signatureLength,    cacherName);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
250	[BUG]  [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT,  signatureLength);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  TarArchiveInputStream.DEFAULT,  signatureLength);	  in.set(signature,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
251	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
252	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength!=    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
253	[BUG]  [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.tais.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
254	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.tarheader.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
255	[BUG]  [BUGGY]  InputStream  in  =  tais.readInputStream();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.readInputStream();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.readInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
256	[BUG]  [BUGGY]  InputStream  in  =  tais.readInputStream(in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.readInputStream(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.readInputStream(in);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
257	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream( "UTF-8 ");	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
258	[BUG]  [BUGGY]  in.setChildren(signatureLength  +  11);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signatureLength  +  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signatureLength  +  11);	  in.setChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
259	[BUG]  [BUGGY]  in.set(signatureLength  *  12);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  *  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  *  12);	  in.set(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
260	[BUG]  [BUGGY]  in.set(signature,  tarheaderLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  tarheaderLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  tarheaderLength);	  in.set(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
261	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.archiverName.getInputStream(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.archiverName.getInputStream(signatureLength);	  InputStream    in    =    tais.getInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
262	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.archiverName.read(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.archiverName.read(signatureLength);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
263	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.tarheader.read(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.tarheader.read(signatureLength);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
264	[BUG]  [BUGGY]  InputStream  in  =  tarheader.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tarheader.read(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tarheader.read(signatureLength);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
265	[BUG]  [BUGGY]  nisipLength  =  in.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  nisipLength  =  in.read(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	nisipLength  =  in.read(signatureLength);	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
266	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
267	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
268	[BUG]  [BUGGY]  in.set(signature,  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  12);	  in.set(signatureLength,    10);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
269	[BUG]  [BUGGY]  tais.setState(in.markSupported());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setState(in.markSupported());  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setState(in.markSupported());	  tais.markSupported();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
270	[BUG]  [BUGGY]  in.setSupported(signatureLength  +  11);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(signatureLength  +  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(signatureLength  +  11);	  in.setSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
271	[BUG]  [BUGGY]  in.setSupported(signatureLength  *  12);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(signatureLength  *  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(signatureLength  *  12);	  in.setSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
272	[BUG]  [BUGGY]  in.setSupported(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setSupported(signatureLength  +  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setSupported(signatureLength  +  2);	  in.setSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
273	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  8];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  8];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength  +  8];	  InputStream    in    =    new    byte[signatureLength    +    12];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
274	[BUG]  [BUGGY]  in.copyCurrentStructure(signatureLength,  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signatureLength,  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signatureLength,  12);	  in.copyCurrentStructure(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
275	[BUG]  [BUGGY]  in.copyCurrentStructure(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signatureLength  -  1);	  in.copyCurrentStructure(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
276	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
277	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  return  new  TarInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  2)  {  return  new  TarInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  2)  {  return  new  TarInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
278	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  return  new  TarNumberArchiveInputStream(in);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  2)  {  return  new  TarNumberArchiveInputStream(in);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  2)  {  return  new  TarNumberArchiveInputStream(in);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }	  if(signatureLength!=    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
279	[BUG]  [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
280	[BUG]  [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
281	[BUG]  [BUGGY]  while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
282	[BUG]  [BUGGY]  while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
283	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  Integer  signatureLength  =  in.read(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	Integer  signatureLength  =  in.read(signatureLength);	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
284	[BUG]  [BUGGY]  in.set(signatureLength,  14);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  14);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  14);	  in.set(signatureLength,    dumpsig);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
285	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.readInt();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.archiverName.readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.archiverName.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
286	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.readInt();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  this.tarheader.readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  this.tarheader.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
287	[BUG]  [BUGGY]  InputStream  in  =  tarheader.readInt();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tarheader.readInt();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tarheader.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
288	[BUG]  [BUGGY]  in.mark(signatureLength  *  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  *  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  *  1);	  in.mark(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
289	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  0,  signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  0,  signatureLength  -  12);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
290	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  0,  signatureLength  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  0,  signatureLength  +  1);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
291	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  1);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
292	[BUG]  [BUGGY]  in.set(signatureLength,  tarheader.length  -  12);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  tarheader.length  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  tarheader.length  -  12);	  in.set(signatureLength,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
293	[BUG]  [BUGGY]  in.set(signatureLength  +  32);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  +  32);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  +  32);	  in.set(signatureLength    +    12);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
294	[BUG]  [BUGGY]  in.set(signatureLength  *  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  *  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  *  2);	  in.set(signatureLength    -    2);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
295	[BUG]  [BUGGY]  in.setChildren(thenLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(thenLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(thenLength);	  in.setChildren(chunkerLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
296	[BUG]  [BUGGY]  in.setChildren(signalLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signalLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signalLength);	  in.setChildren(chunkerLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
297	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  +  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  +  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  +  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    |    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
298	[BUG]  [BUGGY]  in.set(signatureLength,  32);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  32);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  32);	  in.set(signatureLength,    12);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
299	[BUG]  [BUGGY]  tais.flush();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.flush();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.flush();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
300	[BUG]  [BUGGY]  tais.release(signatureLength);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.release(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.release(signatureLength);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
301	[BUG]  [BUGGY]  tais.release();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.release();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.release();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
302	[BUG]  [BUGGY]  tais.reset(signatureLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.reset(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.reset(signatureLength);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
303	[BUG]  [BUGGY]  in.mark(signatureLength  *  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  *  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  *  12);	  in.mark(signatureLength    -    12);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
304	[BUG]  [BUGGY]  in.set(signatureLength  -  1,  tais);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  1,  tais);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  1,  tais);	  in.set(signatureLength,    tais);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
305	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(archiverName);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(archiverName);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
306	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(in);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(in);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
307	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(in.getVersion());  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(in.getVersion());	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
308	[BUG]  [BUGGY]  in.setLength(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setLength(signatureLength  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setLength(signatureLength  -  1);	  in.setLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
309	[BUG]  [BUGGY]  in.setLength(0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setLength(0);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setLength(0);	  in.setLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
310	[BUG]  [BUGGY]  tais.skipSupported();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.skipSupported();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.skipSupported();	  in.skipSupported();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
311	[BUG]  [BUGGY]  in.setState(signatureLength  *  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setState(signatureLength  *  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setState(signatureLength  *  12);	  in.setState(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
312	[BUG]  [BUGGY]  in.setState(signatureLength  +  11);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setState(signatureLength  +  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setState(signatureLength  +  11);	  in.setState(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
313	[BUG]  [BUGGY]  in.setState(signatureLength  }  );  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setState(signatureLength  }  );  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setState(signatureLength  }  );	  in.setState(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
314	[BUG]  [BUGGY]  in.skip(signatureLength  +  10);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skip(signatureLength  +  10);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skip(signatureLength  +  10);	  in.skip(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
315	[BUG]  [BUGGY]  in.read(signatureLength  *  12);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength  *  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength  *  12);	  in.read(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
316	[BUG]  [BUGGY]  in.read(signatureLength  -  6);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength  -  6);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength  -  6);	  in.read(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
317	[BUG]  [BUGGY]  in.write('n');  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.write('n');  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.write('n');	  in.write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
318	[BUG]  [BUGGY]  in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT  -  1);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
319	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  1);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
320	[BUG]  [BUGGY]  in.set(signatureLength  *  11);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  *  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  *  11);	  in.set(signatureLength    +    11);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
321	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  tarheader;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  tarheader;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)-  tarheader;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)-    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
322	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength  +  12);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
323	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength)+  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength)+  1;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  signatureLength)+  1;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
324	[BUG]  [BUGGY]  InputStream  in  =  tais.createInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.createInputStream(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.createInputStream(signatureLength);	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
325	[BUG]  [BUGGY]  InputStream  in  =  tais.createInputStream(signature);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.createInputStream(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.createInputStream(signature);	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
326	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  ZipInputStream(in);	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
327	[BUG]  [BUGGY]  in.set(signatureLength  -  6,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  6,  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  6,  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
328	[BUG]  [BUGGY]  in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT)+  1;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  1,  TarArchiveInputStream.DEFAULT)+  1;	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
329	[BUG]  [BUGGY]  in.read(tarheader,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(tarheader,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(tarheader,  signatureLength);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
330	[BUG]  [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  TarArchiveInputStream.DEFAULT  +  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  TarArchiveInputStream.DEFAULT  +  1);	  in.set(signature,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
331	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  tarheader;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  tarheader;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT)+  tarheader;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
332	[BUG]  [BUGGY]  InputStream  in  =  new  byte[40];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[40];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[40];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
333	[BUG]  [BUGGY]  InputStream  in  =  new  byte[64];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[64];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[64];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
334	[BUG]  [BUGGY]  in.markSupported(signatureLength,  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.markSupported(signatureLength,  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.markSupported(signatureLength,  12);	  in.markSupported(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
335	[BUG]  [BUGGY]  tais.resetChildren();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.resetChildren();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.resetChildren();	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
336	[BUG]  [BUGGY]  tais.setChildrenLength(signatureLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setChildrenLength(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setChildrenLength(signatureLength);	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
337	[BUG]  [BUGGY]  tais.setChildren(signatureLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setChildren(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setChildren(signatureLength);	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
338	[BUG]  [BUGGY]  tais.setChildren(in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.setChildren(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.setChildren(in);	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
339	[BUG]  [BUGGY]  in.read(signatureLength)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
340	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
341	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarNumberArchiveInputStream(in);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarNumberArchiveInputStream(in);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarNumberArchiveInputStream(in);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
342	[BUG]  [BUGGY]  tais.copyCurrentStructure(signature);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.copyCurrentStructure(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.copyCurrentStructure(signature);	  in.copyCurrentStructure(signature);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
343	[BUG]  [BUGGY]  in.copyCurrentStructure(signature,  tarheaderLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signature,  tarheaderLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signature,  tarheaderLength);	  in.copyCurrentStructure(signature);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
344	[BUG]  [BUGGY]  in.copyCurrentStructure(signature,  0,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.copyCurrentStructure(signature,  0,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.copyCurrentStructure(signature,  0,  signatureLength);	  in.copyCurrentStructure(signature);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
345	[BUG]  [BUGGY]  in.readFully(signatureLength,  10);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength,  10);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength,  10);	  in.readFully(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
346	[BUG]  [BUGGY]  while(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
347	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
348	[BUG]  [BUGGY]  in.mark(signature.length  +  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signature.length  +  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signature.length  +  12);	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
349	[BUG]  [BUGGY]  in.mark(signature.length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signature.length  -  1);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signature.length  -  1);	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
350	[BUG]  [BUGGY]  in.mark(signature.length  -  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signature.length  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signature.length  -  12);	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
351	[BUG]  [BUGGY]  in.setLength(signature.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setLength(signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setLength(signature.length);	  in.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
352	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(signature.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  ByteArrayInputStream(signature.length);	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
353	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  ByteArrayInputStream(signatureLength);	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
354	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(signatureLength));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(signatureLength));  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.read(signatureLength));	  in.flush();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
355	[BUG]  [BUGGY]  in.read(signatureLength,  tais);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signatureLength,  tais);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signatureLength,  tais);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
356	[BUG]  [BUGGY]  in.read(signature.length,  tarheader);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature.length,  tarheader);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature.length,  tarheader);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
357	[BUG]  [BUGGY]  in.readFully(signatureLength,  tais);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength,  tais);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength,  tais);	  in.read(signatureLength,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
358	[BUG]  [BUGGY]  in.skip(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skip(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skip(signatureLength  -  12);	  in.skip(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
359	[BUG]  [BUGGY]  tais.startArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.startArchiveInputStream(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.startArchiveInputStream(in);	  tais.markSupported();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
360	[BUG]  [BUGGY]  in.mark(signatureLength  -  6);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  -  6);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  -  6);	  in.mark(signatureLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
361	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT)+  1;  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  |  TarArchiveInputStream.DEFAULT)+  1;	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    |    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
362	[BUG]  [BUGGY]  in.set(signatureLength,  20000);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  20000);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  20000);	  in.set(signatureLength,    4096);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
363	[BUG]  [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  1,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  1,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  TarArchiveInputStream.DEFAULT  -  1,  signatureLength);	  in.set(signatureLength,    TarArchiveInputStream.DEFAULT    -    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
364	[BUG]  [BUGGY]  InputStream  in  =  tais.readIn();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.readIn();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.readIn();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
365	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully(signature);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.readFully(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.readFully(signature);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
366	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully(signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.readFully(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.readFully(signatureLength);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
367	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
368	[BUG]  [BUGGY]  in.readFully(signatureLength,  12);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signatureLength,  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signatureLength,  12);	  in.readFully(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
369	[BUG]  [BUGGY]  in.set(signatureLength,  in.read(signature.length));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  in.read(signature.length));  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  in.read(signature.length));	  in.set(signatureLength,    dumpsig.length);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
370	[BUG]  [BUGGY]  in.setChildren(signatureLength  *  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(signatureLength  *  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(signatureLength  *  12);	  in.setChildren(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
371	[BUG]  [BUGGY]  tais.release(signature);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.release(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.release(signature);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
372	[BUG]  [BUGGY]  in.set(signatureLength,  tais.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  tais.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  tais.length);	  in.set(signatureLength,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
373	[BUG]  [BUGGY]  in.set(signatureLength,  tarheader.length  +  11);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength,  tarheader.length  +  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength,  tarheader.length  +  11);	  in.set(signatureLength,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
374	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength,  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength,  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  tais.getInputStream(signatureLength,  12);	  InputStream    in    =    tais.getInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
375	[BUG]  [BUGGY]  in.defaultWrite(signatureLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.defaultWrite(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.defaultWrite(signatureLength);	  in.write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
376	[BUG]  [BUGGY]  tais.releaseArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.releaseArchiveInputStream(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.releaseArchiveInputStream(in);	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
377	[BUG]  [BUGGY]  tais.initCurrentStructure(in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  tais.initCurrentStructure(in);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	tais.initCurrentStructure(in);	  tais.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
378	[BUG]  [BUGGY]  in.skip();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.skip();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.skip();	  in.skipSupported();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
379	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength].mark(signature.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength].mark(signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength].mark(signature.length);	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
380	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength].getInputStream();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength].getInputStream();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength].getInputStream();	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
381	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength].markSupported();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength].markSupported();  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength].markSupported();	  InputStream    in    =    new    byte[signatureLength].readInt();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
382	[BUG]  [BUGGY]  in.mark(signatureLength  -  11);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  -  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  -  11);	  in.mark(signatureLength    +    11);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
383	[BUG]  [BUGGY]  in.mark(signatureLength  +  16);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.mark(signatureLength  +  16);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.mark(signatureLength  +  16);	  in.mark(signatureLength    +    11);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
384	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
385	[BUG]  [BUGGY]  Integer  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  Integer  signatureLength  =  in.read(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	Integer  signatureLength  =  in.read(signature);	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
386	[BUG]  [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  11];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[signatureLength  +  11];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[signatureLength  +  11];	  InputStream    in    =    new    byte[signatureLength    +    12];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
387	[BUG]  [BUGGY]  in.read(signature,  0,  signatureLength  -  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read(signature,  0,  signatureLength  -  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read(signature,  0,  signatureLength  -  2);	  in.read(signature,    0,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
388	[BUG]  [BUGGY]  InputStream  in  =  new  byte[1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  new  byte[1];  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  new  byte[1];	  InputStream    in    =    new    byte[signatureLength];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
389	[BUG]  [BUGGY]  in.setLength(signatureLength  +  11);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setLength(signatureLength  +  11);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setLength(signatureLength  +  11);	  in.setLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
390	[BUG]  [BUGGY]  in.setLength(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setLength(signatureLength  -  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setLength(signatureLength  -  12);	  in.setLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
391	[BUG]  [BUGGY]  if(signatureLength!=  12)  {  return  new  TarArchiveInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  12)  {  return  new  TarArchiveInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  12)  {  return  new  TarArchiveInputStream(in);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
392	[BUG]  [BUGGY]  if(signatureLength!=  12)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength!=  12)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength!=  12)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    2)    {    return    new    TarArchiveInputStream(in);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
393	[BUG]  [BUGGY]  in.set(signature,  tais);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  tais);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  tais);	  in.set(signature,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
394	[BUG]  [BUGGY]  in.setChildren(chunkerLength  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.setChildren(chunkerLength  -  2);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.setChildren(chunkerLength  -  2);	  in.setChildren(chunkerLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
395	[BUG]  [BUGGY]  while(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  while(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	while(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength    ==    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
396	[BUG]  [BUGGY]  InputStream  in  =  in.read(signature,  12);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  InputStream  in  =  in.read(signature,  12);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	InputStream  in  =  in.read(signature,  12);	  InputStream    in    =    in.read(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
397	[BUG]  [BUGGY]  in.readFully(signature,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readFully(signature,  signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readFully(signature,  signatureLength);	  in.readFully(signature);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
398	[BUG]  [BUGGY]  in.set(signature,  0,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signature,  0,  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signature,  0,  TarArchiveInputStream.DEFAULT);	  in.set(signature,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
399	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.setSupported(true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
400	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  in.setSupported(true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
401	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.setSupported(true);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.setSupported(true);  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.setSupported(true);  }	  in.setSupported(true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
402	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	if(signatureLength  ==  2)  {  in.setSupported(true);  }  else  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }	  in.setSupported(true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
403	[BUG]  [BUGGY]  in.readCurrentStructure(signatureLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readCurrentStructure(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readCurrentStructure(signatureLength);	  in.copyCurrentStructure(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
404	[BUG]  [BUGGY]  in.set(signatureLength  -  12,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  12,  TarArchiveInputStream.DEFAULT);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  12,  TarArchiveInputStream.DEFAULT);	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
405	[BUG]  [BUGGY]  in.set(signatureLength  -  1,  signature.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.set(signatureLength  -  1,  signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.set(signatureLength  -  1,  signature.length);	  in.set(signatureLength    -    1,    TarArchiveInputStream.DEFAULT);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
406	[BUG]  [BUGGY]  in.read().write(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.read().write(signatureLength);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.read().write(signatureLength);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
407	[BUG]  [BUGGY]  in.defaultReader().write(signature.length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.defaultReader().write(signature.length);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.defaultReader().write(signature.length);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
408	[BUG]  [BUGGY]  in.readCurrentStructure(signature);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);      [BUGGY]  in.readCurrentStructure(signature);  [BUGGY]      if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	211	211	1	replace	in.readCurrentStructure(signature);	  in.copyCurrentStructure(signature);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
