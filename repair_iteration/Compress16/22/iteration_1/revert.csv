projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.reset();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==512){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=512){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==512){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=512){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=256){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.reset();}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>=512){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=in.readInt();
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newFileInputStream(tarheader.getPath());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>=0){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(tarheader.length));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=512){in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==512){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in.read());
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength);tarheader=in.read(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235tarheader=in.read(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=256){in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==256){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>=256){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.read();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength,tarheader.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235tarheader.mark(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(tarheader.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength-1);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+2);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.mark(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=256){in.close();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+512);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(signatureLength,tarheader.length);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.close();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newFileInputStream(tarheader);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=512){in.reset();}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==512){in.reset();}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>=512){in.reset();}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==512){in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==512){returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=512){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{thrownewIllegalArgumentException("".);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<512){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.mark(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.close();}else{returnnewTarArchiveInputStream(in);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<512){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader.length));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader));
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<512){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=in.read(signatureLength);
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>256){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=512){in.mark(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<0){in.reset();}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<512){in.reset();}else{in.mark(signatureLength);}
projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>512){in.set();}else{in.mark(signatureLength);}
