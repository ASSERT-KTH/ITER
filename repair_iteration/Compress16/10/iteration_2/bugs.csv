bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  1))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  1))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  signature))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  signature))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength,  signature))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  tarheader!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  tarheader!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  in.mark())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  in.mark())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  in.mark())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)&&  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheader)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)&&  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)&&  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LENGTH)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  2)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  2)  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  if(signatureLength  ==  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  if(signatureLength  ==  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  if(signatureLength  ==  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  if(signatureLength!=  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength!=  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength!=  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  if(signatureLength  ==  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  in.skipChildren();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  in.skipChildren();  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	in.skipChildren();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  in.close();  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	in.close();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  InputStream  in  =  tais.getInputStream();  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	InputStream  in  =  tais.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(zipArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  tarheader))  {	  if(zipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  12))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(zipArchiveInputStream.matches(signature,  12))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  12))  {	  if(zipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(zipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  tarheaderLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(zipArchiveInputStream.matches(signature,  tarheaderLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  tarheaderLength))  {	  if(zipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength));  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength));	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  if(signatureLength  ==  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
56	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(RBArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  if(in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  if(signatureLength  ==  32  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  32  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  32  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  if(signatureLength  ==  14  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  if(signatureLength  ==  14  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	if(signatureLength  ==  14  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  in.defaultReader().write(signatureLength);  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	in.defaultReader().write(signatureLength);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read());  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.read());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength);  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signatureLength);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  in.mark(signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();    [BUGGY]  in.mark(signatureLength);  [BUGGY]    return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress16/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.7071067811865475	212	212	1	replace	in.mark(signatureLength);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
