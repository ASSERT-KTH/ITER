bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Iterator  it  =  this.requiredOptions.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(Iterator  it  =  this.requiredOptions.iterator();  it.hasNext();)  {  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	for(Iterator  it  =  this.requiredOptions.iterator();  it.hasNext();)  {	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2	[BUG]  [BUGGY]  ListIterator  iterator  =  options.requires().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.requires().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.requires().iterator();	  ListIterator    iterator    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
3	[BUG]  [BUGGY]  ListIterator  iterator  =  options.optionsOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.optionsOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.optionsOptions.iterator();	  ListIterator    iterator    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  ListIterator  iterator  =  options.opts.requiresOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.opts.requiresOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.opts.requiresOptions();	  ListIterator    iterator    =    options.options.requiresOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
5	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.requiresOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.options.requiresOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.options.requiresOptions();	  ListIterator    iterator    =    options.options.requiresOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.options.getOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.options.getOption(str);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.options.getOption(str);	  Option    option    =    options.options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.options.getOption(t,  str);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.options.getOption(t,  str);	  Option    option    =    options.options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.opts.getOption(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.opts.getOption(t);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.opts.getOption(t);	  Option    option    =    options.options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
9	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requires.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options.requires.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options.requires.iterator();	  ListIterator    it    =    options.requires.iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
10	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptions().listIterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.getOptions().listIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.getOptions().listIterator();	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
11	[BUG]  [BUGGY]  ListIterator  iterator  =  options.optionsIterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.optionsIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.optionsIterator();	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
12	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keyList();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.keyList();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.keyList();	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
13	[BUG]  [BUGGY]  Iterator  iterator  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.helpOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.helpOptions().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.keySet().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options.requiredOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options.requiredOptions.iterator();	  ListIterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
16	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.requiredOptions().iterator();	  ListIterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
17	[BUG]  [BUGGY]  ListIterator  it  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.getOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.getOptions().iterator();	  ListIterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
18	[BUG]  [BUGGY]  ListIterator  iterator  =  options.neededOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.neededOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.neededOptions().iterator();	  ListIterator    iterator    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
19	[BUG]  [BUGGY]  Iterator  iterator  =  options.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.neededOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.neededOptions.iterator();	  ListIterator    iterator    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
20	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.requireOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options.requireOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options.requireOptions.iterator();	  ListIterator    iterator    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
21	[BUG]  [BUGGY]  Iterator  iterator  =  options.requireOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.requireOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.requireOptions.iterator();	  ListIterator    iterator    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
22	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options.requiredOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options.requiredOptions.iterator();	  ListIterator    iterator    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption(true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption(true);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.stopAtNonOption(true);	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption(),  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption(),  stopAtNonOption;  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.stopAtNonOption(),  stopAtNonOption;	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption(),  stopAtNonOption);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.stopAtNonOption(),  stopAtNonOption);	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
26	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  this.options.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  this.options.iterator();	  Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  arguments.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  arguments.iterator();	  Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  ListIterator  it  =  options.getOptions().requireIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.getOptions().requireIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.getOptions().requireIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
29	[BUG]  [BUGGY]  Iterator  it  =  options.requireIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.requireIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.requireIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
30	[BUG]  [BUGGY]  ListIterator  it  =  options.optionsIterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.optionsIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.optionsIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
31	[BUG]  [BUGGY]  for(Iterator  it  =  _options.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(Iterator  it  =  _options.iterator();  it.hasNext();)  {  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	for(Iterator  it  =  _options.iterator();  it.hasNext();)  {	  for(Iterator    it    =    this.options.iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(t,  arguments);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(t,  str,  stopAtNonOption);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(str,  stopAtNonOption);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  str,  eatTheRest);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(t,  str,  eatTheRest);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  ListIterator  iterator  =  options.optionsOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.optionsOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.optionsOptions().iterator();	  ListIterator    iterator    =    options.requiresOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
38	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.getRequiredOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.getRequiredOptions();	  ListIterator    iterator    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
39	[BUG]  [BUGGY]  Iterator  iterator  =  options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.getRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.getRequiredOptions().iterator();	  ListIterator    iterator    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
40	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getAllOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.getAllOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.getAllOptions();	  ListIterator    iterator    =    options.getAllOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  eatTheRest);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption,  eatTheRest);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  str);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption,  str);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  Iterator  iterator  =  options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.requiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.requiredOptions().iterator();	  Iterator    iterator    =    options.options().iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
45	[BUG]  [BUGGY]  Iterator  iterator  =  options.opts().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.opts().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.opts().iterator();	  Iterator    iterator    =    options.options().iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
46	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.requireOptions().iterator();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
47	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requireOptions.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options.requireOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options.requireOptions.iterator();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
48	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.requireOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.requireOptions.iterator();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
49	[BUG]  [BUGGY]  for(Iterator  it  =  this.arguments.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(Iterator  it  =  this.arguments.iterator();  it.hasNext();)  {  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	for(Iterator  it  =  this.arguments.iterator();  it.hasNext();)  {	  for(Iterator    it    =    arguments.iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
50	[BUG]  [BUGGY]  for(Iterator  it  =  args.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(Iterator  it  =  args.iterator();  it.hasNext();)  {  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	for(Iterator  it  =  args.iterator();  it.hasNext();)  {	  for(Iterator    it    =    arguments.iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.opts();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.opts();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.opts();	  Option    option    =    options.options();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
52	[BUG]  [BUGGY]  options  =  options.options();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  options  =  options.options();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	options  =  options.options();	  Option    option    =    options.options();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.options()?  options.options()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.options()?  options.options()  :  null;  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.options()?  options.options()  :  null;	  Option    option    =    options.options();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
54	[BUG]  [BUGGY]  ListIterator  it  =  options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.requiresOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.requiresOptions().iterator();	  ListIterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
55	[BUG]  [BUGGY]  ListIterator  it  =  options.optionsOptions.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.optionsOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.optionsOptions.iterator();	  ListIterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
56	[BUG]  [BUGGY]  ListIterator  it  =  options.getOptions().listIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.getOptions().listIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.getOptions().listIterator();	  ListIterator    it    =    options.requiresOptions.listIterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
57	[BUG]  [BUGGY]  ListIterator  it  =  options.requiresOptions().listIterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.requiresOptions().listIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.requiresOptions().listIterator();	  ListIterator    it    =    options.requiresOptions.listIterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
58	[BUG]  [BUGGY]  ListIterator  it  =  options.options().listIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options().listIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options().listIterator();	  ListIterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  Iterator  iterator  =  options.requiresIterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.requiresIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.requiresIterator();	  ListIterator    iterator    =    options.requiresIterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
60	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptions().requiresIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.getOptions().requiresIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.getOptions().requiresIterator();	  ListIterator    iterator    =    options.requiresIterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  options  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  options  =(Option)it.next();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	options  =(Option)it.next();	  Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
62	[BUG]  [BUGGY]  Option  option  =(Option)it.getValue();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)it.getValue();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =(Option)it.getValue();	  Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options().iterator();	  ListIterator    it    =    options.requires().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
64	[BUG]  [BUGGY]  ListIterator  it  =  options.options().requires().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options().requires().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options().requires().iterator();	  ListIterator    it    =    options.requires().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
65	[BUG]  [BUGGY]  ListIterator  iterator  =  options.addOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.addOption(str);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.addOption(str);	  ListIterator    iterator    =    options.addOptions();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
66	[BUG]  [BUGGY]  ListIterator  iterator  =  options.addOption(t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.addOption(t);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.addOption(t);	  ListIterator    iterator    =    options.addOptions();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
67	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(str);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.helpOption(str);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(t,  str);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.helpOption(t,  str);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str,  t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(str,  t);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.helpOption(str,  t);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.getRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.getRequiredOptions().iterator();	  ListIterator    it    =    options.getRequiredOptions().listIterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
71	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequiredOptions().listIterator(t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.getRequiredOptions().listIterator(t);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.getRequiredOptions().listIterator(t);	  ListIterator    it    =    options.getRequiredOptions().listIterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
72	[BUG]  [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.getRequiredOptions().iterator();	  ListIterator    it    =    options.getRequiredOptions().listIterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
73	[BUG]  [BUGGY]  ListIterator  it  =  options.options.listIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options.listIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options.listIterator();	  ListIterator    it    =    options.requiredOptions.listIterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
74	[BUG]  [BUGGY]  Iterator  iterator  =  options.allOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.allOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.allOptions().iterator();	  ListIterator    iterator    =    options.allOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
75	[BUG]  [BUGGY]  Iterator  it  =  options.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.neededOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.neededOptions.iterator();	  ListIterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
76	[BUG]  [BUGGY]  ListIterator  it  =  options.neededOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.neededOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.neededOptions().iterator();	  ListIterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
77	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.keySet().iterator();	  ListIterator    iterator    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
78	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options().keyList().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options().keyList().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options().keyList().iterator();	  ListIterator    iterator    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
79	[BUG]  [BUGGY]  ListIterator  iterator  =  options.optionsList().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.optionsList().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.optionsList().iterator();	  ListIterator    iterator    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
80	[BUG]  [BUGGY]  ListIterator  iterator  =  options.missingOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.missingOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.missingOptions();	  ListIterator    iterator    =    options.missingOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
81	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options().missingOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options().missingOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options().missingOptions().iterator();	  ListIterator    iterator    =    options.missingOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
82	[BUG]  [BUGGY]  Iterator  iterator  =  options.missingOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.missingOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.missingOptions().iterator();	  ListIterator    iterator    =    options.missingOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
83	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.requiredOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.requiredOptions.iterator();	  ListIterator    it    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
84	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  <  Option>  it  =  options.values().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  <  Option>  it  =  options.values().iterator();	  Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
85	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  <  Option>  it  =  this.options.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  <  Option>  it  =  this.options.iterator();	  Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
86	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  <  Option>  it  =  options.keySet().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  <  Option>  it  =  options.keySet().iterator();	  Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
87	[BUG]  [BUGGY]  Iterator  it  =  options.optionsIterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.optionsIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.optionsIterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
88	[BUG]  [BUGGY]  Iterator  it  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.keySet().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.keySet().iterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
89	[BUG]  [BUGGY]  Iterator  it  =  options.getOptions().listIterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.getOptions().listIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.getOptions().listIterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
90	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(Iterator  it  =  options.options.iterator();  it.hasNext();)  {  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	for(Iterator  it  =  options.options.iterator();  it.hasNext();)  {	  for(Iterator    it    =    arguments.iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
91	[BUG]  [BUGGY]  for(Iterator  it  =  options.arguments.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(Iterator  it  =  options.arguments.iterator();  it.hasNext();)  {  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	for(Iterator  it  =  options.arguments.iterator();  it.hasNext();)  {	  for(Iterator    it    =    arguments.iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
92	[BUG]  [BUGGY]  ListIterator  it  =  options.allOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.allOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.allOptions().iterator();	  ListIterator    it    =    options.requires().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
93	[BUG]  [BUGGY]  ListIterator  it  =  this.options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  this.options.requiredOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  this.options.requiredOptions.iterator();	  ListIterator    it    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
94	[BUG]  [BUGGY]  IllegalArgumentIterator  it  =  options.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  IllegalArgumentIterator  it  =  options.neededOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	IllegalArgumentIterator  it  =  options.neededOptions.iterator();	  ListIterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
95	[BUG]  [BUGGY]  ListIterator  iterator  =  options.addOptions(options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.addOptions(options);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.addOptions(options);	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
96	[BUG]  [BUGGY]  Option  option  =  options.stopOption();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopOption();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.stopOption();	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption(options);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.stopAtNonOption(options);	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
98	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(t,  eatTheRest);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options.getOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options.getOptions();	  ListIterator    iterator    =    options.options.requiresOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
100	[BUG]  [BUGGY]  Option  option  =  options.options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.options.getOption(t,  stopAtNonOption);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.options.getOption(t,  stopAtNonOption);	  Option    option    =    options.options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
101	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.keyList().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options.keyList().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options.keyList().iterator();	  ListIterator    iterator    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
102	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  <  Option>  it  =  requiredOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  <  Option>  it  =  requiredOptions.iterator();	  Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
103	[BUG]  [BUGGY]  Iterator  iterator  =  options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  options.requiresOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  options.requiresOptions().iterator();	  Iterator    iterator    =    options.options().iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
104	[BUG]  [BUGGY]  ListIterator  it  =  options.requiresOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.requiresOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.requiresOptions();	  ListIterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
105	[BUG]  [BUGGY]  ListIterator  it  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.getOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.getOptions();	  ListIterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
106	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.keySet().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(Iterator  it  =  options.options.keySet().iterator();  it.hasNext();)  {  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	for(Iterator  it  =  options.options.keySet().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.keySet().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
107	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequiredOptions().listIterator(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.getRequiredOptions().listIterator(options);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.getRequiredOptions().listIterator(options);	  ListIterator    it    =    options.getRequiredOptions().listIterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
108	[BUG]  [BUGGY]  ListIterator  iterator  =  options.helpOptions().requiresIterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.helpOptions().requiresIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.helpOptions().requiresIterator();	  ListIterator    iterator    =    options.requiresIterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
109	[BUG]  [BUGGY]  ListIterator  iterator  =  options.addOptionsIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.addOptionsIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.addOptionsIterator();	  ListIterator    iterator    =    options.requiresIterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
110	[BUG]  [BUGGY]  ListIterator  it  =  requiredOptions.requireIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  requiredOptions.requireIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  requiredOptions.requireIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
111	[BUG]  [BUGGY]  Iterator  it  =  options.requiresOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.requiresOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.requiresOptions();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
112	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.requiredOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.requiredOptions();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
113	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.requireOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.requireOptions();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
114	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions.listIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.helpOptions.listIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.helpOptions.listIterator();	  ListIterator    it    =    options.requiredOptions.listIterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
115	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getAllRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.getAllRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.getAllRequiredOptions().iterator();	  ListIterator    iterator    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
116	[BUG]  [BUGGY]  ListIterator  iterator  =  option.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  option.neededOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  option.neededOptions.iterator();	  ListIterator    iterator    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
117	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  argument);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  argument);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(t,  argument);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
118	[BUG]  [BUGGY]  ListIterator  it  =  option.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  option.neededOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  option.neededOptions.iterator();	  ListIterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
119	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(str,  t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.getOption(str,  t);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
120	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.requireOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options.requireOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options.requireOptions().iterator();	  ListIterator    iterator    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
121	[BUG]  [BUGGY]  ListIterator  iterator  =  options.helpOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.helpOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.helpOptions.iterator();	  ListIterator    iterator    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
122	[BUG]  [BUGGY]  ListIterator  iterator  =  options.isRequired()?  options.getRequiredOptions().iterator()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.isRequired()?  options.getRequiredOptions().iterator()  :  null;  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.isRequired()?  options.getRequiredOptions().iterator()  :  null;	  ListIterator    iterator    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
123	[BUG]  [BUGGY]  ListIterator  iterator  =  options.findRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.findRequiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.findRequiredOptions().iterator();	  ListIterator    iterator    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
124	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options.requiresOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options.requiresOptions().iterator();	  ListIterator    iterator    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
125	[BUG]  [BUGGY]  Option  option  =  options.addOption(options.getOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.addOption(options.getOptions());  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.addOption(options.getOptions());	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
126	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.clearOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options.clearOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options.clearOptions();	  ListIterator    iterator    =    options.options.requiresOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
127	[BUG]  [BUGGY]  Option  option  =  options.options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.options.getOption(t,  arguments);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.options.getOption(t,  arguments);	  Option    option    =    options.options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
128	[BUG]  [BUGGY]  Iterator  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  iterator  =  requiredOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  iterator  =  requiredOptions.iterator();	  Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
129	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.requiredOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.requiredOptions();	  ListIterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
130	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requiresOptions.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options.requiresOptions.iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options.requiresOptions.iterator();	  ListIterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
131	[BUG]  [BUGGY]  Option  option  =  options.requiresOption();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  Option  option  =  options.requiresOption();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Option  option  =  options.requiresOption();	  Option    option    =    options.options();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
132	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions().requireIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.helpOptions().requireIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.helpOptions().requireIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
133	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.helpOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.helpOptions();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
134	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.allOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options.allOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options.allOptions().iterator();	  ListIterator    iterator    =    options.allOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
135	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requireOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  it  =  options.options.requireOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  it  =  options.options.requireOptions().iterator();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
136	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options().requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  ListIterator  iterator  =  options.options().requiredOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	ListIterator  iterator  =  options.options().requiredOptions().iterator();	  ListIterator    iterator    =    options.requiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
137	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.helpOptions().iterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
138	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().listIterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  it  =  options.helpOptions().listIterator();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	Iterator  it  =  options.helpOptions().listIterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
