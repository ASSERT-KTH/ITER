bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  iterator.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  iterator.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  iterator.iterator();	  Iterator    <    String>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
2	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.tokenList.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  this.tokenList.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  this.tokenList.iterator();	  Iterator    <    String>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
3	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  arguments;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  arguments;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  iterator.next(),  arguments;	  Iterator    <    String>    iterator    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  this.stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  this.stopAtNonOption;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  iterator.next(),  this.stopAtNonOption;	  Iterator    <    String>    iterator    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  options;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  options;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  iterator.next(),  options;	  Iterator    <    String>    iterator    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  optionList.keySet().iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  optionList.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
7	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  argument.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  argument.toString();  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  argument.toString();	  String    t    =    iterator.next()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  str,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(options,  str,  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  str,  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(options,    str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(opts,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opts,  str,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opts,  str,  stopAtNonOption);	  Option    option    =    options.getOption(options,    str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(iterator,  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(iterator,  stopAtNonOption,  options);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(iterator,  stopAtNonOption,  options);	  Option    option    =    options.getOption(str,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(iterator,  stopAtNonOption,  str);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(iterator,  stopAtNonOption,  str);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(iterator,  stopAtNonOption,  str);	  Option    option    =    options.getOption(str,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(str,  iterator,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(str,  iterator,  stopAtNonOption);	  Option    option    =    options.getOption(str,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
13	[BUG]  [BUGGY]  Option  option  =  iterator.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  iterator.getOption(str,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  iterator.getOption(str,  stopAtNonOption);	  Option    option    =    options.getOption(str,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  iterator,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  iterator,  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  iterator,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(getOptions(),    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  iterator,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  iterator,  stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  iterator,  stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(getOptions(),    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(getOptions(),  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.getOption(getOptions(),  options,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.getOption(getOptions(),  options,  stopAtNonOption);	  Option    cmd    =    options.getOption(getOptions(),    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
17	[BUG]  [BUGGY]  Options  options  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Options  options  =(Option)iterator.next();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Options  options  =(Option)iterator.next();	  options    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
18	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();	  Iterator    <    String>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  null,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  arguments,  null,  stopAtNonOption);	  Option    cmd    =    options.getOption(getOptions(),    null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  null,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  null,  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  null,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(getOptions(),    null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  null,  iterator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  null,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  null,  iterator);	  Option    cmd    =    options.getOption(getOptions(),    null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(options,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  iterator);	  Option    option    =    options.getOption(options,    arguments);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
23	[BUG]  [BUGGY]  Option  option  =  iterator.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  iterator.next();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  iterator.next();	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  opts.values().iterator();	  Iterator    <    String>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  argument,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  argument,  stopAtNonOption);	  Option    cmd    =    options.getOption(getOptions(),    argument);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
26	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getArguments(),  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(getArguments(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getArguments(),  iterator);	  Option    cmd    =    options.getOption(getArguments(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getArguments(),  arguments);	  Option    cmd    =    options.getOption(getArguments(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  argument);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  argument);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getArguments(),  argument);	  Option    cmd    =    options.getOption(getArguments(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  opt);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(stopAtNonOption,  opt);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  iterator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  iterator);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  ListIterator  iterator  =  tokenList.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =  tokenList.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  tokenList.iterator();	  ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(iterator.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(iterator.next(),  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(iterator.next(),  stopAtNonOption);	  Option    cmd    =    options.getOption(iterator.next());    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(options.next());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.getOption(options.next());  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.getOption(options.next());	  Option    cmd    =    options.getOption(iterator.next());    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
35	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.getOption(options);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.getOption(options);	  Option    cmd    =    options.getOption(iterator.next());    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
36	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(options.getOption(iterator.next());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.getOption(options.getOption(iterator.next());  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.getOption(options.getOption(iterator.next());	  Option    cmd    =    options.getOption(iterator.next());    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
37	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  properties.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  properties.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  parameters.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  parameters.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  parameters.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  iterator,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  iterator,  stopAtNonOption);	  Option    option    =    options.getOption(opt,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(opt,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  stopAtNonOption,  arguments);	  Option    option    =    options.getOption(opt,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  block,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  block,  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  block,  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(opt,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =(Option)iterator.next();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =(Option)iterator.next();	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  iterator.next(),  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.next(),  stopAtNonOption;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.next(),  stopAtNonOption;	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
45	[BUG]  [BUGGY]  Option  cmd  =  iterator.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.next(),  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.next(),  stopAtNonOption);	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
46	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  options);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  options);	  Option    option    =(Option)iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
47	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  arguments);	  Option    option    =(Option)iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
48	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  argument);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  argument);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  argument);	  Option    option    =(Option)iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
49	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  block);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  block);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  block);	  Option    option    =(Option)iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
50	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  block,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  block,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  block,  stopAtNonOption);	  Option    cmd    =    options.getOption(getOptions(),    block);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  block);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  block);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  arguments,  block);	  Option    cmd    =    options.getOption(getOptions(),    block);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
52	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  arguments;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  arguments;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  arguments;	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  this.stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  this.stopAtNonOption;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  this.stopAtNonOption;	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  argument;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  argument;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  argument;	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);	  Option    option    =    options.getOption(t,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  iterator,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  iterator,  stopAtNonOption);	  Option    option    =    options.getOption(t,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  str,  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(t,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  arguments,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  arguments,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(t,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  iterator);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
61	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  options;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  options;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  options;	  Option    option    =(Option)iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
62	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  arguments;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  arguments;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  arguments;	  Option    option    =(Option)iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
63	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  blockAtNonOption;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  blockAtNonOption;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  blockAtNonOption;	  Option    option    =(Option)iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
64	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  argument;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  argument;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  argument;	  Option    option    =(Option)iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(opts,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opts,  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opts,  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(opts,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  opts);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  opts);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(stopAtNonOption,  opts);	  Option    option    =    options.getOption(opts,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
67	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(stopAtNonOption,  iterator);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
68	[BUG]  [BUGGY]  Iterator  it  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  it  =  this.opts.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  this.opts.iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(getOptions(),  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.getOption(getOptions(),  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.getOption(getOptions(),  arguments);	  Option    cmd    =    iterator.getOption(getOptions(),    options);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(getOptions(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.getOption(getOptions(),  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.getOption(getOptions(),  stopAtNonOption);	  Option    cmd    =    iterator.getOption(getOptions(),    options);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(str,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(str,  arguments);	  Option    option    =    options.getOption(options,    str);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  str);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  str);	  Option    option    =    options.getOption(options,    str);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
73	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  this.requiredOptions.iterator();	  Iterator    <    String>    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
74	[BUG]  [BUGGY]  Option  cmd  =  optionList.getOption(getOptions(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  optionList.getOption(getOptions(),  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  optionList.getOption(getOptions(),  stopAtNonOption);	  Option    cmd    =    options.getOption(getOptions(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
75	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  this.requiredOptions.iterator();	  ListIterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
76	[BUG]  [BUGGY]  ListIterator  iterator  =  Arrays.asList(requiredOptions.iterator());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =  Arrays.asList(requiredOptions.iterator());  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  Arrays.asList(requiredOptions.iterator());	  ListIterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
77	[BUG]  [BUGGY]  Iterator  it  =(this.options!=  null)?  options.iterator()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  it  =(this.options!=  null)?  options.iterator()  :  null;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =(this.options!=  null)?  options.iterator()  :  null;	  Iterator    it    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
78	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next()  :  options;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next()  :  options;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next()  :  options;	  Option    option    =(Option)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
79	[BUG]  [BUGGY]  ListIterator  iterator  =  optionList.listIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =  optionList.listIterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  optionList.listIterator();	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
80	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =  options.listIterator(stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  options.listIterator(stopAtNonOption);	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
81	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  tokenList.listIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  tokenList.listIterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  tokenList.listIterator();	  Iterator    <    String>    iterator    =    tokenList.next();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
82	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  iterator,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  str,  iterator,  stopAtNonOption);	  Option    option    =    options.getOption(t,    str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
83	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  str,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(t,    str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
84	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(options,  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(options,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
85	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(opts,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(opts,  stopAtNonOption);	  Option    cmd    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
86	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(options,  stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(options,  stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
87	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(options,  iterator,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(options,  iterator,  stopAtNonOption);	  Option    cmd    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
88	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  arguments,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(options,  arguments,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  arguments,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(options,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  stopAtNonOption,  arguments);	  Option    option    =    options.getOption(options,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  arguments,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(str,  arguments,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(str,  arguments,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(str,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
91	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  this;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  this;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  this;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
92	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  arguments;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  arguments;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  arguments;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
93	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :   " ";  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :   " ";  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :   " ";	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
94	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  2;  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  2;	  String    t    =    iterator.next()    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
95	[BUG]  [BUGGY]  String  t  =  iterator.getNext()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.getNext()  +  1;  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.getNext()  +  1;	  String    t    =    iterator.next()    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
96	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(stopAtNonOption,  iterator);	  Option    cmd    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
97	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
98	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(str,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(str,  stopAtNonOption);	  Option    cmd    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  Iterator  it  =  this.tokenList.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  it  =  this.tokenList.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  this.tokenList.iterator();	  Iterator    it    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
100	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  str.toLowerCase();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  str.toLowerCase();  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  str.toLowerCase();	  String    t    =    iterator.next()    +    str;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
101	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  str.trim();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  str.trim();  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  str.trim();	  String    t    =    iterator.next()    +    str;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
102	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  arguments,  stopAtNonOption);	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
103	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  arguments);	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
104	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  this.stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  this.stopAtNonOption);	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
105	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  arguments.trim();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  arguments.trim();  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  arguments.trim();	  String    t    =    iterator.next()    +    arguments;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
106	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  arguments.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  arguments.toString();  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  arguments.toString();	  String    t    =    iterator.next()    +    arguments;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
107	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  arguments.substring(0,  iterator.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  arguments.substring(0,  iterator.next());  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  arguments.substring(0,  iterator.next());	  String    t    =    iterator.next()    +    arguments;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
108	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  iterator);	  Option    cmd    =    options.getOption(getOptions(),    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
109	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  option);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  option);	  Option    cmd    =    options.getOption(getOptions(),    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
110	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  null);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  arguments,  null);	  Option    cmd    =    options.getOption(getOptions(),    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(arguments,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
112	[BUG]  [BUGGY]  ListIterator  iterator  =(this.options!=  null)?  this.options.iterator()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =(this.options!=  null)?  this.options.iterator()  :  null;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =(this.options!=  null)?  this.options.iterator()  :  null;	  ListIterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
113	[BUG]  [BUGGY]  Iterator  it  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  it  =  this.requiredOptions.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  this.requiredOptions.iterator();	  Iterator    it    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
114	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(options.next(),  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(options.next(),  stopAtNonOption);	  Option    cmd    =    options.getOption(iterator.next());    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
115	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  blockAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  blockAtNonOption);	  Option    option    =(Option)iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
116	[BUG]  [BUGGY]  Option  cmd  =(options  ==  null)?  iterator.next()  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =(options  ==  null)?  iterator.next()  :  options.getOptions();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =(options  ==  null)?  iterator.next()  :  options.getOptions();	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
117	[BUG]  [BUGGY]  Option  cmd  =(options  ==  null)?  iterator.next()  :  options.clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =(options  ==  null)?  iterator.next()  :  options.clone();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =(options  ==  null)?  iterator.next()  :  options.clone();	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
118	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  str,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  str,  stopAtNonOption);	  Option    option    =    options.getOption(options,    str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
119	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(str,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
120	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  str,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(options,  str,  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  str,  stopAtNonOption,  iterator);	  Option    option    =    options.getOption(str,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
121	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  cmd;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  cmd;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  cmd;	  Option    option    =(Option)iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
122	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  opt;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  opt;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  opt;	  Option    option    =(Option)iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
123	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  options);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  options);	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
124	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  argument);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  argument);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  argument);	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
125	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
126	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(options);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(options);	  Option    cmd    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
127	[BUG]  [BUGGY]  ListIterator  iterator  =  opts.listIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =  opts.listIterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  opts.listIterator();	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
128	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  argument,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  argument,  stopAtNonOption);	  Option    option    =    options.getOption(t,    str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
129	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  str,  arguments);	  Option    option    =    options.getOption(t,    str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
130	[BUG]  [BUGGY]  Option  option  =(Option)iterator.getNext()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.getNext()  :  null;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.getNext()  :  null;	  Option    option    =(Option)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
131	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  options;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  options;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  options;	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
132	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  cmd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  cmd;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  cmd;	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
133	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  cmd);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  cmd);	  Option    option    =    options.getOption(opt,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  eatTheRest);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption,  eatTheRest);	  Option    option    =    options.getOption(opt,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
135	[BUG]  [BUGGY]  String  t  =  itserator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  itserator.next();  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  itserator.next();	  char    t    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
136	[BUG]  [BUGGY]  Option  option  =  options.getOption(getOptions(),  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(getOptions(),  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(getOptions(),  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(options,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
137	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  arguments,  stopAtNonOption,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(options,  arguments,  stopAtNonOption,  eatTheRest);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  arguments,  stopAtNonOption,  eatTheRest);	  Option    option    =    options.getOption(options,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
138	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  str);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  str);	  Option    option    =    options.getOption(options,    str);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
139	[BUG]  [BUGGY]  String  t  =  iterator.get()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.get()  +  1;  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.get()  +  1;	  String    t    =    iterator.next()    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
140	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  opts.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
141	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  tokenList;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  tokenList;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  tokenList;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
142	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  tokenList.next()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  tokenList.next()  :  null;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  tokenList.next()  :  null;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
143	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption,  eatTheRest);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(arguments,  stopAtNonOption,  eatTheRest);	  Option    option    =    options.getOption(arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
144	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(opt,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  arguments);	  Option    option    =    options.getOption(options,    arguments);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
145	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  null,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  null,  stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  null,  stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(getOptions(),    null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
146	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(getArguments(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
147	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption,  iterator);	  Option    cmd    =    options.getOption(getArguments(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
148	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(opt,  stopAtNonOption);	  Option    cmd    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
149	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(options,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(options,  arguments);	  Option    cmd    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
150	[BUG]  [BUGGY]  Iterator  it  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  it  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();	  Iterator    it    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
151	[BUG]  [BUGGY]  Iterator  it  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  it  =  neededOptions.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  neededOptions.iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
152	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  stopAtNonOption,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(getOptions(),    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
153	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  arguments);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
154	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  this.stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  this.stopAtNonOption);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
155	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  iterator,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  arguments,  iterator,  stopAtNonOption);	  Option    cmd    =    options.getOption(getOptions(),    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
156	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  this.stopAtNonOption;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  this.stopAtNonOption;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  this.stopAtNonOption;	  Option    option    =(Option)iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
157	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenList);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(tokenList);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(tokenList);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
158	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(arguments);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
159	[BUG]  [BUGGY]  Iterator  it  =(this.options!=  null)?  this.options.iterator()  :  iterator.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  it  =(this.options!=  null)?  this.options.iterator()  :  iterator.next();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =(this.options!=  null)?  this.options.iterator()  :  iterator.next();	  Iterator    it    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
160	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  block,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  block,  arguments,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  block,  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(t,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
161	[BUG]  [BUGGY]  Options  option  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Options  option  =(Option)iterator.next();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Options  option  =(Option)iterator.next();	  options    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
162	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  arguments.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  arguments.length;  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  arguments.length;	  String    t    =    iterator.next()    +    arguments;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
163	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  opt);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption,  opt);	  Option    cmd    =    options.getOption(getOptions(),    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
164	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  this.opts.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
165	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  neededOptions.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  neededOptions.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
166	[BUG]  [BUGGY]  Option  cmd  =  iterator.next()?(Option)iterator.next()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  iterator.next()?(Option)iterator.next()  :  null;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.next()?(Option)iterator.next()  :  null;	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
167	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  arguments[0];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  String  t  =  iterator.next()  +  arguments[0];  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  arguments[0];	  String    t    =    iterator.next()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
168	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  argument);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(options,  argument);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(options,  argument);	  Option    cmd    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
169	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  block;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  block;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  block;	  Iterator    <    String>    iterator    =(iterator.hasNext())?    iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
170	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.next(),  this.stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  this.stopAtNonOption);	  Option    option    =(Option)iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
171	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  str,  iterator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(options,  str,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  str,  iterator);	  Option    option    =    options.getOption(str,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
172	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  iterator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  iterator);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  str,  iterator);	  Option    option    =    options.getOption(str,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
173	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  blockAtNonOption;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  blockAtNonOption;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  blockAtNonOption;	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
174	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption,  opt);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(arguments,  stopAtNonOption,  opt);	  Option    option    =    options.getOption(arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
175	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  blockAtNonOption;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  blockAtNonOption;  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  iterator.next(),  blockAtNonOption;	  Iterator    <    String>    iterator    =    iterator.next(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
176	[BUG]  [BUGGY]  Option  option  =(Option)iterator.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =(Option)iterator.clone();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.clone();	  Option    option    =(Option)iterator.getNext();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
177	[BUG]  [BUGGY]  t  =  iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  t  =  iterator.next();  [BUGGY]        if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	t  =  iterator.next();	  String    t    =    iterator.next()    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
178	[BUG]  [BUGGY]  ListIterator  iterator  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =  neededOptions.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  neededOptions.iterator();	  ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
179	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  arguments,  opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  arguments,  opt);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(stopAtNonOption,  arguments,  opt);	  Option    option    =    options.getOption(opt,    arguments,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
180	[BUG]  [BUGGY]  ListIterator  iterator  =  iterator.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  ListIterator  iterator  =  iterator.iterator();  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  iterator.iterator();	  ListIterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
181	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(t,  stopAtNonOption);	  Option    cmd    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
182	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  argument);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Option  option  =  options.getOption(t,  argument);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  argument);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
183	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  blockAtNonOption);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  blockAtNonOption);	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
184	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {      [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  cmd);  [BUGGY]      String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }  else  if  (     "-     ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  cmd);	  Iterator    <    String>    str    =    iterator.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
