bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Iterator  <  String>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Iterator  <  String>  iterator  =  options.iterator();  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Iterator  <  String>  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	43	None	add
2	[BUG]  [BUGGY]    ListIterator  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    ListIterator  iterator  =  options.iterator();  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    ListIterator  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	43	None	add
3	[BUG]  [BUGGY]    Iterator  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Iterator  it  =  options.iterator();  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Iterator  it  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	43	None	add
4	[BUG]  [BUGGY]    Option  option  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Option  option  =  options.getOption(str);  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Option  option  =  options.getOption(str);		non-compiled	[CE]  illegal  start  of  type	43	None	add
5	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(getOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Option  cmd  =  options.getOption(getOptions());  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Option  cmd  =  options.getOption(getOptions());		non-compiled	[CE]  illegal  start  of  type	43	None	add
6	[BUG]  [BUGGY]  String  t  =  iterator.next();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]  String  t  =  iterator.next();  [BUGGY]    if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next();	String  t  =  (String)  iterator.next();  	non-compiled	[CE]  illegal  start  of  type	42	None	replace
7	[BUG]  [BUGGY]    Iterator  <  String>  iterator  =  iterator.next();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Iterator  <  String>  iterator  =  iterator.next();  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Iterator  <  String>  iterator  =  iterator.next();		non-compiled	[CE]  illegal  start  of  type	43	None	add
8	[BUG]  [BUGGY]    Option  option  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Option  option  =  options.getOption(options,  stopAtNonOption);  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Option  option  =  options.getOption(options,  stopAtNonOption);		non-compiled	[CE]  illegal  start  of  type	43	None	add
9	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(getOptions(),  arguments);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Option  cmd  =  options.getOption(getOptions(),  arguments);  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Option  cmd  =  options.getOption(getOptions(),  arguments);		non-compiled	[CE]  illegal  start  of  type	43	None	add
10	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(getOptions(),  iterator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Option  cmd  =  options.getOption(getOptions(),  iterator);  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Option  cmd  =  options.getOption(getOptions(),  iterator);		non-compiled	[CE]  illegal  start  of  type	43	None	add
11	[BUG]  [BUGGY]    Option  option  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Option  option  =(Option)iterator.next();  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Option  option  =(Option)iterator.next();		non-compiled	[CE]  illegal  start  of  type	43	None	add
12	[BUG]  [BUGGY]    Iterator  <  String>  str  =  iterator.next();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Iterator  <  String>  str  =  iterator.next();  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Iterator  <  String>  str  =  iterator.next();		non-compiled	[CE]  illegal  start  of  type	43	None	add
13	[BUG]  [BUGGY]    Option  option  =  options.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  [BUGGY]    Option  option  =  options.getOption(str,  stopAtNonOption);  [BUGGY]  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }  else  if  ( "- ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	    Option  option  =  options.getOption(str,  stopAtNonOption);		non-compiled	[CE]  illegal  start  of  type	43	None	add
