bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  tokenList.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  tokenList.next();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  tokenList.next();	      Iterator    <    String>    iterator    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  null;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  null;  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =(iterator.hasNext())?  iterator.next()  :  null;	      Iterator    <    String>    iterator    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  iterator.next(),  stopAtNonOption;  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  iterator.next(),  stopAtNonOption;	      Iterator    <    String>    iterator    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  this.options.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  optionList.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  optionList.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  optionList.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  opts.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(options,  arguments,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  arguments,  stopAtNonOption);	      Option    option    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(opts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(opts,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opts,  stopAtNonOption);	      Option    option    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);	      Option    option    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  stopAtNonOption);	      Option    option    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  stopAtNonOption;  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  stopAtNonOption;	      Iterator    <    String>    str    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  str  =  iterator.next(),  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  str  =  iterator.next(),  stopAtNonOption);	      Iterator    <    String>    str    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(stopAtNonOption);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  Iterator  it  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  it  =  this.options.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  this.options.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  Iterator  it  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  it  =  opts.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  opts.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  Iterator  it  =  optionList.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  it  =  optionList.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  optionList.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  str,  stopAtNonOption);	      Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(str,  arguments,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(str,  arguments,  stopAtNonOption);	      Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  str);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(stopAtNonOption,  str);	      Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption,  iterator);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(str,  stopAtNonOption,  iterator);	      Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  stopAtNonOption);	      Option    cmd    =    options.getOption(getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(stopAtNonOption);	      Option    cmd    =    options.getOption(getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  Option  cmd  =  iterator.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  iterator.next();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.next();	      Option    cmd    =    options.getOption(getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =(Option)iterator.next(),  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  stopAtNonOption);	      Option    option    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next(),  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =(Option)iterator.next(),  stopAtNonOption;  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next(),  stopAtNonOption;	      Option    option    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =(Option)iterator.next()  :  null;  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.next()  :  null;	      Option    option    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  str;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  String  t  =  iterator.next()  +  str;  [BUGGY]      if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  str;	  String    t    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  arguments;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  String  t  =  iterator.next()  +  arguments;  [BUGGY]      if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  arguments;	  String    t    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  argument;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  String  t  =  iterator.next()  +  argument;  [BUGGY]      if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  argument;	  String    t    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  iterator,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  iterator,  stopAtNonOption);	      Option    cmd    =    options.getOption(getOptions(),    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(getOptions(),  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  iterator.getOption(getOptions(),  options);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  iterator.getOption(getOptions(),  options);	      Option    cmd    =    options.getOption(getOptions(),    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  ListIterator  iterator  =  optionList.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  ListIterator  iterator  =  optionList.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  optionList.iterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  this.options.iterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  ListIterator  iterator  =  options.listIterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  options.listIterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  arguments,  stopAtNonOption);	      Option    cmd    =    options.getOption(getOptions(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  block);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  block);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  block);	      Option    cmd    =    options.getOption(getOptions(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  arguments);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(options,  arguments);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  arguments);	      Option    option    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(arguments,  stopAtNonOption);	      Option    option    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  options.keySet().iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  options.keySet().iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  options.values().iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  options.values().iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  Iterator  it  =  tokenList.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  it  =  tokenList.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  tokenList.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  ListIterator  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  ListIterator  iterator  =  opts.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  opts.iterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption);	      Option    cmd    =    options.getOption(getOptions(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption);	      Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(options,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(options,  stopAtNonOption);	      Option    cmd    =    options.getOption(getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(getArguments());  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getArguments());	      Option    cmd    =    options.getOption(getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  String  t  =  iterator.next()  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  String  t  =  iterator.next()  +  1;  [BUGGY]      if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	String  t  =  iterator.next()  +  1;	  String    t    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  options  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  options  =(Option)iterator.next();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	options  =(Option)iterator.next();	      Option    option    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  Option  option  =(Option)iterator.getNext();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =(Option)iterator.getNext();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =(Option)iterator.getNext();	      Option    option    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  tokenList.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  tokenList.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  tokenList.iterator();	      Iterator    <    String>    iterator    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
53	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  <  String>  iterator  =  requiredOptions.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  null,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  null,  stopAtNonOption);	      Option    cmd    =    options.getOption(getOptions(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(opt,  arguments,  stopAtNonOption);	      Option    option    =    options.getOption(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  Iterator  it  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Iterator  it  =  requiredOptions.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Iterator  it  =  requiredOptions.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  argument);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(getOptions(),  argument);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(getOptions(),  argument);	      Option    cmd    =    options.getOption(getOptions(),    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(options,  str,  stopAtNonOption);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  str,  stopAtNonOption);	      Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  option  =  options.getOption(options,  str);  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  option  =  options.getOption(options,  str);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  ListIterator  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  ListIterator  iterator  =  requiredOptions.iterator();  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	ListIterator  iterator  =  requiredOptions.iterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  char  t  =  iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  char  t  =  iterator.next();  [BUGGY]      if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	char  t  =  iterator.next();	  String    t    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(iterator.next());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {    [BUGGY]  Option  cmd  =  options.getOption(iterator.next());  [BUGGY]    String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }  else  if  (   "-   ".equals(t))  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	Option  cmd  =  options.getOption(iterator.next());	      Option    cmd    =    options.getOption(getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
