bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  opt.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.getOption(t,  arguments);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.getOption(t,  arguments);	  Option    option    =    opt.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.getOption(t,  str);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.getOption(t,  str);	  Option    option    =    opt.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  Option  option  =  opt.getOption(t,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.getOption(t,  options);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.getOption(t,  options);	  Option    option    =    opt.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  options.addValue(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(opt);	  options.addValue(t);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  options.addValue(t,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(t,  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(t,  str);	  options.addValue(t);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  options.addValue(str,  opt);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(str,  opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(str,  opt);	  options.addValue(t);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  options.removeValues(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.removeValues(t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.removeValues(t);	  options.removeValues(opt);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
8	[BUG]  [BUGGY]  Option  option  =  opt.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.helpOptions().iterator();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.helpOptions().iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.opts().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.opts().iterator();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.opts().iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.options().iterator();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.options().iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
11	[BUG]  [BUGGY]  Option  option  =  opt.options();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.options();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.options();	  Option    option    =    opt.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  Option  option  =  opt.helpOption(t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.helpOption(t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.helpOption(t);	  Option    option    =    opt.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  str);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOption(t,  str);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOption(t,  str);	  Option    option    =    options.helpOption(opt,    str);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str,  opt);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOption(str,  opt);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOption(str,  opt);	  Option    option    =    options.helpOption(opt,    str);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  opt);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOption(t,  opt);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOption(t,  opt);	  Option    option    =    options.helpOption(opt,    str);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.helpOption(opt,  arguments);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOption(opt,  arguments);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOption(opt,  arguments);	  Option    option    =    options.helpOption(opt,    str);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
17	[BUG]  [BUGGY]  options.addValue(arguments[1]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(arguments[1]);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(arguments[1]);	  opt.addValue(arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
18	[BUG]  [BUGGY]  opt.addValue(t,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(t,  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(t,  str);	  opt.addValue(str,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  opt.addValue(str,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(str,  arguments);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(str,  arguments);	  opt.addValue(str,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  option.addValue(t,  str);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(t,  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(t,  str);	  opt.addValue(str,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
21	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getKey(),  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.getOption(opt.getKey(),  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.getOption(opt.getKey(),  str);	  Option    opt    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
22	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.getOption(opt.getValue());  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.getOption(opt.getValue());	  Option    opt    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
23	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getKey(),  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.getOption(opt.getKey(),  arguments);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.getOption(opt.getKey(),  arguments);	  Option    opt    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.getOption(opt);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.getOption(str);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.getOption(str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  Option  option  =  opt.opts();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.opts();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.opts();	  Option    option    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.opt(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.opt(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.opt(opt);	  Option    option    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.opt();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.opt();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.opt();	  Option    option    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  options.addValue(opt,  arguments[0]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(opt,  arguments[0]);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(opt,  arguments[0]);	  options.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
30	[BUG]  [BUGGY]  options.addValue(opt.options[0]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(opt.options[0]);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(opt.options[0]);	  options.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
31	[BUG]  [BUGGY]  options.addValue(opt.getValue());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(opt.getValue());  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(opt.getValue());	  options.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
32	[BUG]  [BUGGY]  options.addValue(options[0]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(options[0]);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(options[0]);	  options.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  option.addValue(arguments[0],  str);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(arguments[0],  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(arguments[0],  str);	  option.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
34	[BUG]  [BUGGY]  option.addValue(arguments[1]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(arguments[1]);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(arguments[1]);	  option.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
35	[BUG]  [BUGGY]  option.addValue(arguments[0],  t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(arguments[0],  t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(arguments[0],  t);	  option.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
36	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)opt.getOption(options);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)opt.getOption(options);	  Option    option    =(Option)opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
37	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)opt.getOption(str);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)opt.getOption(str);	  Option    option    =(Option)opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
38	[BUG]  [BUGGY]  Option[]  options  =  option.opts();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option[]  options  =  option.opts();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option[]  options  =  option.opts();	  Option[]    options    =    opt.opts();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
39	[BUG]  [BUGGY]  Option  opt  =  options.options();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.options();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.options();	  Option    opt    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
40	[BUG]  [BUGGY]  Option  opt  =  options.opts();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.opts();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.opts();	  Option    opt    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
41	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.helpOption(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.helpOption(opt);	  Option    opt    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
42	[BUG]  [BUGGY]  Option  opt.setValues(arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt.setValues(arguments);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt.setValues(arguments);	  Option    opt.setValues(options);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  Option  opt  =  options.addOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.addOption(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.addOption(opt);	  Option    opt.setValues(options);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  Option  opt  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =(Option)opt.next();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =(Option)opt.next();	  Option    opt.setValues(options);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  Option  option  =  opt.getOption(true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.getOption(true);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.getOption(true);	  Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.getOption();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.getOption();	  Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
47	[BUG]  [BUGGY]  options.addOption(opt,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addOption(opt,  stopAtNonOption,  arguments);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addOption(opt,  stopAtNonOption,  arguments);	  options.addOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
48	[BUG]  [BUGGY]  options.addOption(option,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addOption(option,  stopAtNonOption,  arguments);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addOption(option,  stopAtNonOption,  arguments);	  options.addOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
49	[BUG]  [BUGGY]  Option[]  options  =  t.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option[]  options  =  t.getOptions();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option[]  options  =  t.getOptions();	  Option[]    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
50	[BUG]  [BUGGY]  Option[]  options  =  option.options();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option[]  options  =  option.options();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option[]  options  =  option.options();	  Option[]    options    =    opt.options();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
51	[BUG]  [BUGGY]  Option  option  =  opt.getOption(str,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.getOption(str,  arguments);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.getOption(str,  arguments);	  Option    option    =    opt.getOption(str,    t);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.getOption(str,  t);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.getOption(str,  t);	  Option    option    =    opt.getOption(str,    t);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.getOption(str,  opt);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.getOption(str,  opt);	  Option    option    =    opt.getOption(str,    t);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.options(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.options(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.options(opt);	  Option    option    =    options.options();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  opt.addValue(arguments[0],  stopAtNonOption,  t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(arguments[0],  stopAtNonOption,  t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(arguments[0],  stopAtNonOption,  t);	  opt.addValue(arguments[0],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
56	[BUG]  [BUGGY]  options.addValue(arguments[0],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(arguments[0],  stopAtNonOption);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(arguments[0],  stopAtNonOption);	  opt.addValue(arguments[0],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
57	[BUG]  [BUGGY]  option.addValue(arguments[0],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(arguments[0],  stopAtNonOption);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(arguments[0],  stopAtNonOption);	  opt.addValue(arguments[0],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
58	[BUG]  [BUGGY]  option.addValue(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(opt);	  option.addValue(str);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
59	[BUG]  [BUGGY]  Options  options  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Options  options  =(Option)opt.clone();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Options  options  =(Option)opt.clone();	  options    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.helpOption(opt,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOption(opt,  stopAtNonOption,  arguments);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOption(opt,  stopAtNonOption,  arguments);	  Option    option    =    options.helpOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
61	[BUG]  [BUGGY]  opt.addValue(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(t,  stopAtNonOption);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(t,  stopAtNonOption);	  opt.addValue(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
62	[BUG]  [BUGGY]  opt.addValue(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(t,  str,  stopAtNonOption);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(t,  str,  stopAtNonOption);	  opt.addValue(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
63	[BUG]  [BUGGY]  options.addValue(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(str,  stopAtNonOption);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(str,  stopAtNonOption);	  opt.addValue(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
64	[BUG]  [BUGGY]  option.addValue(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(str,  stopAtNonOption);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(str,  stopAtNonOption);	  opt.addValue(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
65	[BUG]  [BUGGY]  Option  options  =  opt.getOptions(t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  options  =  opt.getOptions(t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  options  =  opt.getOptions(t);	  Option    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
66	[BUG]  [BUGGY]  Option  options  =  opt.getOption(t);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  options  =  opt.getOption(t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  options  =  opt.getOption(t);	  Option    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
67	[BUG]  [BUGGY]  Options  options  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Options  options  =  opt.getOptions();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Options  options  =  opt.getOptions();	  Option    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
68	[BUG]  [BUGGY]  options.addOption(opt,  str);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addOption(opt,  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addOption(opt,  str);	  options.addOption(opt);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
69	[BUG]  [BUGGY]  options.addOption(opt,  t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addOption(opt,  t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addOption(opt,  t);	  options.addOption(opt);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
70	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions().get(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.helpOptions().get(t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.helpOptions().get(t);	  Option    opt    =    options.helpOptions().get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
71	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions().get(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.helpOptions().get(option);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.helpOptions().get(option);	  Option    opt    =    options.helpOptions().get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
72	[BUG]  [BUGGY]  Option  opt  =  options.options().get(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.options().get(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.options().get(opt);	  Option    opt    =    options.helpOptions().get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
73	[BUG]  [BUGGY]  Option  option  =  opt.helpOption(arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.helpOption(arguments);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.helpOption(arguments);	  Option    option    =    opt.helpOption(options);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
74	[BUG]  [BUGGY]  Option[]  options  =  opt.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option[]  options  =  opt.clone();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option[]  options  =  opt.clone();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
75	[BUG]  [BUGGY]  Option[]  options  =  opt.cloneAllOptions();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option[]  options  =  opt.cloneAllOptions();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option[]  options  =  opt.cloneAllOptions();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
76	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions().clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.helpOptions().clone();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.helpOptions().clone();	  Option    opt    =    options.helpOptions().clearValues();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
77	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.helpOptions().iterator();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.helpOptions().iterator();	  Option    opt    =    options.helpOptions().clearValues();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
78	[BUG]  [BUGGY]  Option  option  =(Option)opt.clonePath();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)opt.clonePath();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)opt.clonePath();	  Option    option    =(Option)opt.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
79	[BUG]  [BUGGY]  Option  option  =(Option)option.cloneTree();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)option.cloneTree();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)option.cloneTree();	  Option    option    =(Option)opt.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
80	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(t,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)opt.getOption(t,  options);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)opt.getOption(t,  options);	  Option    option    =(Option)opt.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
81	[BUG]  [BUGGY]  Option  option  =  opt.helpOption(options,  t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.helpOption(options,  t);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.helpOption(options,  t);	  Option    option    =    options.helpOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
82	[BUG]  [BUGGY]  Option  option  =(Option)option.getValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)option.getValue();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)option.getValue();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
83	[BUG]  [BUGGY]  option.addValue(str,  opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(str,  opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(str,  opt);	  option.addValue(t);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
84	[BUG]  [BUGGY]  option.addValue(str,  t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(str,  t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(str,  t);	  option.addValue(t);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
85	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt.getKey(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.getOption(opt.getKey(),  stopAtNonOption);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.getOption(opt.getKey(),  stopAtNonOption);	  Option    opt    =    options.getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
86	[BUG]  [BUGGY]  Option  options  =  opt.cloneOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  options  =  opt.cloneOptions();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  options  =  opt.cloneOptions();	  Option    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
87	[BUG]  [BUGGY]  Option  options  =  opt.getOptions(true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  options  =  opt.getOptions(true);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  options  =  opt.getOptions(true);	  Option    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
88	[BUG]  [BUGGY]  option.addValue(opt,  arguments[0]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(opt,  arguments[0]);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(opt,  arguments[0]);	  option.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
89	[BUG]  [BUGGY]  option.addValue(options[0]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option.addValue(options[0]);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option.addValue(options[0]);	  option.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
90	[BUG]  [BUGGY]  opt.addValue(arguments,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(arguments,  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(arguments,  str);	  opt.addValue(str,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
91	[BUG]  [BUGGY]  Options  option  =(Option)option.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Options  option  =(Option)option.clone();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Options  option  =(Option)option.clone();	  Options    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
92	[BUG]  [BUGGY]  option  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option  option  =(Option)opt.clone();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option  option  =(Option)opt.clone();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
93	[BUG]  [BUGGY]  options.addValue(opt,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(opt,  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(opt,  str);	  options.addValue(t);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  options.addValue(t,  opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(t,  opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(t,  opt);	  options.addValue(t);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
95	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions().clear(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.helpOptions().clear(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.helpOptions().clear(opt);	  Option    opt    =    options.helpOptions().clearValues();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
96	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.getOption(t,  opt);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.getOption(t,  opt);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.helpOption(opt,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOption(opt,  this.stopAtNonOption);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOption(opt,  this.stopAtNonOption);	  Option    option    =    options.helpOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
98	[BUG]  [BUGGY]  options.addValue(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(option);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(option);	  options.addValue(str);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
99	[BUG]  [BUGGY]  Option  option  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.getOptions();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.getOptions();	  Option[]    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions().get(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.helpOptions().get(opt,  stopAtNonOption);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.helpOptions().get(opt,  stopAtNonOption);	  Option    opt    =    options.helpOptions().get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
101	[BUG]  [BUGGY]  Option  opt.setOptions(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt.setOptions(options);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt.setOptions(options);	  Option    opt.setValues(options);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
102	[BUG]  [BUGGY]  opt.addValue(str,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(str,  stopAtNonOption,  arguments);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(str,  stopAtNonOption,  arguments);	  opt.addValue(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().get(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOptions().get(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOptions().get(opt);	  option.addValue(str);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
104	[BUG]  [BUGGY]  Option  option  =  options.helpOptions(opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOptions(opt);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOptions(opt);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
105	[BUG]  [BUGGY]  Options  opt  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Options  opt  =(Option)opt.clone();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Options  opt  =(Option)opt.clone();	  options    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
106	[BUG]  [BUGGY]  Option  option  =  opt.helpOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.helpOption(options,  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.helpOption(options,  stopAtNonOption);	  Option    option    =    opt.helpOption(options);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
107	[BUG]  [BUGGY]  Option  option  =(Option)opt.clonePosition();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)opt.clonePosition();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)opt.clonePosition();	  Option    option    =(Option)opt.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
108	[BUG]  [BUGGY]  options.addOption(opt,  stopAtNonOption,  t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addOption(opt,  stopAtNonOption,  t);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addOption(opt,  stopAtNonOption,  t);	  options.addOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
109	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(option,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)opt.getOption(option,  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)opt.getOption(option,  stopAtNonOption);	  Option    option    =(Option)opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
110	[BUG]  [BUGGY]  Option[]  options  =  option.cloneOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option[]  options  =  option.cloneOptions();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option[]  options  =  option.cloneOptions();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
111	[BUG]  [BUGGY]  opt.addValue(arguments[0],  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(arguments[0],  stopAtNonOption,  options);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(arguments[0],  stopAtNonOption,  options);	  opt.addValue(arguments[0],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
112	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str,  t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  options.helpOption(str,  t);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  options.helpOption(str,  t);	  Option    option    =    options.helpOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
113	[BUG]  [BUGGY]  options.addValue(option,  arguments[0]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValue(option,  arguments[0]);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValue(option,  arguments[0]);	  options.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
114	[BUG]  [BUGGY]  Option  opt  =  options.stopAtNonOption();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.stopAtNonOption();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.stopAtNonOption();	  Option    opt    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
115	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.getOption(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.getOption(opt);	  Option    opt    =    options.helpOptions().get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
116	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =(Option)opt.getOption(t,  str);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =(Option)opt.getOption(t,  str);	  Option    option    =(Option)opt.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
117	[BUG]  [BUGGY]  Option  option  =  opt.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.getOption(str,  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.getOption(str,  stopAtNonOption);	  Option    option    =    opt.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  options.addValues(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addValues(opt);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addValues(opt);	  options.removeValues(opt);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
119	[BUG]  [BUGGY]  Option  opt  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.getOptions();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.getOptions();	  Option    opt    =    options.clearValues();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
120	[BUG]  [BUGGY]  opt.addValue(arguments[0],  stopAtNonOption,  str);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(arguments[0],  stopAtNonOption,  str);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(arguments[0],  stopAtNonOption,  str);	  opt.addValue(arguments[0],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
121	[BUG]  [BUGGY]  Option  options  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  options  =  option.getOptions();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  options  =  option.getOptions();	  Option    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
122	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions().clear();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  opt  =  options.helpOptions().clear();  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  opt  =  options.helpOptions().clear();	  Option    opt    =    options.helpOptions().clearValues();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
123	[BUG]  [BUGGY]  Option  option  =  opt.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.clone();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.clone();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
124	[BUG]  [BUGGY]  Option  option  =  opt.getOption(t,  argument);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  opt.getOption(t,  argument);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  opt.getOption(t,  argument);	  Option    option    =    opt.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
125	[BUG]  [BUGGY]  Option  option  =  t.getOption(str,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  Option  option  =  t.getOption(str,  opt);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	Option  option  =  t.getOption(str,  opt);	  Option    option    =    opt.getOption(str,    t);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
126	[BUG]  [BUGGY]  option  =(Option)option.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  option  =(Option)option.clone();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	option  =(Option)option.clone();	  option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
127	[BUG]  [BUGGY]  opt.addValue(str,  argument);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  opt.addValue(str,  argument);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	opt.addValue(str,  argument);	  opt.addValue(str,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
128	[BUG]  [BUGGY]  options.addOption(opt,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();      [BUGGY]  options.addOption(opt,  arguments);  [BUGGY]      }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	options.addOption(opt,  arguments);	  options.addOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
