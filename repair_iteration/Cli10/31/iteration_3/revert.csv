projects/Cli10/src/java/org/apache/commons/cli/Parser.java251
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.values());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.length);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.propertyNames().size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.hasProperty(propertyNames())){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.isEmpty()){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optioncmd=options.getOption(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.properties();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.properties();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.values();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||values.size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optioncmd=options.getOption(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optioncmd=options.getOption(option,value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optionoption=options.getOption(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.size()!=0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.keySet());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.values()+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=newHashSet<String>(properties.values());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.length+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.length,properties.length);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.hasProperty(propertyNames())){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.hasProperty(propertyNames())){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.hasProperty(propertyNames()+1)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.propertyNames().size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.propertyNames().size()!=0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.propertyNames().size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(option==null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.propertyNames();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.requiredOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.keySet();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(values==null||properties.size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(values==null||values.size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.isEmpty()){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.isEmpty()){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||propertyNames.isEmpty()){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.properties());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.propertyNames();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.requires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(key);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(0);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.propertyNames!=null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.propertyNames==null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newLinkedList();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList(0);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.size()-1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.size()+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.size()-2);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(0);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.requires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList(requiredOptions);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.values();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=options.properties();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.size()==1){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newLinkedList<String>(properties.length);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(value==null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newLinkedList<String>(properties.values());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.propertyNames!=null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=options.get(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newLinkedList<String>();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.keySet().get(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayListWithCapacity(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(8);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.requiresOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.propertyNames().contains(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.propertyNames());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.getRequiredOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.propertyRequires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newLinkedList<String>(properties.length+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=newHashSet<String>(properties.length);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newLinkedList<String>(properties.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.requiresOptions());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=options.requiresOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=cmd.requiredOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.getRequiredOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.propertyRequiredOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=properties.propertyRequires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=options.propertyNames();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=options.values();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=options.requires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=newHashSet<String>(properties.keySet());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=newHashSet<String>(properties.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251ArrayList<String>requiredOptions=newArrayList<String>(properties.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=options.get(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=options.get(key);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(cmd==null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251ArrayList<String>requiredOptions=newArrayList<String>(properties.values());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.propertyNames==null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList(properties);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optioncmd=options.getOption(value,option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optioncmd=options.getOption(option,value,requiredOptions);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optioncmd=options.getOption(option,value-1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.size()!=0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newLinkedList<String>(requiredOptions.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=newHashSet<String>();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(2);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(4);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(propers.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(option==null||options.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(cmd==null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(value.length);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(value.toString());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames!=null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames!=null||properties.hasProperty(propertyNames())){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.size()==1){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayListWithCapacity(properties);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayListWithCapacity(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList(1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.keySet();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.length+2);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optionoption=options.getOption(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optionoption=options.getOption(option,value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251optionoption=options.getOption(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(0).propertyNames();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(0).properties;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(0).properties();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.propertyNames!=null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(option==null||properties.hasOption(value)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(value!=null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||propertyNames.isEmpty()){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(requiredOptions.size()-1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(requiredOptions.size()+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newHashSet();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=Lists.newHashSet();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optioncmd=options.getOption(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optioncmd=options.getOption(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.propertyNames().contains(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames!=null||properties.propertyNames().contains(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.propertyNames().contains(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.propertyNames().size()>=0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(key,value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(key+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(propertyName);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(value.toString());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.requires());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.length,properties.length+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.size(),properties.length);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.length,values.length);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(values==null||values.size()!=0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.keySet().get(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.keySet().get(key);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.propertyNames().get(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames!=null||properties.isEmpty()){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=options.requires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=props.requires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.propertyNames==null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=opt.requiresOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=properties.propertyValues();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(value-1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(value+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(value==null||options.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(opt==null||properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(values==null||values.size()==1){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames!=null||properties.propertyNames!=null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newLinkedList(requiredOptions);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newLinkedList(value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(value.cloneTree());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>neededOptions=newArrayList<String>(properties.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251ArrayList<String>requiredOptions=newArrayList<String>(properties.keySet());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(propers.values());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=newArrayList<String>(properties.values());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(6);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.get(index);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(option==null||properties.propertyNames().contains(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames!=null||properties.propertyNames().size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList(value,tokenList);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=options.keySet().get(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames!=null||properties.propertyNames==null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=options.keySet();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=options.propertyNames();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayListWithCapacity(value,value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=options.requiredOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(options==null||properties.size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(values==null||properties.size()!=0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(properties.length,value);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(value.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=Lists.newArrayList(requiredOptions);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(value==null||properties.size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.propertyNames().size()!=0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.size()>0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(propertyNames==null||properties.size()==1){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>requiredOptions=this.properties.requires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||properties.size()!=1){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||propertyNames.isEmpty()){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayListWithCapacity(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayListWithCapacity(value)+1;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=this.properties.requiresOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null&&properties.propertyNames().size()==0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties==null||property.propertyNames==null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.properties().get(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null&&properties.propertyNames!=null){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(RequiredOptions.class);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(RequiredOptions.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.size()!=0){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=newArrayList<String>(7);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(option==null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Set<String>requiredOptions=newArrayList<String>(properties.size());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Enumeration<String>cmd=properties.keySet();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=Lists.newArrayList(value+1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null&&properties.isEmpty()){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251List<String>requiredOptions=this.properties.requires();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null&&properties.propertyNames().contains(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251Optionoption=options.getOptionValue(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null&&properties.hasOption(option)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(property==null||properties.hasProperty(propertyNames())){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null||properties.hasProperty(propertyNames()+1)){
projects/Cli10/src/java/org/apache/commons/cli/Parser.java251if(properties!=null&&properties.hasProperty(propertyNames())){
