bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());	  List    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
2	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  properties.getRequiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  properties.getRequiredOptions();	  List    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
3	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyRequires();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyRequires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  properties.propertyRequires();	  List    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
4	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.length  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.length  +  1);	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>(properties.length);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
5	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.length);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.length);	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>(properties.length);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
6	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>(properties.length);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
7	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requiresOptions());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requiresOptions());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requiresOptions());	  List    <    String>    requiredOptions    =    properties.requiresOptions();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
8	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.requiresOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  options.requiresOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  options.requiresOptions();	  List    <    String>    requiredOptions    =    properties.requiresOptions();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
9	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  cmd.requiredOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  cmd.requiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  cmd.requiredOptions();	  Enumeration    <    String>    requiredOptions    =    properties.requiredOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
10	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.getRequiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  properties.getRequiredOptions();	  Enumeration    <    String>    requiredOptions    =    properties.requiredOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
11	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  properties.propertyRequiredOptions();	  Enumeration    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
12	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();	  Enumeration    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
13	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.propertyNames();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  options.propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  options.propertyNames();	  List    <    String>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
14	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.values();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  options.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  options.values();	  List    <    String>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
15	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.requires();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  options.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  options.requires();	  List    <    String>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
16	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.keySet());	  Set    <    String>    requiredOptions    =    new    HashSet    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
18	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
19	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  options.get(value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  options.get(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  options.get(value);	  Enumeration    <    String>    cmd    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
20	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  options.get(key);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  options.get(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  options.get(key);	  Enumeration    <    String>    cmd    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
21	[BUG]  [BUGGY]  if(cmd  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(cmd  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(cmd  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames())&&!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
22	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames())&&!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
23	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
24	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties  ==  null  ||  properties.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
25	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties);	  List    <    String>    requiredOptions    =    Lists.newArrayList(value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
26	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(options);	  List    <    String>    requiredOptions    =    Lists.newArrayList(value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value,  option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(value,  option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Option  cmd  =  options.getOption(value,  option);	  Option    cmd    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(option,  value,  requiredOptions);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Option  cmd  =  options.getOption(option,  value,  requiredOptions);	  Option    cmd    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  value  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(option,  value  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Option  cmd  =  options.getOption(option,  value  -  1);	  Option    cmd    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames  ==  null  ||  properties.size()!=  0)  {	  if(propertyNames    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(requiredOptions.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  LinkedList  <  String>(requiredOptions.size());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
32	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>();	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
33	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(2);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(2);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
34	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(4);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(4);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(4);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
35	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
36	[BUG]  [BUGGY]  if(option  ==  null  ||  options.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  options.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(option  ==  null  ||  options.hasOption(option))  {	  if(option    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
37	[BUG]  [BUGGY]  if(cmd  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(cmd  ==  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(cmd  ==  null  ||  properties.hasOption(option))  {	  if(option    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
38	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.length);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.length);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(value);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
39	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.toString());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.toString());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.toString());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(value);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
40	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames!=  null  ||  properties.hasOption(option))  {	  if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames!=  null  ||  properties.hasProperty(propertyNames()))  {	  if(properties!=    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  ||  properties.size()  ==  1)  {	  if(properties    ==    null    ||    properties.size()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
43	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(value);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
44	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(options);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(value);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
45	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(1);	  List    <    String>    requiredOptions    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
46	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.keySet();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  properties.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  properties.keySet();	  List    <    String>    requiredOptions    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
47	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length  +  2);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length  +  2);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
48	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Option  option  =  options.getOption(value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(option,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Option  option  =  options.getOption(option,  value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  option  option  =  options.getOption(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	option  option  =  options.getOption(value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).propertyNames();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(0).propertyNames();	  Enumeration    <    String>    cmd    =    properties.get(0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
52	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).properties;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).properties;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(0).properties;	  Enumeration    <    String>    cmd    =    properties.get(0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
53	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).properties();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(0).properties();	  Enumeration    <    String>    cmd    =    properties.get(0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
54	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
55	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.hasOption(value))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  properties.hasOption(value))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(option  ==  null  ||  properties.hasOption(value))  {	  if(value    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
56	[BUG]  [BUGGY]  if(value!=  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(value!=  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(value!=  null  ||  properties.hasOption(option))  {	  if(value    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
57	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {	  if(properties    ==    null    ||    propertyNames.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
58	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  -  1);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
59	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  +  1);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
60	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newHashSet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newHashSet();	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
61	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newHashSet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Set  <  String>  requiredOptions  =  Lists.newHashSet();	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
62	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Option  cmd  =  options.getOption(opt);	  Option    cmd    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Option  cmd  =  options.getOption(options);	  Option    cmd    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
64	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties  ==  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
65	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames!=  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
66	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames  ==  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
67	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(key,  value);	  Enumeration    <    String>    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
69	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(key  +  1);	  Enumeration    <    String>    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
70	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(propertyName);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(propertyName);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(propertyName);	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
71	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(value.toString());	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
72	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requires());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requires());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requires());	  List    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
73	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  properties.length  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  properties.length  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  properties.length  +  1);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.length,    properties.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
74	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size(),  properties.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size(),  properties.length);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size(),  properties.length);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.length,    properties.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
75	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  values.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  values.length);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  values.length);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.length,    properties.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
76	[BUG]  [BUGGY]  if(values  ==  null  ||  values.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(values  ==  null  ||  values.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(values  ==  null  ||  values.size()!=  0)  {	  if(values    ==    null    ||    values.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
77	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.keySet().get(value);	  Enumeration    <    String>    cmd    =    properties.keySet().get(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
78	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(key);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.keySet().get(key);	  Enumeration    <    String>    cmd    =    properties.keySet().get(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
79	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyNames().get(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyNames().get(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.propertyNames().get(option);	  Enumeration    <    String>    cmd    =    properties.keySet().get(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
80	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames!=  null  ||  properties.isEmpty())  {	  if(properties!=    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
81	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  options.requires();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  options.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  options.requires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
82	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requires();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  props.requires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
83	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
84	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  opt.requiresOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  opt.requiresOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  opt.requiresOptions();	  List    <    String>    requiredOptions    =    properties.requiresOptions();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
85	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyValues();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyValues();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  properties.propertyValues();	  List    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
86	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(value  -  1);	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
87	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(value  +  1);	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
88	[BUG]  [BUGGY]  if(value  ==  null  ||  options.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  options.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(value  ==  null  ||  options.hasOption(option))  {	  if(value    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
89	[BUG]  [BUGGY]  if(opt  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(opt  ==  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(opt  ==  null  ||  properties.hasOption(option))  {	  if(value    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
90	[BUG]  [BUGGY]  if(values  ==  null  ||  values.size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(values  ==  null  ||  values.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(values  ==  null  ||  values.size()  ==  1)  {	  if(values    ==    null    ||    values.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
91	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames!=  null  ||  properties.propertyNames!=  null)  {	  if(properties!=    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
92	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(requiredOptions);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newLinkedList(requiredOptions);	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
93	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newLinkedList(value);	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
94	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.cloneTree());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.cloneTree());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.cloneTree());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(value);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
95	[BUG]  [BUGGY]  List  <  String>  neededOptions  =  new  ArrayList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  neededOptions  =  new  ArrayList  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  neededOptions  =  new  ArrayList  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
96	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
97	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.values());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.values());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values()    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
98	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values()    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
99	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(6);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(6);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(6);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
100	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(index);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(index);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.get(index);	  Enumeration    <    String>    cmd    =    properties.get(0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
101	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(option  ==  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
102	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
103	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value,  tokenList);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value,  tokenList);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(value,  tokenList);	  List    <    String>    requiredOptions    =    Lists.newArrayList(value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
104	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  options.keySet().get(option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  options.keySet().get(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  options.keySet().get(option);	  Enumeration    <    String>    cmd    =    properties.keySet().get(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
105	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames!=  null  ||  properties.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
106	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  options.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  options.keySet();	  List    <    String>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
107	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  options.propertyNames();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  options.propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  options.propertyNames();	  Enumeration    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
108	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value,  value);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(value);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
109	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  options.requiredOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  options.requiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  options.requiredOptions();	  Enumeration    <    String>    requiredOptions    =    properties.requiredOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
110	[BUG]  [BUGGY]  if(options  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(options  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(options  ==  null  ||  properties.size()  ==  0)  {	  if(values    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
111	[BUG]  [BUGGY]  if(values  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(values  ==  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(values  ==  null  ||  properties.size()!=  0)  {	  if(values    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
112	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.length,  value);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.length,    properties.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
113	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
114	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Set  <  String>  requiredOptions  =  Lists.newArrayList(requiredOptions);	  List    <    String>    requiredOptions    =    Lists.newArrayList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
115	[BUG]  [BUGGY]  if(value  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(value  ==  null  ||  properties.size()  ==  0)  {	  if(values    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
116	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  ||  properties.propertyNames().size()!=  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
117	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  >  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  ||  properties.size()  >  0)  {	  if(properties!=    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
118	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(propertyNames  ==  null  ||  properties.size()  ==  1)  {	  if(propertyNames    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
119	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  this.properties.requires();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  this.properties.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  requiredOptions  =  this.properties.requires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
120	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties  ==  null  ||  properties.size()!=  1)  {	  if(properties    ==    null    ||    properties.size()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
121	[BUG]  [BUGGY]  if(properties!=  null  ||  propertyNames.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  propertyNames.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  ||  propertyNames.isEmpty())  {	  if(properties    ==    null    ||    propertyNames.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
122	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(option);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(value);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
123	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value)+  1;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value)+  1;	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(value);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
124	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  this.properties.requiresOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  this.properties.requiresOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  this.properties.requiresOptions();	  List    <    String>    requiredOptions    =    properties.requiresOptions();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
125	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
126	[BUG]  [BUGGY]  if(properties  ==  null  ||  property.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  property.propertyNames  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties  ==  null  ||  property.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
127	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().get(option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().get(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.properties().get(option);	  Enumeration    <    String>    cmd    =    properties.keySet().get(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
128	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  &&  properties.propertyNames!=  null)  {	  if(properties!=    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
129	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class);	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
130	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.size());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
131	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
132	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(7);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(7);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(7);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
133	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(option  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames())&&!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
134	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
135	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Enumeration  <  String>  cmd  =  properties.keySet();	  Enumeration    <    String>    cmd    =    properties.get(0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
136	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(value  +  1);	  List    <    String>    requiredOptions    =    Lists.newArrayList(value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
137	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  &&  properties.isEmpty())  {	  if(properties!=    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
138	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  this.properties.requires();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  this.properties.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	List  <  String>  requiredOptions  =  this.properties.requires();	  List    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
139	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  &&  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
140	[BUG]  [BUGGY]  Option  option  =  options.getOptionValue(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOptionValue(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	Option  option  =  options.getOptionValue(option);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
141	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  &&  properties.hasOption(option))  {	  if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
142	[BUG]  [BUGGY]  if(property  ==  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(property  ==  null  ||  properties.hasProperty(propertyNames()))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()    +    1))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
143	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames()  +  1))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames()  +  1))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  ||  properties.hasProperty(propertyNames()  +  1))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()    +    1))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
144	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.hasProperty(propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	if(properties!=  null  &&  properties.hasProperty(propertyNames()))  {	  if(properties!=    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
