bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(String)options.get(buff.substring(0,  buff.length()  -  2));  [CE]  [FE]    AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  return(String)options.get(buff.substring(0,  buff.length()  -  2));  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	return(String)options.get(buff.substring(0,  buff.length()  -  2));	}  	non-compiled	[CE]  	3	None	replace
2	[BUG]  [BUGGY]  buff.append( "n ").append(buff.substring(0,  buff.length()  -  2));  [CE]  [FE]      AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  buff.append( "n ").append(buff.substring(0,  buff.length()  -  2));  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	buff.append( "n ").append(buff.substring(0,  buff.length()  -  2));	}  	non-compiled	[CE]  	3	None	replace
3	[BUG]  [BUGGY]  return(String)options.get(buff.substring(0,  buff.length()  -  1));  [CE]  [FE]        AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  return(String)options.get(buff.substring(0,  buff.length()  -  1));  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	return(String)options.get(buff.substring(0,  buff.length()  -  1));	}  	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  buff.append( ";n ").append(buff.substring(0,  buff.length()  -  2));  [CE]  [FE]          AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  buff.append( ";n ").append(buff.substring(0,  buff.length()  -  2));  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	buff.append( ";n ").append(buff.substring(0,  buff.length()  -  2));	}  	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]    [CE]  [FE]            AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	  	}  	non-compiled	[CE]  	3	None	replace
6	[BUG]  [BUGGY]    buff.append( ", ");  [CE]  [FE]    AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    buff.append( ", ");  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    buff.append( ", ");		non-compiled	[CE]  	4	None	add
7	[BUG]  [BUGGY]    buff.append( "n ");  [CE]  [FE]      AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    buff.append( "n ");  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    buff.append( "n ");		non-compiled	[CE]  	4	None	add
8	[BUG]  [BUGGY]    buff.append( ";n ");  [CE]  [FE]        AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    buff.append( ";n ");  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    buff.append( ";n ");		non-compiled	[CE]  	4	None	add
9	[BUG]  [BUGGY]    buff.append( ": ");  [CE]  [FE]          AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    buff.append( ": ");  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    buff.append( ": ");		non-compiled	[CE]  	4	None	add
10	[BUG]  [BUGGY]    if(opts.contains(buff))  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    if(opts.contains(buff))  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    if(opts.contains(buff))  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }		non-compiled	[CE]  	4	None	add
11	[BUG]  [BUGGY]    if(opts.contains(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    if(opts.contains(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    if(opts.contains(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }		non-compiled	[CE]  	4	None	add
12	[BUG]  [BUGGY]    if(opts.containsKey(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    if(opts.containsKey(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    if(opts.containsKey(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }		non-compiled	[CE]  	4	None	add
13	[BUG]  [BUGGY]  }  else  if(options.hasOption(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  }  else  if(options.hasOption(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	}  else  if(options.hasOption(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	}  	non-compiled	[CE]  	3	None	replace
14	[BUG]  [BUGGY]  }  else  if(options.hasOption(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ": ");  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  }  else  if(options.hasOption(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ": ");  }  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	}  else  if(options.hasOption(buff))  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ": ");  }	}  	non-compiled	[CE]  	3	None	replace
15	[BUG]  [BUGGY]  }  else  if(options.isRequired())  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  }  else  if(options.isRequired())  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	}  else  if(options.isRequired())  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	}  	non-compiled	[CE]  	3	None	replace
16	[BUG]  [BUGGY]    buff.append( "  <   ").append(buff.substring(0,  buff.length()  -  2));  [CE]  [FE]    AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    buff.append( "  <   ").append(buff.substring(0,  buff.length()  -  2));  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    buff.append( "  <   ").append(buff.substring(0,  buff.length()  -  2));		non-compiled	[CE]  	4	None	add
17	[BUG]  [BUGGY]    buff.append( "  <   ").append(buff.substring(0,  buff.length()  -  1));  [CE]  [FE]      AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    buff.append( "  <   ").append(buff.substring(0,  buff.length()  -  1));  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    buff.append( "  <   ").append(buff.substring(0,  buff.length()  -  1));		non-compiled	[CE]  	4	None	add
18	[BUG]  [BUGGY]    buff.append( ", ").append(buff.substring(0,  buff.length()  -  2));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    buff.append( ", ").append(buff.substring(0,  buff.length()  -  2));  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    buff.append( ", ").append(buff.substring(0,  buff.length()  -  2));		non-compiled	[CE]  illegal  start  of  expression	4	None	add
19	[BUG]  [BUGGY]    iter.remove();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]    iter.remove();  [BUGGY]  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	    iter.remove();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
20	[BUG]  [BUGGY]  buff.append( "  <   ").append(buff.charAt(0)).append( "> ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  buff.append( "  <   ").append(buff.charAt(0)).append( "> ");  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	buff.append( "  <   ").append(buff.charAt(0)).append( "> ");	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  buff.append( "  <   ").append(buff.substring(0,  buff.length()));  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    while  (iter.hasNext())  {  buff.append(iter.next());  buff.append( ",   ");  }  throw  new  MissingOptionException(buff.substring(0,  buff.length()  -  2));  }  [BUGGY]  buff.append( "  <   ").append(buff.substring(0,  buff.length()));  [BUGGY]    [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	buff.append( "  <   ").append(buff.substring(0,  buff.length()));	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
