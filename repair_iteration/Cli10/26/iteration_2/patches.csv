bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opt.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  opt.values().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  opt.values().iterator();	  Iterator    <    Option>    iterator    =    opt.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
2	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  option.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  option.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  option.keySet().iterator();	  Iterator    <    Option>    iterator    =    opt.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
3	[BUG]  [BUGGY]  parseOption(t,  iterator,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  requiredOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  requiredOptions,  stopAtNonOption);	  parseOption(t,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
4	[BUG]  [BUGGY]  parseOption(t,  iterator,  neededOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  neededOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  neededOptions,  stopAtNonOption);	  parseOption(t,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
5	[BUG]  [BUGGY]  parse(t,  iterator,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator,  requiredOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator,  requiredOptions,  stopAtNonOption);	  parseOption(t,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
6	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().iterator(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().iterator(t,  stopAtNonOption);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  options.getOptions().iterator(t,  stopAtNonOption);	  Iterator    <    Option>    iterator    =    options.getOptions().iterator(t);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
7	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().iteratorIfNull(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().iteratorIfNull(t);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  options.getOptions().iteratorIfNull(t);	  Iterator    <    Option>    iterator    =    options.getOptions().iterator(t);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
8	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().iterator(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().iterator(t,  eatTheRest);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  options.getOptions().iterator(t,  eatTheRest);	  Iterator    <    Option>    iterator    =    options.getOptions().iterator(t);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
9	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.options.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.options.iterator();	  Iterator    iterator    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
10	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(t,  stopAtNonOption);	  Option    iterator    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(str,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(str,  stopAtNonOption,  arguments);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(str,  stopAtNonOption,  arguments);	  Option    iterator    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(t,  str,  stopAtNonOption);	  Option    iterator    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(t,  str).iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(t,  str).iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(t,  str).iterator();	  Option    iterator    =    options.getOption(t).iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
14	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(t,  stopAtNonOption).iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(t,  stopAtNonOption).iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(t,  stopAtNonOption).iterator();	  Option    iterator    =    options.getOption(t).iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
15	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(t),  str.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(t),  str.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(t),  str.iterator();	  Option    iterator    =    options.getOption(t).iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
16	[BUG]  [BUGGY]  Iterator  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  t.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  t.iterator();	  Iterator    iterator    =    this.arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptionsList().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptionsList().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  options.getOptionsList().iterator();	  Iterator    <    Option>    iterator    =    options.getOptionList().iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  optionsList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  optionsList.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  optionsList.keySet().iterator();	  Iterator    <    Option>    iterator    =    optionList.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  optionList.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  optionList.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  optionList.iterator();	  Iterator    <    Option>    iterator    =    optionList.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  Option  iterator  =  options.getOptions().iterator(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptions().iterator(t,  stopAtNonOption);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptions().iterator(t,  stopAtNonOption);	  Option    iterator    =    options.getOptions().iterator(t);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
21	[BUG]  [BUGGY]  Option  iterator  =  options.getOptions().iterator(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptions().iterator(t,  eatTheRest);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptions().iterator(t,  eatTheRest);	  Option    iterator    =    options.getOptions().iterator(t);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
22	[BUG]  [BUGGY]  Option  iterator  =  options.getOptions().iterator(t)&&!stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptions().iterator(t)&&!stopAtNonOption;  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptions().iterator(t)&&!stopAtNonOption;	  Option    iterator    =    options.getOptions().iterator(t);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
23	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  opts.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
24	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  arguments.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  arguments.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  arguments.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
25	[BUG]  [BUGGY]  parse(t,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator,  arguments);	  parse(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  parse(t,  iterator,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator,  eatTheRest);	  parse(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  parse(t,  str,  iterator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  str,  iterator);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  str,  iterator);	  parse(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  Iterator  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  this.opts.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  this.opts.iterator();	  Iterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  Iterator  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  properties.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  properties.iterator();	  Iterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  parseOption(t,  iterator,  arguments,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  arguments,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  arguments,  requiredOptions);	  parseOption(t,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
31	[BUG]  [BUGGY]  parseOption(t,  str,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  str,  iterator,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  str,  iterator,  requiredOptions);	  parseOption(t,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
32	[BUG]  [BUGGY]  parse(t,  iterator,  arguments,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator,  arguments,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator,  arguments,  requiredOptions);	  parseOption(t,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
33	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  options.getOptions().keySet().iterator();	  Iterator    <    Option>    iterator    =    options.getOptions().values().iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
34	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().entrySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().entrySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  options.getOptions().entrySet().iterator();	  Iterator    <    Option>    iterator    =    options.getOptions().values().iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
35	[BUG]  [BUGGY]  processOption(t,  iterator,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  arguments,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  arguments,  stopAtNonOption);	  processOption(t,    iterator,    requiredOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
36	[BUG]  [BUGGY]  processOption(t,  iterator,  str,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  str,  requiredOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  str,  requiredOptions,  stopAtNonOption);	  processOption(t,    iterator,    requiredOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
37	[BUG]  [BUGGY]  processOption(t,  iterator,  options,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  options,  requiredOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  options,  requiredOptions,  stopAtNonOption);	  processOption(t,    iterator,    requiredOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
38	[BUG]  [BUGGY]  processOption(t,  iterator,  eatTheRest,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  eatTheRest,  requiredOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  eatTheRest,  requiredOptions,  stopAtNonOption);	  processOption(t,    iterator,    requiredOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
39	[BUG]  [BUGGY]  eatTheRest  =  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  true;  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  true;	  eatTheRest    =    false;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
40	[BUG]  [BUGGY]  eatTheRest  =  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  null;  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  null;	  eatTheRest    =    false;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
41	[BUG]  [BUGGY]  eattheRest  =  true;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eattheRest  =  true;  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eattheRest  =  true;	  eatTheRest    =    false;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
42	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  arguments.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  arguments.iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
43	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  neededOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  neededOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  neededOptions,  stopAtNonOption);	  eatTheRest    =    processOption(t,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  requiredOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  requiredOptions,  stopAtNonOption);	  eatTheRest    =    processOption(t,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  needsOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  needsOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  needsOptions,  stopAtNonOption);	  eatTheRest    =    processOption(t,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  neededOptions,  iterator);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  neededOptions,  iterator);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  neededOptions,  iterator);	  eatTheRest    =    processOption(t,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
47	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  opts.values().iterator();	  Iterator    <    String>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
48	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  arguments,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  arguments,  stopAtNonOption);	  eatTheRest    =    processOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  str,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  str,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  str,  arguments);	  eatTheRest    =    processOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  arguments.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  arguments.iterator();	  Iterator    <    String>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
51	[BUG]  [BUGGY]  Option  iterator  =  opts.getOption(t);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  opts.getOption(t);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  opts.getOption(t);	  Option    iterator    =    opts.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  parse(t,  iterator,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator,  arguments,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator,  arguments,  stopAtNonOption);	  parse(t,    iterator,    str);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
53	[BUG]  [BUGGY]  parse(t,  iterator,  arguments,  str);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator,  arguments,  str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator,  arguments,  str);	  parse(t,    iterator,    str);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
54	[BUG]  [BUGGY]  t  =  iterator.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.clone();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.clone();	  t    =    iterator.remove();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
55	[BUG]  [BUGGY]  Option  iterator  =  options.getOptionIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptionIterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptionIterator();	  Option    iterator    =    options.getOptionIterator().iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
56	[BUG]  [BUGGY]  Option  iterator  =  options.getOptionIterator(t).iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptionIterator(t).iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptionIterator(t).iterator();	  Option    iterator    =    options.getOptionIterator().iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
57	[BUG]  [BUGGY]  Option  iterator  =  options.getIterator().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getIterator().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getIterator().iterator();	  Option    iterator    =    options.getOptionIterator().iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
58	[BUG]  [BUGGY]  t  =  iterator.nextToken().trim();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.nextToken().trim();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.nextToken().trim();	  t    =    iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  t  =  iterator.nextToken().toLowerCase();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.nextToken().toLowerCase();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.nextToken().toLowerCase();	  t    =    iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  parseOption(t,  iterator,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  arguments,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  arguments,  stopAtNonOption);	  parseOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
61	[BUG]  [BUGGY]  parseOption(t,  str,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  str,  iterator,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  str,  iterator,  arguments);	  parseOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
62	[BUG]  [BUGGY]  parseOption(t,  iterator,  str,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  str,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  str,  arguments);	  parseOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
63	[BUG]  [BUGGY]  processOption(t,  iterator,  argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  argument,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  argument,  stopAtNonOption);	  processOption(t,    iterator,    argument);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
64	[BUG]  [BUGGY]  processOption(t,  iterator,  argument,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  argument,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  argument,  eatTheRest);	  processOption(t,    iterator,    argument);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
65	[BUG]  [BUGGY]  parseOption(t,  iterator,  argument);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  argument);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  argument);	  processOption(t,    iterator,    argument);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
66	[BUG]  [BUGGY]  processOption(t,  str,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  str,  iterator);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  str,  iterator);	  processOption(t,    iterator,    str);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
67	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  opts.values().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  opts.values().iterator();	  Iterator    <    Option>    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
68	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  properties.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  properties.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  properties.keySet().iterator();	  Iterator    <    Option>    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(options,  stopAtNonOption);	  Option    iterator    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
70	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(t,  arguments);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(t,  arguments);	  Option    iterator    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
71	[BUG]  [BUGGY]  parseOption(t,  str,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  str,  iterator);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  str,  iterator);	  parseOption(t,    iterator,    str);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
72	[BUG]  [BUGGY]  processOption(t,  iterator,  needsOptions,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  needsOptions,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  needsOptions,  eatTheRest);	  processOption(t,    iterator,    needsOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
73	[BUG]  [BUGGY]  processOption(t,  iterator,  needsOptions,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  needsOptions,  str,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  needsOptions,  str,  stopAtNonOption);	  processOption(t,    iterator,    needsOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
74	[BUG]  [BUGGY]  processOption(t,  iterator,  needsOptions,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  needsOptions,  stopAtNonOption,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  needsOptions,  stopAtNonOption,  arguments);	  processOption(t,    iterator,    needsOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
75	[BUG]  [BUGGY]  Iterator  iterator  =  properties.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  properties.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  properties.keySet().iterator();	  Iterator    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
76	[BUG]  [BUGGY]  processOption(t,  iterator,  arguments,  requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  arguments,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  arguments,  requiredOptions);	  processOption(t,    iterator,    str,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  processOption(t,  iterator,  str,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  str,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  str,  arguments);	  processOption(t,    iterator,    str,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
78	[BUG]  [BUGGY]  processOption(t,  iterator,  arguments,  str,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  arguments,  str,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  arguments,  str,  requiredOptions);	  processOption(t,    iterator,    str,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
79	[BUG]  [BUGGY]  processOption(t,  iterator,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  str,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  str,  stopAtNonOption);	  processOption(t,    iterator,    str,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
80	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  argumentList);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  argumentList);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  argumentList);	  eatTheRest    =    processOption(t,    iterator,    iterator);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
81	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(t,  eatTheRest);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(t,  eatTheRest);	  Option    iterator    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
82	[BUG]  [BUGGY]  processOption(t,  iterator,  neededOptions,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  neededOptions,  stopAtNonOption,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  neededOptions,  stopAtNonOption,  arguments);	  processOption(t,    iterator,    neededOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
83	[BUG]  [BUGGY]  processOption(t,  iterator,  arguments,  neededOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  arguments,  neededOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  arguments,  neededOptions,  stopAtNonOption);	  processOption(t,    iterator,    neededOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
84	[BUG]  [BUGGY]  processOption(t,  iterator,  requiredOptions,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  requiredOptions,  stopAtNonOption,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  requiredOptions,  stopAtNonOption,  arguments);	  processOption(t,    iterator,    neededOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
85	[BUG]  [BUGGY]  cmd.addArg(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  cmd.addArg(t,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	cmd.addArg(t,  stopAtNonOption);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
86	[BUG]  [BUGGY]  cmd.addArg(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  cmd.addArg(t,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	cmd.addArg(t,  eatTheRest);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
87	[BUG]  [BUGGY]  cmd.addArg(t,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  cmd.addArg(t,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	cmd.addArg(t,  arguments);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
88	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseAndIgnoreWhitespace(t,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseAndIgnoreWhitespace(t,  arguments);	  parseAndIgnoreWhitespace(t,    str);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
89	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  iterator,  str);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseAndIgnoreWhitespace(t,  iterator,  str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseAndIgnoreWhitespace(t,  iterator,  str);	  parseAndIgnoreWhitespace(t,    str);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
90	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseAndIgnoreWhitespace(t,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseAndIgnoreWhitespace(t,  eatTheRest);	  parseAndIgnoreWhitespace(t,    str);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
91	[BUG]  [BUGGY]  options.addArg(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  options.addArg(t,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	options.addArg(t,  stopAtNonOption);	  options.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  options.addArg(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  options.addArg(t,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	options.addArg(t,  eatTheRest);	  options.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.options.values().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.options.values().iterator();	  Iterator    iterator    =    options.options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
94	[BUG]  [BUGGY]  Iterator  iterator  =  options.opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.opts.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.opts.keySet().iterator();	  Iterator    iterator    =    options.options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
95	[BUG]  [BUGGY]  processOption(t,  iterator,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  options,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  options,  stopAtNonOption);	  processOption(t,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
96	[BUG]  [BUGGY]  processOption(t,  iterator,  options,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  options,  str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  options,  str);	  processOption(t,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
97	[BUG]  [BUGGY]  t  =  iterator.getIterator(str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.getIterator(str);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.getIterator(str);	  t    =    iterator.getIterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
98	[BUG]  [BUGGY]  Option  iterator  =  options.getOptions().iterator(2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptions().iterator(2);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptions().iterator(2);	  Option    iterator    =    options.getOptions().iterator(0);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
99	[BUG]  [BUGGY]  Option  iterator  =  options.getOptions().iterator(1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptions().iterator(1);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptions().iterator(1);	  Option    iterator    =    options.getOptions().iterator(0);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
100	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  arguments.values().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  arguments.values().iterator();	  Iterator    iterator    =    arguments.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
101	[BUG]  [BUGGY]  Iterator  iterator  =  parameters.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  parameters.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  parameters.keySet().iterator();	  Iterator    iterator    =    arguments.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
102	[BUG]  [BUGGY]  Iterator  iterator  =  options.getOptionIterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.getOptionIterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.getOptionIterator();	  Iterator    iterator    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
103	[BUG]  [BUGGY]  processOption(t,  iterator,  arguments,  neededOptions,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  arguments,  neededOptions,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  arguments,  neededOptions,  eatTheRest);	  processOption(t,    iterator,    neededOptions,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
104	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  str,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  str,  iterator);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  str,  iterator);	  eatTheRest    =    processOption(t,    iterator,    str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
105	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  str,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  str,  stopAtNonOption);	  eatTheRest    =    processOption(t,    iterator,    str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
106	[BUG]  [BUGGY]  parseOption(t,  str,  iterator,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  str,  iterator,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  str,  iterator,  eatTheRest);	  parseOption(t,    iterator,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
107	[BUG]  [BUGGY]  Option  iterator  =  opt.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  opt.getOptions().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  opt.getOptions().iterator();	  Option    iterator    =    option.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
108	[BUG]  [BUGGY]  Option  iterator  =  option.getOptions().iterator(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  option.getOptions().iterator(t);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  option.getOptions().iterator(t);	  Option    iterator    =    option.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
109	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  options,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  options,  stopAtNonOption);	  eatTheRest    =    processOption(t,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
110	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  options,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  options,  iterator);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  options,  iterator);	  eatTheRest    =    processOption(t,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
111	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  options,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  options,  str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  options,  str);	  eatTheRest    =    processOption(t,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
112	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  str,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  str,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  str,  requiredOptions);	  eatTheRest    =    processOption(t,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
113	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  arguments,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  arguments,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  arguments,  requiredOptions);	  eatTheRest    =    processOption(t,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
114	[BUG]  [BUGGY]  parse(t,  iterator.next(),  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator.next(),  str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator.next(),  str);	  parse(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
115	[BUG]  [BUGGY]  parse(t,  iterator.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator.next(),  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator.next(),  stopAtNonOption);	  parse(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
116	[BUG]  [BUGGY]  parse(t,  iterator.next(),  arguments);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator.next(),  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator.next(),  arguments);	  parse(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
117	[BUG]  [BUGGY]  processOption(t,  iterator,  arguments,  eatTheRest);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  arguments,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  arguments,  eatTheRest);	  processOption(t,    iterator,    requiredOptions,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
118	[BUG]  [BUGGY]  processOption(t,  iterator,  str,  requiredOptions,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  str,  requiredOptions,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  str,  requiredOptions,  eatTheRest);	  processOption(t,    iterator,    requiredOptions,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
119	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseAndIgnoreWhitespace(t,  iterator,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseAndIgnoreWhitespace(t,  iterator,  arguments);	  parseAndIgnoreWhitespace(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
120	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  iterator,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseAndIgnoreWhitespace(t,  iterator,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseAndIgnoreWhitespace(t,  iterator,  eatTheRest);	  parseAndIgnoreWhitespace(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
121	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  str,  iterator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseAndIgnoreWhitespace(t,  str,  iterator);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseAndIgnoreWhitespace(t,  str,  iterator);	  parseAndIgnoreWhitespace(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
122	[BUG]  [BUGGY]  processOption(t,  iterator,  neededOptions,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  neededOptions,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  neededOptions,  arguments);	  processOption(t,    iterator,    neededOptions,    str);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
123	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  properties.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  properties.iterator();	  Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
124	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  this.opts.iterator();	  Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
125	[BUG]  [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  opts.values().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
126	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  properties.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  properties.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
127	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  this.opts.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
128	[BUG]  [BUGGY]  eatTheRest  =  processOption(t,  iterator,  getArguments());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  eatTheRest  =  processOption(t,  iterator,  getArguments());  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	eatTheRest  =  processOption(t,  iterator,  getArguments());	  eatTheRest    =    processOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
129	[BUG]  [BUGGY]  Option  iterator  =  options.getOptionsIterator().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptionsIterator().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptionsIterator().iterator();	  Option    iterator    =    options.getOptionIterator().iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
130	[BUG]  [BUGGY]  options.addOption(t);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  options.addOption(t);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	options.addOption(t);	  options.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
131	[BUG]  [BUGGY]  options.addArg(str);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  options.addArg(str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	options.addArg(str);	  options.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
132	[BUG]  [BUGGY]  processOption(t,  iterator,  str,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  str,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  str,  eatTheRest);	  processOption(t,    iterator,    str,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
133	[BUG]  [BUGGY]  cmd.addArg(t,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  cmd.addArg(t,  str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	cmd.addArg(t,  str);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
134	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(str,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(str,  eatTheRest);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(str,  eatTheRest);	  Option    iterator    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
135	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(str,  stopAtNonOption,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(str,  stopAtNonOption,  eatTheRest);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(str,  stopAtNonOption,  eatTheRest);	  Option    iterator    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
136	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  processOption(t,  iterator,  options);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  processOption(t,  iterator,  options);  }  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	if(stopAtNonOption)  {  eatTheRest  =  processOption(t,  iterator,  options);  }	  eatTheRest    =    processOption(t,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
137	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  this.requiredOptions.values().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  this.requiredOptions.values().iterator();	  Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
138	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  processOption(t,  iterator,  arguments);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  processOption(t,  iterator,  arguments);  }  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	if(stopAtNonOption)  {  eatTheRest  =  processOption(t,  iterator,  arguments);  }	  eatTheRest    =    processOption(t,    iterator,    iterator);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
139	[BUG]  [BUGGY]  parseOption(t,  str,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  str,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  str,  requiredOptions);	  parseOption(t,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
140	[BUG]  [BUGGY]  processOption(t,  iterator,  needsOptions,  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  needsOptions,  str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  needsOptions,  str);	  processOption(t,    iterator,    needsOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
141	[BUG]  [BUGGY]  Iterator  iterator  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.options().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.options().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
142	[BUG]  [BUGGY]  Iterator  iterator  =  options.opts.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.opts.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.opts.iterator();	  Iterator    iterator    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
143	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseAndIgnoreWhitespace(t,  options);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseAndIgnoreWhitespace(t,  options);	  parseAndIgnoreWhitespace(t,    str);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
144	[BUG]  [BUGGY]  Iterator  iterator  =  options.getOptionList().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.getOptionList().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.getOptionList().iterator();	  Iterator    iterator    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
145	[BUG]  [BUGGY]  Iterator  iterator  =  options.getOptions().values().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.getOptions().values().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.getOptions().values().iterator();	  Iterator    iterator    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
146	[BUG]  [BUGGY]  Iterator  iterator  =  options.getOptions().iterator(0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.getOptions().iterator(0);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.getOptions().iterator(0);	  Iterator    iterator    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
147	[BUG]  [BUGGY]  processOption(t,  iterator,  options,  neededOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  options,  neededOptions,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  options,  neededOptions,  stopAtNonOption);	  processOption(t,    iterator,    neededOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
148	[BUG]  [BUGGY]  Iterator  iterator  =  requiredOptions.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  requiredOptions.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  requiredOptions.keySet().iterator();	  Iterator    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
149	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(options,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(options,  str);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(options,  str);	  Option    iterator    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
150	[BUG]  [BUGGY]  parse(t,  iterator.getKey());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parse(t,  iterator.getKey());  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parse(t,  iterator.getKey());	  parse(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
151	[BUG]  [BUGGY]  t  =  iterator.nextToken()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.nextToken()  +  1;  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.nextToken()  +  1;	  t    =    iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
152	[BUG]  [BUGGY]  t  =  iterator.getToken();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.getToken();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.getToken();	  t    =    iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
153	[BUG]  [BUGGY]  parseOption(t,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  stopAtNonOption);	  processOption(t,    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
154	[BUG]  [BUGGY]  Iterator  iterator  =  optionOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  optionOptions.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  optionOptions.iterator();	  Iterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
155	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  requiredOptions.iterator();	  Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
156	[BUG]  [BUGGY]  t  =  iterator.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.getOptions();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.getOptions();	  t    =    iterator.getIterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
157	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  options.options().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  options.options().iterator();	  Iterator    <    Option>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
158	[BUG]  [BUGGY]  processOption(t,  iterator,  arguments,  neededOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  arguments,  neededOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  arguments,  neededOptions);	  processOption(t,    iterator,    neededOptions,    str);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
159	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opt.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  opt.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  opt.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
160	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  opt.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  opt.iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
161	[BUG]  [BUGGY]  parseOption(t,  str,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  str,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  str,  arguments);	  parseOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
162	[BUG]  [BUGGY]  parseArguments(t,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseArguments(t,  iterator,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseArguments(t,  iterator,  arguments);	  parseOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
163	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().valueList().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  options.getOptions().valueList().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  options.getOptions().valueList().iterator();	  Iterator    <    Option>    iterator    =    options.getOptions().values().iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
164	[BUG]  [BUGGY]  Option  iterator  =  options.getOptions().iteratorIfNull(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptions().iteratorIfNull(t);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptions().iteratorIfNull(t);	  Option    iterator    =    options.getOptions().iterator(t);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
165	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  requiredOptions.keySet().iterator();	  Iterator    <    Option>    iterator    =    opt.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
166	[BUG]  [BUGGY]  Iterator  iterator  =  options.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.arguments.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.arguments.iterator();	  Iterator    iterator    =    this.arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
167	[BUG]  [BUGGY]  Option  iterator  =  options.getOptionlist().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptionlist().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptionlist().iterator();	  Option    iterator    =    options.getOptionList().iterator();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
168	[BUG]  [BUGGY]  Iterator  iterator  =  opt.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  opt.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  opt.keySet().iterator();	  Iterator    iterator    =    arguments.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
169	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  requiredOptions.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
170	[BUG]  [BUGGY]  processOption(t,  iterator,  options,  eatTheRest);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  options,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  options,  eatTheRest);	  processOption(t,    iterator,    requiredOptions,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
171	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.keyList().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.options.keyList().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.options.keyList().iterator();	  Iterator    iterator    =    options.options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
172	[BUG]  [BUGGY]  processOption(t,  options,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  options,  iterator);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  options,  iterator);	  processOption(t,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
173	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  iterator.next());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseAndIgnoreWhitespace(t,  iterator.next());  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseAndIgnoreWhitespace(t,  iterator.next());	  parse(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
174	[BUG]  [BUGGY]  t  =  iterator.firstToken();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.firstToken();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.firstToken();	  t    =    iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
175	[BUG]  [BUGGY]  t  =  iterator.nextToken(str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.nextToken(str);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.nextToken(str);	  t    =    iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
176	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  t.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  t.getOptions().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  t.getOptions().iterator();	  Iterator    <    Option>    iterator    =    opt.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
177	[BUG]  [BUGGY]  Iterator  iterator  =  this.arguments.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  this.arguments.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  this.arguments.keySet().iterator();	  Iterator    iterator    =    arguments.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
178	[BUG]  [BUGGY]  ProcessOption(t,  iterator,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  ProcessOption(t,  iterator,  arguments,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	ProcessOption(t,  iterator,  arguments,  stopAtNonOption);	  processOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
179	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  options.getOptions().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  options.getOptions().iterator();	  Iterator    <    String>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
180	[BUG]  [BUGGY]  t  =  iterator.requires();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.requires();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.requires();	  t    =    iterator.getIterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
181	[BUG]  [BUGGY]  Iterator  iterator  =  this.opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  this.opts.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  this.opts.keySet().iterator();	  Iterator    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
182	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  String>  iterator  =  neededOptions.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  String>  iterator  =  neededOptions.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
183	[BUG]  [BUGGY]  Option  iterator  =  options.getOptionIterator(t.iterator());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOptionIterator(t.iterator());  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOptionIterator(t.iterator());	  Option    iterator    =    options.getOptionIterator().iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
184	[BUG]  [BUGGY]  Iterator  iterator  =  options.allOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  iterator  =  options.allOptions.iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  iterator  =  options.allOptions.iterator();	  Iterator    iterator    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
185	[BUG]  [BUGGY]  Option  iterator  =  t.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  t.getOptions().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  t.getOptions().iterator();	  Option    iterator    =    option.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
186	[BUG]  [BUGGY]  ProcessOption(t,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  ProcessOption(t,  iterator,  arguments);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	ProcessOption(t,  iterator,  arguments);	  processOption(t,    iterator,    argument);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
187	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	if(!stopAtNonOption)  {  cmd.addArg(t);  }	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
188	[BUG]  [BUGGY]  if(!eatTheRest)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  if(!eatTheRest)  {  cmd.addArg(t);  }  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	if(!eatTheRest)  {  cmd.addArg(t);  }	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
189	[BUG]  [BUGGY]  cmd.addArg(str);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  cmd.addArg(str);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	cmd.addArg(str);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
190	[BUG]  [BUGGY]  parseOption(t,  iterator,  arguments,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  arguments,  eatTheRest);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  arguments,  eatTheRest);	  parseOption(t,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
191	[BUG]  [BUGGY]  processOption(t,  iterator,  arguments,  stoppedAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  arguments,  stoppedAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  arguments,  stoppedAtNonOption);	  processOption(t,    iterator,    neededOptions,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
192	[BUG]  [BUGGY]  parseOption(t,  iterator,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  options);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  options);	  processOption(t,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
193	[BUG]  [BUGGY]  parseOption(t,  iterator,  str,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  parseOption(t,  iterator,  str,  requiredOptions);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	parseOption(t,  iterator,  str,  requiredOptions);	  parseOption(t,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
194	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.keySet().iterator();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Iterator  <  Option>  iterator  =  this.opts.keySet().iterator();	  Iterator    <    Option>    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
195	[BUG]  [BUGGY]  t  =  iterator.peek();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  t  =  iterator.peek();  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	t  =  iterator.peek();	  t    =    iterator.remove();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
196	[BUG]  [BUGGY]  processOption(t,  iterator,  neededOptions,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  processOption(t,  iterator,  neededOptions,  str,  stopAtNonOption);  [BUGGY]      }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	processOption(t,  iterator,  neededOptions,  str,  stopAtNonOption);	  processOption(t,    iterator,    neededOptions,    str);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
197	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(t,  str,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (t.startsWith(     "-     "))  {  if  (stopAtNonOption  &&  !getOptions().hasOption(t))  {  eatTheRest  =  true;  cmd.addArg(t);  }  else  {      [BUGGY]  Option  iterator  =  options.getOption(t,  str,  eatTheRest);  [BUGGY]      processOption(t,  iterator);  }  }  else  {  cmd.addArg(t);  if  (stopAtNonOption)  {  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	Option  iterator  =  options.getOption(t,  str,  eatTheRest);	  Option    iterator    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
