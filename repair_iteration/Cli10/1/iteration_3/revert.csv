projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.iterator();while(iterator.hasNext()){cmd.addArg(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.iterator();while(iterator.hasNext()){cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.iterator();while(iterator.hasNext()){cmd.addArg(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.iterator();while(iterator.hasNext()){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.options.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(tr);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();iterator.remove();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();Iteratoriterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();Iteratoriterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();Iteratoriterator=options.getOptions().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();Iteratoriterator=opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.cmd.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.next();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(test);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=this.options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=arguments.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=opts.iterator();while(iterator.hasNext()){cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnnull;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options!=null)?null:options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(tr);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(tr);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Stringstr=cmd.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString(),str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString()+":"+arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(args);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t);if(option.hasArg()){requiredOptions.add(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240parseOption(t,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(str);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(tr);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(str);if(option==null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnstr.trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.cmd.trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.getArgumentList();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();Iteratoriterator=options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.clear();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.t;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Ileratoriterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[t]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[0]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString()+arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.keySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.keySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.equals("")){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){CommandLinecmd=(ArgumentLine)iterator.next();if(!stopAtNonOption){requiredOptions.add(cmd);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.getArguments();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();Iteratoriterator=options.getIterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(test);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[t]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[0]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.getOptions().toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.setAtNonOption(stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith("-")){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.equals("")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith("-")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith("-")){returnstr;}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=this.options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(stopAtNonOption){iterator.remove();Iteratoriterator=opts.iterator();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options,t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=opts.iterator();while(iterator.hasNext()){cmd.addArg(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith("-")){returnstr;}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".")){returnstr;}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()!=0){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.entrySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.getOptions().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(stopAtNonOption){iterator.remove();Iteratoriterator=options.getOptions().iterator();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(options.getOptions()!=null){iterator.remove();Iteratoriterator=options.getOptions().iterator();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnarguments.trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.setOption(stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Stringstr=options.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Stringstr=t.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Stringstr=option.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.cmd,cmd.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.cmd,options.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();iterator.remove();iterator.remove();iterator.remove();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();iterator.remove();Iteratoriterator.remove();iterator.remove();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();iterator.remove();Iteratoriterator=options.iterator();iterator.remove();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();iterator.remove();Iteratoriterator=options.keySet().iterator();iterator.remove();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.keySet();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.clone();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=opts.iterator();while(iterator.hasNext()){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.toString()+arguments.length;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[t],str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[t].trim());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t);if(option==null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t);if(option!=null){cmd.addArg(opt);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.getOption(t);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.t&&arguments.length>0;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.t,arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.t&&options.size()>0;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.clear();Iteratoriterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Stringstr=options.getOptions().toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.getOptions().trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[t],str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[t].toLowerCase());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnarguments.toString()+":"+cmd;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString()+":"+str;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString()+":"+arguments,stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=properties.iterator();while(iterator.hasNext()){cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.cmd.substring(0,this.cmd.length()-1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.cmd.substring(0,this.cmd.length()-2);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(t,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(options,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(str,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Stringstr=this.options.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.options.getOptions().toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(options,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(options,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(opts);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=properties.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=this.opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=properties.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(options!=null){iterator.remove();Iteratoriterator=options.iterator();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.clear();Iteratoriterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.clone();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:option.getArgumentList();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.toArray(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){CommandLinecmd=(ArgumentLine)iterator.next();if(!stopAtNonOption){neededOptions.add(cmd);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){CommandLinecmd=(ArgumentLine)iterator.next();if(!stopAtNonOption){requiredOptions.add
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){CommandLinecmd=(ArgumentLine)iterator.next();if(!stopAtNonOption){requiredOptions.remove(cmd);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.options();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options=options.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(str,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(options!=null){returncmd.options;}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.options();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.options.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.getValue(),arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.getValue()+1;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(options,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(options,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(str,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(properties);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.addArg(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240ListIteratoriterator=options.keySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.equals("")){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options!=null)?null:options.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:option.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Return(options==null)?null:options.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=opts.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.trim(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.trim():null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.trim(),str;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(test,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator!=null?null:iterator.null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator==null?null:iterator.null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.null&&arguments.length>0;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[0],str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[1]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString(),arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnstr.toString(),cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString(),argument);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString(),null);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240ListIteratoriterator=options.keySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.values().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.keySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()!=0){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.getIterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.clear();Iteratoriterator=options.getIterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Ileratoriterator=options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Ileratoriterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t,cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(str,cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(cmd,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options||options.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options&&options.size()>0;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith("-")){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".")){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.options.getOptions(),options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.equals("")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.equals("")){thrownewIllegalArgumentException("
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=this.arguments.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(tr);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.getKey();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[0],str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[1]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.next(),options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.next(),arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.getIterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(str);if(option.hasArg()){requiredOptions.add(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(str);if(option.hasArgument()){requiredOptions.add(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options);if(option.hasArg()){requiredOptions.add(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Stringstr=iterator.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.toString()+arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.toString(),arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(options,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240parseOption(opt,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240parseOption(iterator,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240parseOption(options,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240parseOption(output,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:option.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.opts;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.getOptionList();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:opts.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString()+str;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString(),arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString()/arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options!=null)?null:options.getArguments();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t);if(option==null){cmd.addArg(opt);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.getOption(t);if(option==null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.toArray(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t,arguments);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options,str);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=this.options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(options,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(options,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.trim(),stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.trim(),stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.trim():null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith("-")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.getOptions().toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(test);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnopts.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnopt.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoption.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.toString()+":"+arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(opt,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.toString()+arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240ListIteratoriterator=opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.cmd.toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.values();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(options,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.options.trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".-")){returnstr;}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.requiredOptions.getArgumentList();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:opt.getArgumentList();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=optionOptions.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(opt,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(opt,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.options();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:opt.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240ListIteratoriterator=options.keySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.equals("")){cmd.addArg(s
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(t,options);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240parseOption(emptyAtNonOption,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Return(options==null)?null:options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:opt.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Ileratoriterator=options.iterator();while(iterator.hasNext()){cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:opt.getArguments();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.t+arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString(),options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString(),iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.equals(".")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(opt,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(options,block);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options&&options.stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options||options.stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options&&opt.stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240ListIteratoriterator=opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(option==null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options);if(option==null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".-")){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(arguments);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.setIterator(options.getIterator());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(options!=null){iterator.remove();Iteratoriterator=options.getOptions().iterator();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(options!=null){iterator.remove();Iteratoriterator=options.getOptions().iterator();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.trim(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.trim(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[0],stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=arguments.findOption(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[t],stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[t].toLowerCase());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[t].toString());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(options!=null){iterator.remove();iterator.remove();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.getOptions().substring(0,str.length()-1);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.options&&options.stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.options||options.stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[0],stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(options,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(options,t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.toString(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.keySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240ListIteratoriterator=options.keySet().iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg(s
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.entrySet().iterator();iterator.hasNext();){CommandLinecmd=(ArgumentLine)iterator.next();if(!stopAtNonOption){requiredOptions.add(cmd);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.str.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.parse(str,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(this.cmd!=null)?null:this.cmd.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(this.cmd!=null?null:this.cmd.getValue());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[t],stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.addArg(arguments[t],t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.clear();Iteratoriterator=options.getOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(option.hasArg()){requiredOptions.add(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(opt,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(opt);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.trim(arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.trim(arguments[0].trim());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.next()+arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();iterator.remove();Iteratoriterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();iterator.remove();Iteratoriterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.remove();iterator.remove();Iteratoriterator=options.getOptions().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(opt,cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=options.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator!=null&&iterator.null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.toArray(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=options.options().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240if(opts!=null){iterator.remove();Iteratoriterator=opts.iterator();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Ileratoriterator=options.options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(test,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(test);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(arguments[0]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options!=null)?null:options.getOptionList();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240iterator.clear();Iteratoriterator=options.getOptions().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Stringstr=options.getString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.requiredOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.getMessage();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(options,block);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iterator<String>iterator=arguments.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".")){returnstr;}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".*")){returnstr;}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(options,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.test(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240return(options==null)?null:options.optionList;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=opt.getOption(str);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=opts.getOption(str);if(option!=null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator!=null?iterator.null:arguments[0];
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(options,block);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[0].trim());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[0],arguments[1]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=requiredOptions.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.findOption(options,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returncmd.toString(),block);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options||eatTheRest;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.options||options.requiredOptions;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iterator<String>iterator=options.iterator();while(iterator.hasNext()){cmd.addArg(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=opt.getOption(str);if(option==null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=opts.getOption(str);if(option==null){cmd.addArg(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.getOptions().substring(0,str.length()-2);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions!=null?options.options:arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions!=null?options.options:defaultOptions;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions==null?options.options:arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Iteratoriterator=this.opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnoptions.toArray(arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240options.addArg(arguments[t].substring(1));
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".js")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.endsWith(".*")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.cmd,options.trim();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.toString(),str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240parseOption(iterator,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(arguments,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240for(Iteratoriterator=arguments.iterator();iterator.hasNext();){Stringstr=(String)iterator.next();if(str.equals("-")){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.hasValue()?iterator.getValue():null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.requiredOptions.getValue();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.hasValue()?iterator.getValue():(String[])iterator.next();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(tr);if(option.hasArg()){requiredOptions.add(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(arguments);if(option.hasArg()){requiredOptions.add(option);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOptions(properties);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.next().toString();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returniterator.next(),options.getOptions());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240returnthis.options.getOptions(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(cmd,str);
