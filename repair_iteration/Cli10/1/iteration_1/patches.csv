bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(str);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(str);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(str);	      Iterator    iterator    =    options.iterator();    while(iterator.hasNext())    {    cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(str);  }  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(str);  }  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(str);  }	      Iterator    iterator    =    options.iterator();    while(iterator.hasNext())    {    cmd.addArg(t);    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	20	None	replace
3	[BUG]  [BUGGY]  options.addArg(str);  [CE]  cannot  find  symbol  str  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  options.addArg(str);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	options.addArg(str);	      options.addArg(t);    	non-compiled	[CE]  cannot  find  symbol  str	10	None	replace
4	[BUG]  [BUGGY]  options.addArg(arguments);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  options.addArg(arguments);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	options.addArg(arguments);	      options.addArg(t);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
5	[BUG]  [BUGGY]  options.addArg(options);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  options.addArg(options);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	options.addArg(options);	      options.addArg(t);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
6	[BUG]  [BUGGY]  return  options;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  options;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  options;	  return    this.options;    	non-compiled	[CE]  incompatible  types	1	None	replace
7	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options;  [CE]  cannot  find  symbol  options  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return(options  ==  null)?  null  :  options.options;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return(options  ==  null)?  null  :  options.options;	  return    this.options;    	non-compiled	[CE]  cannot  find  symbol  options	1	None	replace
8	[BUG]  [BUGGY]  return  this.options.getOptions();  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  this.options.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  this.options.getOptions();	  return    this.options;    	non-compiled	[CE]  incompatible  types	1	None	replace
9	[BUG]  [BUGGY]  return  this.options.toString();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  this.options.toString();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  this.options.toString();	  return    this.options;    	non-compiled	[CE]  incompatible  types	1	None	replace
10	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.getOption(options);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.getOption(options);	      Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	12	None	replace
11	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(tr);  [CE]  cannot  find  symbol  tr  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.getOption(tr);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.getOption(tr);	      Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  tr	12	None	replace
12	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.getOption(arguments);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.getOption(arguments);	      Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	12	None	replace
13	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]      iterator.remove();  iterator.remove();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	add	        iterator.remove();    iterator.remove();	  	compilable	  [FE]  UnsupportedOperationException  	8	3	add
14	[BUG]  [BUGGY]      iterator.remove();  iterator.remove();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]      iterator.remove();  iterator.remove();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	        iterator.remove();    iterator.remove();	  	compilable	  [FE]  UnsupportedOperationException  	8	3	add
15	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator  =  options.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]      UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]      iterator.remove();  Iterator  iterator  =  options.iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	        iterator.remove();    Iterator  iterator  =  options.iterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	8	None	add
16	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator  =  options.keySet().iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]      iterator.remove();  Iterator  iterator  =  options.keySet().iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	        iterator.remove();    Iterator  iterator  =  options.keySet().iterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	8	None	add
17	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator  =  options.getOptions().iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]      iterator.remove();  Iterator  iterator  =  options.getOptions().iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	        iterator.remove();    Iterator  iterator  =  options.getOptions().iterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	8	None	add
18	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator  =  opts.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]      iterator.remove();  Iterator  iterator  =  opts.iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	        iterator.remove();    Iterator  iterator  =  opts.iterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	8	None	add
19	[BUG]  [BUGGY]  Iterator  iterator  =  options.values().iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  options.values().iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  options.values().iterator();	      iterator.remove();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	9	None	replace
20	[BUG]  [BUGGY]  return  this.cmd.getValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  this.cmd.getValue();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  this.cmd.getValue();	  return    cmd.getValue();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
21	[BUG]  [BUGGY]  return  options.getValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  options.getValue();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  options.getValue();	  return    cmd.getValue();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
22	[BUG]  [BUGGY]  return  iterator.getValue();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.getValue();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.getValue();	  return    cmd.getValue();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
23	[BUG]  [BUGGY]  return  iterator.iterator();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.iterator();	  return    iterator;    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
24	[BUG]  [BUGGY]  return  iterator.options;  [CE]  cannot  find  symbol  options  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.options;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.options;	  return    iterator;    	non-compiled	[CE]  cannot  find  symbol  options	17	None	replace
25	[BUG]  [BUGGY]  return  iterator.toString();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.toString();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.toString();	  return    iterator;    	non-compiled	[CE]  incompatible  types	17	None	replace
26	[BUG]  [BUGGY]  return  iterator.next();  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.next();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.next();	  return    iterator;    	non-compiled	[CE]  incompatible  types	17	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	7	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.getOption(test);  [CE]  cannot  find  symbol  test  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(test);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(test);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  cannot  find  symbol  test	7	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(t);  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.getOptions(t);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.getOptions(t);	      Option    cmd    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol  t	15	None	replace
30	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  this.options.iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  this.options.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	18	None	replace
31	[BUG]  [BUGGY]  Iterator  iterator  =  opts.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  opts.iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  opts.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	18	None	replace
32	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  arguments.iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  arguments.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	18	None	replace
33	[BUG]  [BUGGY]  Iterator  iterator  =  opts.iterator();  while(iterator.hasNext())  {  cmd.addArg(t);  }  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  opts.iterator();  while(iterator.hasNext())  {  cmd.addArg(t);  }  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  opts.iterator();  while(iterator.hasNext())  {  cmd.addArg(t);  }	      Iterator    iterator    =    options.iterator();    while(iterator.hasNext())    {    cmd.addArg(t);    }    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	22	None	replace
34	[BUG]  [BUGGY]  return  null;  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  null;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  null;	  return    this;    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	16	None	replace
35	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.toString();  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return(options  ==  null)?  null  :  options.toString();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return(options  ==  null)?  null  :  options.toString();	  return    this;    	non-compiled	[CE]  incompatible  types	16	None	replace
36	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getOptions();  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return(options  ==  null)?  null  :  options.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return(options  ==  null)?  null  :  options.getOptions();	  return    this;    	non-compiled	[CE]  incompatible  types	16	None	replace
37	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.getOptions();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return(options!=  null)?  null  :  options.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return(options!=  null)?  null  :  options.getOptions();	  return    this;    	non-compiled	[CE]  incompatible  types	16	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(tr);  [CE]  cannot  find  symbol  tr  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(tr);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(tr);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  tr	6	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(cmd);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(cmd);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	6	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =  options.findOption(str);  [CE]  cannot  find  symbol  str  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.findOption(str);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.findOption(str);	      Option    cmd    =    options.findOption(t);    	non-compiled	[CE]  cannot  find  symbol  str	14	None	replace
41	[BUG]  [BUGGY]  Option  cmd  =  options.findOption(options);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.findOption(options);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.findOption(options);	      Option    cmd    =    options.findOption(t);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.findOption(arguments);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.findOption(arguments);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.findOption(arguments);	      Option    cmd    =    options.findOption(t);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  options.findOption(tr);  [CE]  cannot  find  symbol  tr  [FE]                  AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.findOption(tr);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.findOption(tr);	      Option    cmd    =    options.findOption(t);    	non-compiled	[CE]  cannot  find  symbol  tr	14	None	replace
44	[BUG]  [BUGGY]  String  str  =  cmd.toString();  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  String  str  =  cmd.toString();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	String  str  =  cmd.toString();	  return    cmd.toString();    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	2	None	replace
45	[BUG]  [BUGGY]  return  cmd.toString(),  str);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  cmd.toString(),  str);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  cmd.toString(),  str);	  return    cmd.toString();    	non-compiled	[CE]  ';'  expected	2	None	replace
46	[BUG]  [BUGGY]  return  cmd.toString()  + ": "  +  arguments;  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  cmd.toString()  + ": "  +  arguments;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  cmd.toString()  + ": "  +  arguments;	  return    cmd.toString();    	non-compiled	[CE]  incompatible  types	2	None	replace
47	[BUG]  [BUGGY]  iterator.addArg(t);  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  iterator.addArg(t);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	iterator.addArg(t);	      iterator.addArg(str);    	non-compiled	[CE]  cannot  find  symbol  t	11	None	replace
48	[BUG]  [BUGGY]  iterator.addArg(arguments);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  iterator.addArg(arguments);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	iterator.addArg(arguments);	      iterator.addArg(str);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
49	[BUG]  [BUGGY]  iterator.addArg(args);  [CE]  cannot  find  symbol  args  [FE]                    AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  iterator.addArg(args);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	iterator.addArg(args);	      iterator.addArg(str);    	non-compiled	[CE]  cannot  find  symbol  args	11	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  if(option.hasArg())  {  requiredOptions.add(option);  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(t);  if(option.hasArg())  {  requiredOptions.add(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(t);  if(option.hasArg())  {  requiredOptions.add(option);  }	      	non-compiled	[CE]  cannot  find  symbol  t	5	None	replace
51	[BUG]  [BUGGY]  parseOption(t,  iterator);  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  parseOption(t,  iterator);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	parseOption(t,  iterator);	      	non-compiled	[CE]  cannot  find  symbol  t	5	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  cannot  find  symbol  str  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(str);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(str);  if(option!=  null)  {  cmd.addArg(option);  }	      Option    option    =    options.getOption(t);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  cannot  find  symbol  str	19	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(options);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(options);  if(option!=  null)  {  cmd.addArg(option);  }	      Option    option    =    options.getOption(t);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	19	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.getOption(tr);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  cannot  find  symbol  tr  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(tr);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(tr);  if(option!=  null)  {  cmd.addArg(option);  }	      Option    option    =    options.getOption(t);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  cannot  find  symbol  tr	19	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  if(option  ==  null)  {  cmd.addArg(option);  }  [CE]  cannot  find  symbol  str  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(str);  if(option  ==  null)  {  cmd.addArg(option);  }  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(str);  if(option  ==  null)  {  cmd.addArg(option);  }	      Option    option    =    options.getOption(t);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  cannot  find  symbol  str	19	None	replace
56	[BUG]  [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  opts.keySet().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	21	None	replace
57	[BUG]  [BUGGY]  return  str.trim();  [CE]  cannot  find  symbol  str  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  str.trim();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  str.trim();	  return    cmd.trim();    	non-compiled	[CE]  cannot  find  symbol  str	3	None	replace
58	[BUG]  [BUGGY]  return  iterator.trim();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.trim();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.trim();	  return    cmd.trim();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
59	[BUG]  [BUGGY]  return  this.cmd.trim();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  this.cmd.trim();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  this.cmd.trim();	  return    cmd.trim();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
60	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(options);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.getOptions(options);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.getOptions(options);	      Option    cmd    =    options.getOptions();    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	15	None	replace
61	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getArgumentList();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return(options  ==  null)?  null  :  options.getArgumentList();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return(options  ==  null)?  null  :  options.getArgumentList();	  return    this;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  cannot  find  symbol  opt  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(opt);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  cannot  find  symbol  opt	7	None	replace
63	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator  =  options.getOptions();  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]      iterator.remove();  Iterator  iterator  =  options.getOptions();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	        iterator.remove();    Iterator  iterator  =  options.getOptions();	  	non-compiled	[CE]  not  a  statement	8	None	add
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.getOption(opt);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.getOption(opt);	      Option    cmd    =    options.getOption(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
65	[BUG]  [BUGGY]  return  options.trim();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  options.trim();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  options.trim();	  return    cmd.trim();    	non-compiled	[CE]  not  a  statement	3	None	replace
66	[BUG]  [BUGGY]  iterator.clear();  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  iterator.clear();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	iterator.clear();	      iterator.remove();    	non-compiled	[CE]  not  a  statement	9	None	replace
67	[BUG]  [BUGGY]  return  iterator.null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.null;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.null;	  return    iterator;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
68	[BUG]  [BUGGY]  return  iterator.t;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.t;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.t;	  return    iterator;    	non-compiled	[CE]  not  a  statement	17	None	replace
69	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(option);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(option);  if(option!=  null)  {  cmd.addArg(option);  }	      Option    option    =    options.getOption(t);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  not  a  statement	19	None	replace
70	[BUG]  [BUGGY]  Ilerator  iterator  =  options.keySet().iterator();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Ilerator  iterator  =  options.keySet().iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Ilerator  iterator  =  options.keySet().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  not  a  statement	21	None	replace
71	[BUG]  [BUGGY]  options.addArg(arguments[t]);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  options.addArg(arguments[t]);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	options.addArg(arguments[t]);	      options.addArg(t);    	non-compiled	[CE]  not  a  statement	10	None	replace
72	[BUG]  [BUGGY]  options.addArg(arguments[0]);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  options.addArg(arguments[0]);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	options.addArg(arguments[0]);	      options.addArg(t);    	non-compiled	[CE]  not  a  statement	10	None	replace
73	[BUG]  [BUGGY]  return  options.options;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  options.options;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  options.options;	  return    this.options;    	non-compiled	[CE]  not  a  statement	1	None	replace
74	[BUG]  [BUGGY]  return  cmd.options;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  cmd.options;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  cmd.options;	  return    this.options;    	non-compiled	[CE]  not  a  statement	1	None	replace
75	[BUG]  [BUGGY]  return  options.toString();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  options.toString();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  options.toString();	  return    cmd.toString();    	non-compiled	[CE]  not  a  statement	2	None	replace
76	[BUG]  [BUGGY]  return  cmd.toString()  +  arguments;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  cmd.toString()  +  arguments;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  cmd.toString()  +  arguments;	  return    cmd.toString();    	non-compiled	[CE]  not  a  statement	2	None	replace
77	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  option  =  options.getOption(arguments);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  not  a  statement	6	None	replace
78	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.length()  ==  0)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.length()  ==  0)  {  cmd.addArg(str);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.length()  ==  0)  {  cmd.addArg(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.length()  ==  0)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.length()  ==  0)  {  cmd.addArg(str);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.length()  ==  0)  {  cmd.addArg(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.equals( " "))  {  cmd.addArg(str);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.equals( " "))  {  cmd.addArg(str);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.equals( " "))  {  cmd.addArg(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  requiredOptions.add(cmd);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  requiredOptions.add(cmd);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  requiredOptions.add(cmd);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
82	[BUG]  [BUGGY]  return  iterator.test(arguments);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  iterator.test(arguments);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  iterator.test(arguments);	  return    iterator;    	non-compiled	[CE]  not  a  statement	17	None	replace
83	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getArguments();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return(options  ==  null)?  null  :  options.getArguments();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return(options  ==  null)?  null  :  options.getArguments();	  return    this;    	non-compiled	[CE]  not  a  statement	16	None	replace
84	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator  =  options.getIterator();  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]      iterator.remove();  Iterator  iterator  =  options.getIterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	        iterator.remove();    Iterator  iterator  =  options.getIterator();	  	non-compiled	[CE]  not  a  statement	8	None	add
85	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(test);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Option  cmd  =  options.getOption(test);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Option  cmd  =  options.getOption(test);	      Option    cmd    =    options.getOption(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
86	[BUG]  [BUGGY]  iterator.addArg(arguments[t]);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  iterator.addArg(arguments[t]);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	iterator.addArg(arguments[t]);	      iterator.addArg(str);    	non-compiled	[CE]  not  a  statement	11	None	replace
87	[BUG]  [BUGGY]  iterator.addArg(arguments[0]);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  iterator.addArg(arguments[0]);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	iterator.addArg(arguments[0]);	      iterator.addArg(str);    	non-compiled	[CE]  not  a  statement	11	None	replace
88	[BUG]  [BUGGY]  return  options.getOptions().toString();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  return  options.getOptions().toString();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	return  options.getOptions().toString();	  return    cmd.toString();    	non-compiled	[CE]  not  a  statement	2	None	replace
89	[BUG]  [BUGGY]  iterator.setAtNonOption(stopAtNonOption);  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  iterator.setAtNonOption(stopAtNonOption);  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	iterator.setAtNonOption(stopAtNonOption);	      iterator.remove();    	non-compiled	[CE]  not  a  statement	9	None	replace
90	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  cmd.addArg(str);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  cmd.addArg(str);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  cmd.addArg(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
91	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
92	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
93	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  return  str;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  return  str;  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String  str  =(String)iterator.next();  if(str.endsWith( "- "))  {  return  str;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
94	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    {  cmd.addArg(str);  }  }  }  }  processProperties(properties);  checkRequiredOptions();    [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [BUGGY]    return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	Iterator  iterator  =  this.options.keySet().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  not  a  statement	21	None	replace
