bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  option  =(Option)opt.getValue();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  option  =(Option)opt.getValue();  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  option  =(Option)opt.getValue();		non-compiled	[CE]  illegal  start  of  type	6	None	add
2	[BUG]  [BUGGY]    Option  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  option  =(Option)opt.clone();  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  option  =(Option)opt.clone();		non-compiled	[CE]  illegal  start  of  type	6	None	add
3	[BUG]  [BUGGY]    Option  opt  =  getOptions().getOption(arg);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  opt  =  getOptions().getOption(arg);  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  opt  =  getOptions().getOption(arg);		non-compiled	[CE]  illegal  start  of  type	6	None	add
4	[BUG]  [BUGGY]    Option  group  =  getOptions().get(opt.getKey());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  group  =  getOptions().get(opt.getKey());  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  group  =  getOptions().get(opt.getKey());		non-compiled	[CE]  illegal  start  of  type	6	None	add
5	[BUG]  [BUGGY]    Option  option  =  opt.getOption();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  option  =  opt.getOption();  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  option  =  opt.getOption();		non-compiled	[CE]  illegal  start  of  type	6	None	add
6	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey());  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]  getRequiredOptions().add(opt.getKey());  [BUGGY]  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey());	getRequiredOptions().remove(opt.getKey());  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter);  [BUGGY]  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  iter);	getRequiredOptions().remove(opt.getKey());  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey()  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]  getRequiredOptions().remove(opt.getKey()  -  1);  [BUGGY]  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey()  -  1);	getRequiredOptions().remove(opt.getKey());  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getValue());  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]  getRequiredOptions().remove(opt.getValue());  [BUGGY]  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getValue());	getRequiredOptions().remove(opt.getKey());  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]    Option  group  =  getOptions().getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  group  =  getOptions().getOptionGroup(opt);  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  group  =  getOptions().getOptionGroup(opt);		non-compiled	[CE]  illegal  start  of  type	6	None	add
11	[BUG]  [BUGGY]    Option  option  =  getOptions().getOption(opt);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  option  =  getOptions().getOption(opt);  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  option  =  getOptions().getOption(opt);		non-compiled	[CE]  illegal  start  of  type	6	None	add
12	[BUG]  [BUGGY]    Option  opt  =  getOptions().getOption(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  opt  =  getOptions().getOption(opt);  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  opt  =  getOptions().getOption(opt);		non-compiled	[CE]  illegal  start  of  type	6	None	add
13	[BUG]  [BUGGY]    Option  option  =(Option)opt.getOption();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  option  =(Option)opt.getOption();  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  option  =(Option)opt.getOption();		non-compiled	[CE]  illegal  start  of  type	6	None	add
14	[BUG]  [BUGGY]    Option  opt  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  opt  =(Option)opt.clone();  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  opt  =(Option)opt.clone();		non-compiled	[CE]  illegal  start  of  type	6	None	add
15	[BUG]  [BUGGY]    Option  opt  =  getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]    Option  opt  =  getOption(opt.getKey());  [BUGGY]  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	    Option  opt  =  getOption(opt.getKey());		non-compiled	[CE]  illegal  start  of  type	6	None	add
16	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getKey());  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {  [BUGGY]  getRequiredOptions().clear(opt.getKey());  [BUGGY]  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getKey());	getRequiredOptions().remove(opt.getKey());  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
