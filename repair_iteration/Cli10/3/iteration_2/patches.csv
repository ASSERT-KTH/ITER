bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue(),  iter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(opt.getValue(),  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getValue(),  iter);	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2	[BUG]  [BUGGY]  Option  opt  =  getOption(arg.getValue());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(arg.getValue());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(arg.getValue());	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  iter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option,  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(option,  iter);	  Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey(),  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(opt.getKey(),  iter);	  Option    option    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
5	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(opt.getValue());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(opt.getValue());	  Option    option    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
6	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey(),  arg);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey(),  arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(opt.getKey(),  arg);	  Option    option    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
7	[BUG]  [BUGGY]  Option  option  =  opt.getOption(arg,  iter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(arg,  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(arg,  iter);	  Option    option    =    opt.getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  Option  option  =  opt.getOption(key);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(key);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(key);	  Option    option    =    opt.getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  Option  option  =  opt.getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(opt.getKey());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(opt.getKey());	  Option    option    =    opt.getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getKey(),  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt.getKey(),  iter);	  Option    group    =    getOptions().getOptionGroup(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
11	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getValue());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getValue());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt.getValue());	  Option    group    =    getOptions().getOptionGroup(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
12	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getId());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getId());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt.getId());	  Option    group    =    getOptions().getOptionGroup(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
13	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getId(),  iter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(opt.getId(),  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getId(),  iter);	  Option    opt    =    getOption(opt.getId());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  Option  opt  =  getOption(arg.getId());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(arg.getId());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(arg.getId());	  Option    opt    =    getOption(opt.getId());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getValue()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().get(opt.getValue()  -  1);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.getValue()  -  1);	  Option    group    =    getOptions().get(opt.getKey()    -    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
16	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getKey()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().get(opt.getKey()  +  1);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.getKey()  +  1);	  Option    group    =    getOptions().get(opt.getKey()    -    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
17	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)/  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)/  1;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt)/  1;	  Option    group    =    getOptions().getOptionGroup(opt)+    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
18	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)+  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)+  2;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt)+  2;	  Option    group    =    getOptions().getOptionGroup(opt)+    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
19	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)+  arg;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)+  arg;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt)+  arg;	  Option    group    =    getOptions().getOptionGroup(opt)+    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
20	[BUG]  [BUGGY]  Option  opt  =(Option)options.clone()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =(Option)options.clone()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)options.clone()  :  null;	  Option    opt    =(Option)opt.clone()    :    null;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
21	[BUG]  [BUGGY]  Option  option  =(Option)opt.getAssignment();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getAssignment();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getAssignment();	  Option    option    =(Option)opt.getKey();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  Option  option  =(Option)opt,  opt.clone()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt,  opt.clone()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt,  opt.clone()  :  null;	  Option    option    =(Option)opt.clone()    :    null;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  Option  option  =(Option)opt.cloneTree()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.cloneTree()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.cloneTree()  :  null;	  Option    option    =(Option)opt.clone()    :    null;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  opt.getValue());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().remove(opt.getKey(),  opt.getValue());  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  opt.getValue());	  getRequiredOptions().remove(opt.getKey()    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  Option  option  =(Option)this.options.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)this.options.clone();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)this.options.clone();	  Option    option    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter,  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter,  iter);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey(),  iter,  iter);	  getRequiredOptions().add(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
27	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter,  cmd);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey(),  iter,  cmd);	  getRequiredOptions().add(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
28	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter,  options);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey(),  iter,  options);	  getRequiredOptions().add(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
29	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getName(),  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getName(),  iter);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getName(),  iter);	  getRequiredOptions().add(opt.getName());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
30	[BUG]  [BUGGY]  getRequiredOptions().add(opt.toString());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.toString());  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.toString());	  getRequiredOptions().add(opt.getName());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
31	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getValue()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getValue()  -  1);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getValue()  -  1);	  getRequiredOptions().add(opt.getKey()    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
32	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getKey()  +  1);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey()  +  1);	  getRequiredOptions().add(opt.getKey()    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getKey(),  iter  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().get(opt.getKey(),  iter  +  1);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.getKey(),  iter  +  1);	  Option    group    =    getOptions().get(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
34	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getKey(),  iter,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().get(opt.getKey(),  iter,  options);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.getKey(),  iter,  options);	  Option    group    =    getOptions().get(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
35	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getValue(),  iter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().get(opt.getValue(),  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.getValue(),  iter);	  Option    group    =    getOptions().get(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
36	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getName(),  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().clear(opt.getName(),  iter);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getName(),  iter);	  getRequiredOptions().clear(opt.getName());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
37	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getName()  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().clear(opt.getName()  +  1);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getName()  +  1);	  getRequiredOptions().clear(opt.getName());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
38	[BUG]  [BUGGY]  Option  option  =(Option)options.getKey();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)options.getKey();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)options.getKey();	  Option    option    =(Option)options.getValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
39	[BUG]  [BUGGY]  Option  option  =(Option)opts.getValue();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opts.getValue();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opts.getValue();	  Option    option    =(Option)options.getValue();    	non-compiled	[CE]  	45	None	replace
40	[BUG]  [BUGGY]  Option  opt  =(Option)opts.get(opt.getKey());  [CE]  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =(Option)opts.get(opt.getKey());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)opts.get(opt.getKey());	  Option    opt    =(Option)opts.clone();    	non-compiled	[CE]  	38	None	replace
41	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter  +  2);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter  +  2);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  iter  +  2);	  getRequiredOptions().remove(opt.getKey(),    iter    +    1);    	non-compiled	[CE]  	29	None	replace
42	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter  +  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter  +  1);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey(),  iter  +  1);	  getRequiredOptions().remove(opt.getKey(),    iter    +    1);    	non-compiled	[CE]  	29	None	replace
43	[BUG]  [BUGGY]  Option  group  =  getOptions().getGroup(opt);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getGroup(opt);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getGroup(opt);	  Option    group    =    getOptions().getOptionGroup(arg);    	non-compiled	[CE]  	25	None	replace
44	[BUG]  [BUGGY]  Option  group  =  getOptions().get(arg);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().get(arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(arg);	  Option    group    =    getOptions().getOptionGroup(arg);    	non-compiled	[CE]  	25	None	replace
45	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  opt);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  opt);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  iter,  opt);	  getRequiredOptions().remove(opt.getKey(),    iter,    iter);    	non-compiled	[CE]  	28	None	replace
46	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  opt.options);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  opt.options);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  iter,  opt.options);	  getRequiredOptions().remove(opt.getKey(),    iter,    iter);    	non-compiled	[CE]  	28	None	replace
47	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey(),  iter);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey(),  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(opt.getKey(),  iter);	  Option    opt    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  	13	None	replace
48	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(arg.getKey());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(arg.getKey());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(arg.getKey());	  Option    opt    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  	13	None	replace
49	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey(),  arg);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey(),  arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(opt.getKey(),  arg);	  Option    opt    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  	13	None	replace
50	[BUG]  [BUGGY]  Option  option  =  opt.getOption(option);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(option);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(option);	  Option    option    =    opt.getKey();    	non-compiled	[CE]  	42	None	replace
51	[BUG]  [BUGGY]  Option  option  =  opt.getValue();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getValue();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getValue();	  Option    option    =    opt.getKey();    	non-compiled	[CE]  	42	None	replace
52	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getValue(),  iter);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getValue(),  iter);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getValue(),  iter);	  getRequiredOptions().add(opt.getValue());    	non-compiled	[CE]  	20	None	replace
53	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getValue()  +  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getValue()  +  1);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getValue()  +  1);	  getRequiredOptions().add(opt.getValue());    	non-compiled	[CE]  	20	None	replace
54	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt,  iter);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().get(opt,  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt,  iter);	  Option    group    =    getOptions().get(opt);    	non-compiled	[CE]  	26	None	replace
55	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.clone();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =(Option)this.options.clone();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)this.options.clone();	  Option    opt    =(Option)options.clone();    	non-compiled	[CE]  	34	None	replace
56	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getKey(),  iter,  iter);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().clear(opt.getKey(),  iter,  iter);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getKey(),  iter,  iter);	  getRequiredOptions().clear(opt.getKey(),    iter);    	non-compiled	[CE]  	9	None	replace
57	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getKey(),  iter,  options);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().clear(opt.getKey(),  iter,  options);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getKey(),  iter,  options);	  getRequiredOptions().clear(opt.getKey(),    iter);    	non-compiled	[CE]  	9	None	replace
58	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getValue(),  iter);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().clear(opt.getValue(),  iter);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getValue(),  iter);	  getRequiredOptions().clear(opt.getKey(),    iter);    	non-compiled	[CE]  	9	None	replace
59	[BUG]  [BUGGY]  Option  option  =(Option)opts.get(opt.getKey());  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opts.get(opt.getKey());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opts.get(opt.getKey());	  Option    option    =(Option)opts.clone();    	non-compiled	[CE]  	44	None	replace
60	[BUG]  [BUGGY]  Option  option  =(Option)opt.getKey()  :  null;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getKey()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getKey()  :  null;	  Option    option    =(Option)opt.getOption()    :    null;    	non-compiled	[CE]  	2	None	replace
61	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue()  :  null;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getValue()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getValue()  :  null;	  Option    option    =(Option)opt.getOption()    :    null;    	non-compiled	[CE]  	2	None	replace
62	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue(),  iter,  requiredOptions);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getValue(),  iter,  requiredOptions);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getValue(),  iter,  requiredOptions);	  Option    option    =(Option)opt.getValue(),    iter);    	non-compiled	[CE]  	8	None	replace
63	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue(),  iter,  cmd);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getValue(),  iter,  cmd);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getValue(),  iter,  cmd);	  Option    option    =(Option)opt.getValue(),    iter);    	non-compiled	[CE]  	8	None	replace
64	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue(),  iter,  options);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getValue(),  iter,  options);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getValue(),  iter,  options);	  Option    option    =(Option)opt.getValue(),    iter);    	non-compiled	[CE]  	8	None	replace
65	[BUG]  [BUGGY]  Option  option  =  opt.getOption()?  null  :  opt.getOption();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption()?  null  :  opt.getOption();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption()?  null  :  opt.getOption();	  Option    option    =    opt.getOption()    :    null;    	non-compiled	[CE]  	4	None	replace
66	[BUG]  [BUGGY]  Option  option  =  opt.getOption()?  null  :  opt.getKey();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption()?  null  :  opt.getKey();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption()?  null  :  opt.getKey();	  Option    option    =    opt.getOption()    :    null;    	non-compiled	[CE]  	4	None	replace
67	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  iter,  cmd);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(opt.getKey(),  iter,  cmd);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getKey(),  iter,  cmd);	  Option    opt    =    getOption(opt.getKey(),    iter);    	non-compiled	[CE]  	15	None	replace
68	[BUG]  [BUGGY]  Option  opt  =  getOption(iter.getKey(),  opt);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(iter.getKey(),  opt);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(iter.getKey(),  opt);	  Option    opt    =    getOption(opt.getKey(),    iter);    	non-compiled	[CE]  	15	None	replace
69	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  iter,  options);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(opt.getKey(),  iter,  options);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getKey(),  iter,  options);	  Option    opt    =    getOption(opt.getKey(),    iter);    	non-compiled	[CE]  	15	None	replace
70	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(arg,  iter);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(arg,  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(arg,  iter);	  Option    group    =    getOptions().getOptionGroup(opt,    iter);    	non-compiled	[CE]  	27	None	replace
71	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter,  arg);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter,  arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter,  arg);	  Option    group    =    getOptions().getOptionGroup(opt,    iter);    	non-compiled	[CE]  	27	None	replace
72	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter,  options);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter,  options);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter,  options);	  Option    group    =    getOptions().getOptionGroup(opt,    iter);    	non-compiled	[CE]  	27	None	replace
73	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getArg(),  iter);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(opt.getArg(),  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getArg(),  iter);	  Option    opt    =    getOption(opt.getArg());    	non-compiled	[CE]  	40	None	replace
74	[BUG]  [BUGGY]  Option  opt  =  getOption(arg.getArg());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(arg.getArg());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(arg.getArg());	  Option    opt    =    getOption(opt.getArg());    	non-compiled	[CE]  	40	None	replace
75	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getValue(),  iter  +  1);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().remove(opt.getValue(),  iter  +  1);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getValue(),  iter  +  1);	  getRequiredOptions().remove(opt.getValue(),    iter);    	non-compiled	[CE]  	24	None	replace
76	[BUG]  [BUGGY]  Option  option  =  iter.getOption(),  opt);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  iter.getOption(),  opt);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  iter.getOption(),  opt);	  Option    option    =    opt.getOption(),    iter);    	non-compiled	[CE]  	3	None	replace
77	[BUG]  [BUGGY]  Option  option  =  opt.getOption(),  iter,  requiredOptions);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(),  iter,  requiredOptions);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(),  iter,  requiredOptions);	  Option    option    =    opt.getOption(),    iter);    	non-compiled	[CE]  	3	None	replace
78	[BUG]  [BUGGY]  Option  option  =  opt.getOption(),  iter,  cmd);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(),  iter,  cmd);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(),  iter,  cmd);	  Option    option    =    opt.getOption(),    iter);    	non-compiled	[CE]  	3	None	replace
79	[BUG]  [BUGGY]  Option  option  =  opt.getOption(),  iter,  options);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(),  iter,  options);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(),  iter,  options);	  Option    option    =    opt.getOption(),    iter);    	non-compiled	[CE]  	3	None	replace
80	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(arg,  iter);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(arg,  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(arg,  iter);	  Option    option    =    getOptions().getOption(arg);    	non-compiled	[CE]  	21	None	replace
81	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(option);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(option);	  Option    option    =    getOptions().getOption(arg);    	non-compiled	[CE]  	21	None	replace
82	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(iter,  opt);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(iter,  opt);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(iter,  opt);	  Option    opt    =    getOptions().getOption(opt,    iter);    	non-compiled	[CE]  	14	None	replace
83	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt,  iter,  arg);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(opt,  iter,  arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(opt,  iter,  arg);	  Option    opt    =    getOptions().getOption(opt,    iter);    	non-compiled	[CE]  	14	None	replace
84	[BUG]  [BUGGY]  options  =(Option)opt.clone();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  options  =(Option)opt.clone();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	options  =(Option)opt.clone();	  option    =(Option)opt.clone();    	non-compiled	[CE]  	41	None	replace
85	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getValue()  +  1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().clear(opt.getValue()  +  1);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getValue()  +  1);	  getRequiredOptions().clear(opt.getValue());    	non-compiled	[CE]  	10	None	replace
86	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt,  iter,  arg);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(opt,  iter,  arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(opt,  iter,  arg);	  Option    option    =    getOptions().getOption(opt,    iter);    	non-compiled	[CE]  	23	None	replace
87	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(iter,  opt);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(iter,  opt);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(iter,  opt);	  Option    option    =    getOptions().getOption(opt,    iter);    	non-compiled	[CE]  	23	None	replace
88	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt,  iter,  options);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(opt,  iter,  options);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(opt,  iter,  options);	  Option    option    =    getOptions().getOption(opt,    iter);    	non-compiled	[CE]  	23	None	replace
89	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter,  options);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(arg,  iter,  options);	  Option    opt    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
90	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(iter,  arg);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(iter,  arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(iter,  arg);	  Option    opt    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
91	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.key);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().get(opt.key);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.key);	  Option    group    =    getOptions().get(opt);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
92	[BUG]  [BUGGY]  Option  option  =  opt.getOption(null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(null);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(null);	  Option    option    =    opt.getKey();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
93	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter  +  1);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(arg,  iter  +  1);	  Option    opt    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
94	[BUG]  [BUGGY]  Option  option  =(Option)options.get(opt.getKey());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)options.get(opt.getKey());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)options.get(opt.getKey());	  Option    option    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
95	[BUG]  [BUGGY]  Option  option  =(Option)opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getKey(),  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getKey(),  iter);	  Option    option    =(Option)opt.getValue(),    iter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue(),  iter  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getValue(),  iter  +  1);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getValue(),  iter  +  1);	  Option    option    =(Option)opt.getValue(),    iter);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone()?  null  :  opt.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.clone()?  null  :  opt.clone();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.clone()?  null  :  opt.clone();	  Option    option    =(Option)opt.clone()    :    null;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
98	[BUG]  [BUGGY]  Option  option  =(Option)options.clone()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)options.clone()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)options.clone()  :  null;	  Option    option    =(Option)opt.clone()    :    null;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
99	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getKey(),  iter  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().clear(opt.getKey(),  iter  +  1);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getKey(),  iter  +  1);	  getRequiredOptions().clear(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
100	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.toString());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().clear(opt.toString());  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.toString());	  getRequiredOptions().clear(opt.getName());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
101	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(opt);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =(Option)options.get(opt);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)options.get(opt);	  Option    opt    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
102	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(opt.getKey());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =(Option)options.get(opt.getKey());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)options.get(opt.getKey());	  Option    opt    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
103	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(iter);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(iter);	  Option    group    =    getOptions().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
104	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(opt.getValue());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(opt.getValue());	  Option    opt    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
105	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt.getArgument());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(opt.getArgument());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(opt.getArgument());	  Option    opt    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
106	[BUG]  [BUGGY]  Option  option  =(Option)options.getValue(0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)options.getValue(0);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)options.getValue(0);	  Option    option    =(Option)options.getValue();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
107	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey(),  opt);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey(),  opt);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(opt.getKey(),  opt);	  Option    option    =    getOptions().getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
108	[BUG]  [BUGGY]  Option  option  =  opt.getOption(),  iter  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(),  iter  +  1);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(),  iter  +  1);	  Option    option    =    opt.getOption(),    iter);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  GetRequiredOptions().remove(opt.getKey());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  GetRequiredOptions().remove(opt.getKey());  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	GetRequiredOptions().remove(opt.getKey());	  getRequiredOptions().remove(opt.getKey()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
110	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getName());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().remove(opt.getName());  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getName());	  getRequiredOptions().add(opt.getName());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.getOption()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  options.getOption()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  options.getOption()  :  null;	  Option    option    =    opt.getOption()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
112	[BUG]  [BUGGY]  Option  option  =  arg.getOption()  :  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  arg.getOption()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  arg.getOption()  :  null;	  Option    option    =    opt.getOption()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
113	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getArgument());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getArgument());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt.getArgument());	  Option    group    =    getOptions().getOptionGroup(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
114	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone()?  null  :  opt.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =(Option)opt.clone()?  null  :  opt.clone();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)opt.clone()?  null  :  opt.clone();	  Option    opt    =(Option)opt.clone()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
115	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getOptionValue();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getOptionValue();	  Option    option    =(Option)opt.getKey();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
116	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  iter,  requiredOptions);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(opt.getKey(),  iter,  requiredOptions);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getKey(),  iter,  requiredOptions);	  Option    opt    =    getOption(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
117	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption()  :  opt;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opt.getOption()  :  opt;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getOption()  :  opt;	  Option    option    =(Option)opt.getOption()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
118	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter  +  1);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter  +  1);	  Option    group    =    getOptions().getOptionGroup(opt,    iter);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
119	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)this.options.getValue();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)this.options.getValue();	  Option    option    =(Option)options.getValue();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
120	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter,  requiredOptions);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter,  requiredOptions);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey(),  iter,  requiredOptions);	  getRequiredOptions().add(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
121	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter,  option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter,  option);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(arg,  iter,  option);	  Option    opt    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
122	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  this);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  iter,  this);	  getRequiredOptions().remove(opt.getKey(),    iter,    iter);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
123	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  group);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  group);  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  iter,  group);	  getRequiredOptions().remove(opt.getKey(),    iter,    iter);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
124	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter,  iter);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter,  iter);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter,  iter);	  Option    group    =    getOptions().getOptionGroup(opt,    iter);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
125	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter,  requiredOptions);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter,  requiredOptions);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter,  requiredOptions);	  Option    group    =    getOptions().getOptionGroup(opt,    iter);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
126	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter.getValue());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter.getValue());  [BUGGY]      }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey(),  iter.getValue());	  getRequiredOptions().add(opt.getKey()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
127	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)-  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)-  1;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt)-  1;	  Option    group    =    getOptions().getOptionGroup(opt)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
128	[BUG]  [BUGGY]  Option  opt  =(Option)opts.get(0);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =(Option)opts.get(0);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)opts.get(0);	  Option    opt    =(Option)opts.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
129	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue(),  arg);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOption(opt.getValue(),  arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getValue(),  arg);	  Option    opt    =    getOption(opt.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
130	[BUG]  [BUGGY]  Option  option  =  opt.getOption(arg)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption(arg)+  1;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(arg)+  1;	  Option    option    =    opt.getOption(arg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
131	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  options.getOption(arg);	  Option    option    =    opt.getOption(arg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
132	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(option);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(option);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(option);	  Option    group    =    getOptions().getOptionGroup(arg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
133	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option.getKey());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  opt  =  getOptions().getOption(option.getKey());  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(option.getKey());	  Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
134	[BUG]  [BUGGY]  Option  option  =(Option)opts.get(arg);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)opts.get(arg);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opts.get(arg);	  Option    option    =(Option)opts.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
135	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getKey(),  this);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getKey(),  this);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt.getKey(),  this);	  Option    group    =    getOptions().getOptionGroup(opt.getKey());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
136	[BUG]  [BUGGY]  Option  option  =(Option)iter.getValue(),  opt);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =(Option)iter.getValue(),  opt);  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)iter.getValue(),  opt);	  Option    option    =(Option)opt.getValue(),    iter);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
137	[BUG]  [BUGGY]  Option  option  =  opt.getKey()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getKey()  :  null;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getKey()  :  null;	  Option    option    =    opt.getOption()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
138	[BUG]  [BUGGY]  Option  option  =  opt.getOption()  :  options;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  Option  option  =  opt.getOption()  :  options;  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption()  :  options;	  Option    option    =    opt.getOption()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
139	[BUG]  [BUGGY]  option  =(Option)options.clone();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {      [BUGGY]  option  =(Option)options.clone();  [BUGGY]      getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	option  =(Option)options.clone();	  option    =(Option)opt.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
