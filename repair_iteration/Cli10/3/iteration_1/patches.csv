bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)opt.getKey();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =(Option)opt.getKey();  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getKey();	      Option    option    =(Option)opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =(Option)opt.getOption()  :  null;  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getOption()  :  null;	      Option    option    =(Option)opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  Option  option  =  opt.getOption(),  iter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =  opt.getOption(),  iter);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(),  iter);	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Option  option  =  opt.getOption()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =  opt.getOption()  :  null;  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption()  :  null;	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  Option  option  =  opt.getOption(arg);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =  opt.getOption(arg);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getOption(arg);	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(arg,  iter);	      Option    opt    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =  getOptions().getOption(option);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(option);	      Option    opt    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue(),  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =(Option)opt.getValue(),  iter);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.getValue(),  iter);	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().clear(opt.getKey(),  iter);  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getKey(),  iter);	  getRequiredOptions().clear(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getValue());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().clear(opt.getValue());  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getValue());	  getRequiredOptions().clear(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone()  :  null;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =(Option)opt.clone()  :  null;  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opt.clone()  :  null;	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  Option  option  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =(Option)options.clone();  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)options.clone();	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey());  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(opt.getKey());	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =  getOptions().getOption(opt,  iter);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOptions().getOption(opt,  iter);	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =  getOption(opt.getKey(),  iter);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getKey(),  iter);	      Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =  getOption(opt.getValue());  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getValue());	      Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getId());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =  getOption(opt.getId());  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getId());	      Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey()  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().remove(opt.getKey()  +  1);  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey()  +  1);	  getRequiredOptions().remove(opt.getKey()    -    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().add(opt.getKey(),  iter);  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey(),  iter);	  getRequiredOptions().add(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getValue());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().add(opt.getValue());  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getValue());	  getRequiredOptions().add(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(arg);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =  getOptions().getOption(arg);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(arg);	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey());  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(opt.getKey());	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =  getOptions().getOption(opt,  iter);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  getOptions().getOption(opt,  iter);	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getValue(),  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().remove(opt.getValue(),  iter);  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getValue(),  iter);	  getRequiredOptions().remove(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(arg);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  group  =  getOptions().getOptionGroup(arg);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(arg);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  group  =  getOptions().get(opt);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
28	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  iter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter,  iter);  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  iter,  iter);	  getRequiredOptions().remove(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().remove(opt.getKey(),  iter  +  1);  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().remove(opt.getKey(),  iter  +  1);	  getRequiredOptions().remove(opt.getKey(),    iter);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getKey(),  iter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  group  =  getOptions().get(opt.getKey(),  iter);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.getKey(),  iter);	      Option    group    =    getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getKey()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  group  =  getOptions().get(opt.getKey()  -  1);  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.getKey()  -  1);	      Option    group    =    getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  group  =  getOptions().get(opt.getValue());  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().get(opt.getValue());	      Option    group    =    getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone()  :  null;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =(Option)opt.clone()  :  null;  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)opt.clone()  :  null;	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  Option  opt  =(Option)options.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =(Option)options.clone();  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)options.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getName());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().add(opt.getName());  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getName());	  getRequiredOptions().add(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  getRequiredOptions().clear(opt.getName());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().clear(opt.getName());  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().clear(opt.getName());	  getRequiredOptions().clear(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  getRequiredOptions().add(opt.getKey()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  getRequiredOptions().add(opt.getKey()  -  1);  [BUGGY]    }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	getRequiredOptions().add(opt.getKey()  -  1);	  getRequiredOptions().remove(opt.getKey()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  Option  opt  =(Option)opts.clone();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =(Option)opts.clone();  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =(Option)opts.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getKey());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getKey());  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt.getKey());	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  Option  opt  =  getOption(opt.getArg());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  opt  =  getOption(opt.getArg());  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  opt  =  getOption(opt.getArg());	      Option    opt    =    getOption(opt.getKey());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  option  =(Option)opt.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  option  =(Option)opt.clone();  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	option  =(Option)opt.clone();	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  Option  option  =  opt.getKey();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =  opt.getKey();  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =  opt.getKey();	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)+  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt)+  1;  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  group  =  getOptions().getOptionGroup(opt)+  1;	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  Option  option  =(Option)opts.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =(Option)opts.clone();  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)opts.clone();	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  Option  option  =(Option)options.getValue();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    if  (opt.isRequired())  {    [BUGGY]  Option  option  =(Option)options.getValue();  [BUGGY]    getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	Option  option  =(Option)options.getValue();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
