bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().has(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().has(opt);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().has(opt);	      boolean    hasOption    =    getOptions().has(arg);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().has(arg,  iter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().has(arg,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().has(arg,  iter);	      boolean    hasOption    =    getOptions().has(arg);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg,  iter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasValue(arg,  iter);	      boolean    hasOption    =    getOptions().hasValue(arg);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg  +  1);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasValue(arg  +  1);	      boolean    hasOption    =    getOptions().hasValue(arg);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(opt);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(opt);	      boolean    hasOption    =    getOptions().hasOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(opt);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptionGroup().hasOption(opt);	      boolean    hasOption    =    getOptionGroup().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(arg,  iter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(arg,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptionGroup().hasOption(arg,  iter);	      boolean    hasOption    =    getOptionGroup().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(opt);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(opt);	      OptionGroup    group    =    getOptionGroup().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().get(arg);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  OptionGroup  group  =  getOptionGroup().get(arg);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().get(arg);	      OptionGroup    group    =    getOptionGroup().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(arg);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(arg);	      OptionGroup    group    =    getOptionGroup().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(arg,  iter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(arg,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(arg,  iter);	      OptionGroup    group    =    getOptionGroup().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg,  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(arg,  iter);	      boolean    hasOption    =    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().contains(arg))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  &&  getOptions().contains(arg))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().contains(arg))  {	  if(hasOption    ||    getOptions().contains(arg))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().contains(option))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().contains(option))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().contains(option))  {	  if(hasOption    ||    getOptions().contains(arg))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().contains(opt))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().contains(opt))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().contains(opt))  {	  if(hasOption    ||    getOptions().contains(arg))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(option,  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().hasOption(option,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(option,  iter);	      boolean    hasOption    =    getOptions().hasOption(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(option);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(option);	      final    boolean    hasOption    =    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(arg,  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(arg,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(arg,  iter);	      final    boolean    hasOption    =    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().hasOption(arg))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  &&  getOptions().hasOption(arg))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().hasOption(arg))  {	  if(hasOption    ||    getOptions().hasOption(arg))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().hasOption(option))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().hasOption(option))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().hasOption(option))  {	  if(hasOption    ||    getOptions().hasOption(arg))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().hasOption(opt))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().hasOption(opt))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().hasOption(opt))  {	  if(hasOption    ||    getOptions().hasOption(arg))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().containsKey(arg))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  &&  getOptions().containsKey(arg))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().containsKey(arg))  {	  if(hasOption    ||    getOptions().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().containsKey(option))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().containsKey(option))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().containsKey(option))  {	  if(hasOption    ||    getOptions().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  if(hasOption  ||  getOptionGroup().containsKey(arg))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptionGroup().containsKey(arg))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptionGroup().containsKey(arg))  {	  if(hasOption    ||    getOptions().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  if(hasOption  &&  hasOption)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  &&  hasOption)  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  hasOption)  {	  if(hasOption    ||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  if(hasOption  ||  opt.hasArg())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  opt.hasArg())  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.hasArg())  {	  if(hasOption    ||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  if(hasOption  ||  hasOptionGroup)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  hasOptionGroup)  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  hasOptionGroup)  {	  if(hasOption    ||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  final  Option  option  =  getOptions().getOption(arg,  iter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  final  Option  option  =  getOptions().getOption(arg,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().getOption(arg,  iter);	      final    Option    option    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  final  Option  option  =  getOptions().getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  final  Option  option  =  getOptions().getOption(opt);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().getOption(opt);	      final    Option    option    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  final  Option  option  =  getOptions().getOption(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  final  Option  option  =  getOptions().getOption(option);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().getOption(option);	      final    Option    option    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().getOption(arg)!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  &&  getOptions().getOption(arg)!=  null)  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().getOption(arg)!=  null)  {	  if(hasOption    ||    getOptions().getOption(arg)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().getOption(arg)  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().getOption(arg)  ==  null)  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().getOption(arg)  ==  null)  {	  if(hasOption    ||    getOptions().getOption(arg)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().getOption(opt)!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().getOption(opt)!=  null)  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().getOption(opt)!=  null)  {	  if(hasOption    ||    getOptions().getOption(arg)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opts.get(arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  Option  group  =(OptionGroup)opts.get(arg);  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	Option  group  =(OptionGroup)opts.get(arg);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().getOption(option)!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().getOption(option)!=  null)  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().getOption(option)!=  null)  {	  if(hasOption    ||    getOptions().getOption(arg)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().hasOption(opt,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(opt,  iter);	      boolean    hasOption    =    getOptions().hasOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
37	[BUG]  [BUGGY]  if(hasOption  ||  opt.isUnknown())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  opt.isUnknown())  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.isUnknown())  {	  if(hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().containsKey(arg)||  hasOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().containsKey(arg)||  hasOption)  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().containsKey(arg)||  hasOption)  {	  if(hasOption    ||    getOptions().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  if(hasOption  &&  opt.hasArg())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  &&  opt.hasArg())  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt.hasArg())  {	  if(hasOption    ||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(opt);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(opt);	      OptionGroup    group    =    getOptionGroup().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
41	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(arg,  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(arg,  iter);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(arg,  iter);	      OptionGroup    group    =    getOptionGroup().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(option);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(option);	      OptionGroup    group    =    getOptionGroup().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(options);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(options);	      OptionGroup    group    =    getOptionGroup().getOptionGroup(arg);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter);  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(iter);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().containsValue(arg))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  getOptions().containsValue(arg))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().containsValue(arg))  {	  if(hasOption    ||    getOptions().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(arg);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(arg);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(arg);	      boolean    hasOption    =    getOptions().has(arg);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  if(hasOption  ||  opt.equals( " "))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  if(hasOption  ||  opt.equals( " "))  {  [BUGGY]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.equals( " "))  {	  if(hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(option);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(option);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptionGroup().hasOption(option);	      boolean    hasOption    =    getOptionGroup().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(arg);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  boolean  hasOption  =  getOptions().hasOption(arg);      [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(arg);  [BUGGY]    if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(arg);	      final    boolean    hasOption    =    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
