bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  group  =  getOptionGroup().getGroup(arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  Option  group  =  getOptionGroup().getGroup(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	Option  group  =  getOptionGroup().getGroup(arg);	  OptionGroup    group    =    getOptionGroup().getGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(opt,  iter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(opt,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(opt,  iter);	  OptionGroup    group    =    getOptionGroup().getGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().getOption(opt)!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().getOption(opt)!=  null)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().getOption(opt)!=  null)  {	  if(hasOption    ||    getOptions().getOption(opt)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
4	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().getOption(opt)  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().getOption(opt)  ==  null)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().getOption(opt)  ==  null)  {	  if(hasOption    ||    getOptions().getOption(opt)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
5	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().contains(option))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().contains(option))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().contains(option))  {	  if(hasOption    ||    getOptions().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  if(hasOption  ||  getOptionGroup().contains(option))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptionGroup().contains(option))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptionGroup().contains(option))  {	  if(hasOption    ||    getOptions().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(arg)&&  getOptions().hasOption(arg);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(arg)&&  getOptions().hasOption(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(arg)&&  getOptions().hasOption(arg);	  final    boolean    hasOption    =    getOptions().hasOption(arg)||    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
8	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(opt)||  getOptions().hasOption(arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(opt)||  getOptions().hasOption(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(opt)||  getOptions().hasOption(arg);	  final    boolean    hasOption    =    getOptions().hasOption(arg)||    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
9	[BUG]  [BUGGY]  if(hasOption  &&  getOptionGroup().containsKey(arg))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptionGroup().containsKey(arg))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptionGroup().containsKey(arg))  {	  if(hasOption    ||    getOptionGroup().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
10	[BUG]  [BUGGY]  if(hasOption  ||  getOptionGroup().containsKey(option))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptionGroup().containsKey(option))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptionGroup().containsKey(option))  {	  if(hasOption    ||    getOptionGroup().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
11	[BUG]  [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(opt,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptionGroup().hasOption(opt,  iter);	  boolean    hasOption    =    getOptionGroup().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(iter,  arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(iter,  arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptionGroup().hasOption(iter,  arg);	  boolean    hasOption    =    getOptionGroup().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().getOption(arg)  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().getOption(arg)  ==  null)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().getOption(arg)  ==  null)  {	  if(hasOption    ||    getOptions().getOption(arg)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
14	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter,  option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter,  option);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(iter,  option);	  boolean    hasOption    =    getOptions().hasOption(option,    iter);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(options,  iter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(options,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(options,  iter);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(options);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(options);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
17	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().get(options);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().get(options);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().get(options);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
18	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().getOption(option)!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().getOption(option)!=  null)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().getOption(option)!=  null)  {	  if(hasOption    ||    getOptions().getOption(option)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
19	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().getOption(option)  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptions().getOption(option)  ==  null)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().getOption(option)  ==  null)  {	  if(hasOption    ||    getOptions().getOption(option)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
20	[BUG]  [BUGGY]  final  Option  option  =  getOptionGroup().getOption(arg);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptionGroup().getOption(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptionGroup().getOption(arg);	  final    Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
21	[BUG]  [BUGGY]  if(!hasOption  &&  opt.hasArg())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(!hasOption  &&  opt.hasArg())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(!hasOption  &&  opt.hasArg())  {	  if(hasOption    ||    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
22	[BUG]  [BUGGY]  if(hasOption  ||  opt.hasArgs())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  opt.hasArgs())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.hasArgs())  {	  if(hasOption    ||    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
23	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().contains(opt))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().contains(opt))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().contains(opt))  {	  if(hasOption    ||    getOptions().contains(opt))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
24	[BUG]  [BUGGY]  if(hasOption  &&  hasOptionGroup)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  hasOptionGroup)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  hasOptionGroup)  {	  if(hasOption    ||    hasOptionGroup)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
25	[BUG]  [BUGGY]  if(hasOption  ||  group)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  group)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  group)  {	  if(hasOption    ||    hasOptionGroup)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
26	[BUG]  [BUGGY]  if(hasOption  ||  hasGroup)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  hasGroup)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  hasGroup)  {	  if(hasOption    ||    hasOptionGroup)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
27	[BUG]  [BUGGY]  if(hasOption  &&  opt.isEnabled())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  opt.isEnabled())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt.isEnabled())  {	  if(hasOption    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
28	[BUG]  [BUGGY]  if(hasOption  &&  opt.getArg())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  opt.getArg())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt.getArg())  {	  if(hasOption    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
29	[BUG]  [BUGGY]  if(hasOption  &&  iter.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  iter.hasNext())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  iter.hasNext())  {	  if(hasOption    &&    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
30	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().containsKey(option))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().containsKey(option))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().containsKey(option))  {	  if(hasOption    &&    getOptions().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
31	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().containsKey(arg)||  getOptions().containsKey(arg))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().containsKey(arg)||  getOptions().containsKey(arg))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().containsKey(arg)||  getOptions().containsKey(arg))  {	  if(hasOption    &&    getOptions().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
32	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(iter,  arg);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(iter,  arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(iter,  arg);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
33	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(opt,  iter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(opt,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(opt,  iter);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
34	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(arg,  iter,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(arg,  iter,  options);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(arg,  iter,  options);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
35	[BUG]  [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(option,  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(option,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptionGroup().hasOption(option,  iter);	  boolean    hasOption    =    getOptionGroup().hasOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
36	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  Option  option  =  getOptions().getOption(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	Option  option  =  getOptions().getOption(arg);	  final    Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
37	[BUG]  [BUGGY]  final  Option  option  =  getOptionGroup().getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptionGroup().getOption(opt);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptionGroup().getOption(opt);	  final    Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
38	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().hasOption(opt))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().hasOption(opt))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().hasOption(opt))  {	  if(hasOption    ||    getOptions().hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
39	[BUG]  [BUGGY]  if(hasOption  ||  getOptionGroup().hasOption(opt))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptionGroup().hasOption(opt))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptionGroup().hasOption(opt))  {	  if(hasOption    ||    getOptions().hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
40	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasValue(iter,  arg);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasValue(iter,  arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasValue(iter,  arg);	  boolean    hasOption    =    getOptions().hasValue(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg,  iter  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg,  iter  +  1);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasValue(arg,  iter  +  1);	  boolean    hasOption    =    getOptions().hasValue(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg,  iter).booleanValue();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg,  iter).booleanValue();  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasValue(arg,  iter).booleanValue();	  boolean    hasOption    =    getOptions().hasValue(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  final  Option  option  =  getOptions().getOption(iter,  arg);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptions().getOption(iter,  arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().getOption(iter,  arg);	  final    Option    option    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
44	[BUG]  [BUGGY]  final  Option  option  =  getOptions().getOption(arg,  iter,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptions().getOption(arg,  iter,  options);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().getOption(arg,  iter,  options);	  final    Option    option    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
45	[BUG]  [BUGGY]  final  Option  option  =  getOptions().getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptions().getOption(opt,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().getOption(opt,  iter);	  final    Option    option    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
46	[BUG]  [BUGGY]  final  Option  option  =  getOptions().getOption(options,  iter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptions().getOption(options,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().getOption(options,  iter);	  final    Option    option    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
47	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg)&&  getOptions().hasOption(arg);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg)&&  getOptions().hasOption(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(arg)&&  getOptions().hasOption(arg);	  boolean    hasOption    =    getOptions().hasOption(arg)||    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
48	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(opt)||  getOptions().hasOption(arg);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(opt)||  getOptions().hasOption(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(opt)||  getOptions().hasOption(arg);	  boolean    hasOption    =    getOptions().hasOption(arg)||    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
49	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(opt);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(opt);	  boolean    hasOption    =    getOptions().hasOption(arg)||    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
50	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().has(arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().has(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().has(arg);	  final    boolean    hasOption    =    getOptions().hasOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasValue(arg);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasValue(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasValue(arg);	  final    boolean    hasOption    =    getOptions().hasOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(iter,  arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(iter,  arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(iter,  arg);	  final    boolean    hasOption    =    getOptions().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
53	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(opt,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(opt,  iter);	  final    boolean    hasOption    =    getOptions().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(options,  iter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(options,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(options,  iter);	  final    boolean    hasOption    =    getOptions().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
55	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().get(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().get(opt);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().get(opt);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
56	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(iter,  arg);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(iter,  arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(iter,  arg);	  OptionGroup    group    =    getOptionGroup().getGroup(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(arg,  iter,  options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(arg,  iter,  options);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(arg,  iter,  options);	  OptionGroup    group    =    getOptionGroup().getGroup(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(options,  iter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(options,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(options,  iter);	  OptionGroup    group    =    getOptionGroup().getGroup(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
59	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg  +  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasValue(arg  +  2);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasValue(arg  +  2);	  boolean    hasOption    =    getOptions().hasValue(arg    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasValue(opt  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasValue(opt  +  1);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasValue(opt  +  1);	  boolean    hasOption    =    getOptions().hasValue(arg    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().get(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().get(option);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().get(option);	  OptionGroup    group    =    getOptionGroup().get(arg);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
62	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().get(arg,  iter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().get(arg,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().get(arg,  iter);	  OptionGroup    group    =    getOptionGroup().get(arg);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
63	[BUG]  [BUGGY]  if(hasOption  &&  opt.isUnknown())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  opt.isUnknown())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt.isUnknown())  {	  if(hasOption    ||    opt.isUnknown())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
64	[BUG]  [BUGGY]  if(!hasOption  &&  opt.isUnknown())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(!hasOption  &&  opt.isUnknown())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(!hasOption  &&  opt.isUnknown())  {	  if(hasOption    ||    opt.isUnknown())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
65	[BUG]  [BUGGY]  if(hasOption  ||  opt.isUnknown()  ||  hasOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  opt.isUnknown()  ||  hasOption)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.isUnknown()  ||  hasOption)  {	  if(hasOption    ||    opt.isUnknown())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
66	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(option);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(option);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(option);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
67	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(option,  iter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(option,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(option,  iter);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
68	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter,  arg);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter,  arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(iter,  arg);	  boolean    hasOption    =    getOptions().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg,  iter  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg,  iter  +  1);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(arg,  iter  +  1);	  boolean    hasOption    =    getOptions().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
70	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().has(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().has(opt);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().has(opt);	  boolean    hasOption    =    getOptions().has(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().hasOption(option))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().hasOption(option))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().hasOption(option))  {	  if(hasOption    &&    getOptions().hasOption(arg))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
72	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().has(iter,  arg);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().has(iter,  arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().has(iter,  arg);	  boolean    hasOption    =    getOptions().has(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(option,  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(option,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(option,  iter);	  final    boolean    hasOption    =    getOptions().hasOption(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
74	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().containsValue(arg))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().containsValue(arg))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().containsValue(arg))  {	  if(hasOption    ||    getOptions().containsValue(arg))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
75	[BUG]  [BUGGY]  if(hasOption  &&  opt.equals( "   "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  opt.equals( "   "))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt.equals( "   "))  {	  if(hasOption    ||    opt.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
76	[BUG]  [BUGGY]  if(hasOption  ||  opt.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  opt.equals( "- "))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.equals( "- "))  {	  if(hasOption    ||    opt.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
77	[BUG]  [BUGGY]  if(hasOption  ||  opt.equals( "_ "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  opt.equals( "_ "))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.equals( "_ "))  {	  if(hasOption    ||    opt.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
78	[BUG]  [BUGGY]  if(hasOption  ||  getOptionGroup().hasOption(option))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptionGroup().hasOption(option))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptionGroup().hasOption(option))  {	  if(hasOption    ||    getOptions().hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
79	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opts.get(hasOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  Option  group  =(OptionGroup)opts.get(hasOption);  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	Option  group  =(OptionGroup)opts.get(hasOption);	  Option    group    =(OptionGroup)opts.get(arg);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
80	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.get(hasOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  Option  group  =(OptionGroup)options.get(hasOption);  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	Option  group  =(OptionGroup)options.get(hasOption);	  Option    group    =(OptionGroup)opts.get(arg);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
81	[BUG]  [BUGGY]  Option  group  =(OptionGroup)this.opts.get(arg);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  Option  group  =(OptionGroup)this.opts.get(arg);  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	Option  group  =(OptionGroup)this.opts.get(arg);	  Option    group    =(OptionGroup)opts.get(arg);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
82	[BUG]  [BUGGY]  Option  group  =(OptionGroup)this.options.get(arg);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  Option  group  =(OptionGroup)this.options.get(arg);  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	Option  group  =(OptionGroup)this.options.get(arg);	  Option    group    =(OptionGroup)opts.get(arg);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
83	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().containsKey(arg)||  hasOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().containsKey(arg)||  hasOption)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().containsKey(arg)||  hasOption)  {	  if(hasOption    ||    getOptions().containsKey(arg)||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
84	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().containsKey(arg)&&  hasOption)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptions().containsKey(arg)&&  hasOption)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().containsKey(arg)&&  hasOption)  {	  if(hasOption    ||    getOptions().containsKey(arg)||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
85	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().containsKey(arg)||  hasOptionGroup)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptions().containsKey(arg)||  hasOptionGroup)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().containsKey(arg)||  hasOptionGroup)  {	  if(hasOption    ||    getOptions().containsKey(arg)||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
86	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(iter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(iter);  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(iter);	  boolean    hasOption    =    getOptions().hasOption(iter);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
87	[BUG]  [BUGGY]  if(hasOption  ||  getOptionGroup().containsKey(opt))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptionGroup().containsKey(opt))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptionGroup().containsKey(opt))  {	  if(hasOption    ||    getOptionGroup().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
88	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(arg  +  1);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(arg  +  1);	  boolean    hasOption    =    getOptions().hasValue(arg    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().getOption(opt)  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptions().getOption(opt)  ==  null)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().getOption(opt)  ==  null)  {	  if(hasOption    ||    getOptions().getOption(arg)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
90	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(opt);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(arg)||  getOptions().hasOption(opt);	  final    boolean    hasOption    =    getOptions().hasOption(arg)||    getOptions().hasOption(arg);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
91	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().containsKey(opt))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  getOptions().containsKey(opt))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  getOptions().containsKey(opt))  {	  if(hasOption    &&    getOptions().containsKey(arg))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
92	[BUG]  [BUGGY]  if(hasOption  &&  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  opt.isRequired())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt.isRequired())  {	  if(hasOption    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
93	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.get(arg);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  Option  group  =(OptionGroup)options.get(arg);  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	Option  group  =(OptionGroup)options.get(arg);	  Option    group    =(OptionGroup)opts.get(arg);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
94	[BUG]  [BUGGY]  final  Option  option  =  getOptions().hasOption(arg);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptions().hasOption(arg);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().hasOption(arg);	  final    Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
95	[BUG]  [BUGGY]  if(!hasOption  &&  getOptions().hasOption(opt))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(!hasOption  &&  getOptions().hasOption(opt))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(!hasOption  &&  getOptions().hasOption(opt))  {	  if(hasOption    ||    getOptions().hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
96	[BUG]  [BUGGY]  if(hasOption  &&  opt!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  opt!=  null)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt!=  null)  {	  if(hasOption    &&    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
97	[BUG]  [BUGGY]  if(hasOption  &&  opt.hasOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  opt.hasOption)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt.hasOption)  {	  if(hasOption    &&    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
98	[BUG]  [BUGGY]  if(!hasOption  &&  getOptions().containsKey(arg)||  hasOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(!hasOption  &&  getOptions().containsKey(arg)||  hasOption)  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(!hasOption  &&  getOptions().containsKey(arg)||  hasOption)  {	  if(hasOption    ||    getOptions().containsKey(arg)||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
99	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().containsKey(opt))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptions().containsKey(opt))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().containsKey(opt))  {	  if(hasOption    ||    getOptions().containsKey(option))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(options)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(options)+  1;  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(options)+  1;	  OptionGroup    group    =    getOptionGroup().getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
101	[BUG]  [BUGGY]  if(!hasOption  &&  getOptions().contains(option))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(!hasOption  &&  getOptions().contains(option))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(!hasOption  &&  getOptions().contains(option))  {	  if(hasOption    ||    getOptions().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
102	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasValue(opt,  iter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasValue(opt,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasValue(opt,  iter);	  boolean    hasOption    =    getOptions().hasValue(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
103	[BUG]  [BUGGY]  if(hasOption  ||  group.isUnknown())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  group.isUnknown())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  group.isUnknown())  {	  if(hasOption    ||    opt.isUnknown())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
104	[BUG]  [BUGGY]  if(!hasOption  &&  getOptions().containsValue(arg))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(!hasOption  &&  getOptions().containsValue(arg))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(!hasOption  &&  getOptions().containsValue(arg))  {	  if(hasOption    ||    getOptions().containsValue(arg))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
105	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(opt  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(opt  +  1);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(opt  +  1);	  boolean    hasOption    =    getOptions().hasValue(arg    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter,  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(iter,  iter);	  boolean    hasOption    =    getOptions().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
107	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(iter,  iter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(iter,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(iter,  iter);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
108	[BUG]  [BUGGY]  if(hasOption  =  getOptions().hasOption(arg))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  =  getOptions().hasOption(arg))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  =  getOptions().hasOption(arg))  {	  if(hasOption    &&    getOptions().hasOption(arg))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
109	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(options,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getOptionGroup(options,  options);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getOptionGroup(options,  options);	  OptionGroup    group    =    getOptionGroup().getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
110	[BUG]  [BUGGY]  if(hasOption  ||  opt.isUnknown()  ||  iter.hasNext())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  opt.isUnknown()  ||  iter.hasNext())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.isUnknown()  ||  iter.hasNext())  {	  if(hasOption    ||    opt.isUnknown())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
111	[BUG]  [BUGGY]  if(hasOption  &&  opt.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  &&  opt.isEmpty())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  &&  opt.isEmpty())  {	  if(hasOption    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
112	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().containsValue(option))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptions().containsValue(option))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().containsValue(option))  {	  if(hasOption    ||    getOptions().containsValue(arg))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
113	[BUG]  [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptions().hasOption(iter,  opt);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptions().hasOption(iter,  opt);	  boolean    hasOption    =    getOptions().hasOption(opt,    iter);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
114	[BUG]  [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(iter,  iter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  boolean  hasOption  =  getOptions().hasOption(iter,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  boolean  hasOption  =  getOptions().hasOption(iter,  iter);	  final    boolean    hasOption    =    getOptions().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
115	[BUG]  [BUGGY]  if(!hasOption  &&  getOptions().contains(arg))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(!hasOption  &&  getOptions().contains(arg))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(!hasOption  &&  getOptions().contains(arg))  {	  if(hasOption    &&    getOptions().contains(arg))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  final  Option  option  =  getOptions().getOption(iter,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptions().getOption(iter,  options);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptions().getOption(iter,  options);	  final    Option    option    =    getOptions().getOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
117	[BUG]  [BUGGY]  if(hasOption  ||  getOptions().containsKey(arg)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  getOptions().containsKey(arg)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  getOptions().containsKey(arg)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasOption    ||    getOptions().containsKey(arg)||    hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
118	[BUG]  [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(iter,  iter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  OptionGroup  group  =  getOptionGroup().getGroup(iter,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	OptionGroup  group  =  getOptionGroup().getGroup(iter,  iter);	  OptionGroup    group    =    getOptionGroup().getGroup(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
119	[BUG]  [BUGGY]  final  Option  option  =  getOptionGroup().getOption(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  final  Option  option  =  getOptionGroup().getOption(option);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	final  Option  option  =  getOptionGroup().getOption(option);	  final    Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
120	[BUG]  [BUGGY]  if(hasOption  ||  opt.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  opt.isEmpty())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.isEmpty())  {	  if(hasOption    ||    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
121	[BUG]  [BUGGY]  if(hasOption  ||  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  if(hasOption  ||  opt.isRequired())  {  [BUGGY]      {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	if(hasOption  ||  opt.isRequired())  {	  if(hasOption    ||    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
122	[BUG]  [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(options,  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  boolean  hasOption  =  getOptions().hasOption(arg);        [BUGGY]  boolean  hasOption  =  getOptionGroup().hasOption(options,  iter);  [BUGGY]      if  (!hasOption)  {  {  throw  new  UnrecognizedOptionException(     "Unrecognized  option:       "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);    [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	boolean  hasOption  =  getOptionGroup().hasOption(options,  iter);	  boolean    hasOption    =    getOptionGroup().hasOption(arg,    iter);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
