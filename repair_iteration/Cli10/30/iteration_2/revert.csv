projects/Cli10/src/java/org/apache/commons/cli/Parser.java238checkRequiredOptions();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(!stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=arguments.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("stopAtNonOption");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tehnicătehnicăstopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){checkRequireOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){checkTheRest();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption?getRequiredOptions():null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("stopAtNonOption");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingException(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238options.addArg(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=this.arguments.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=properties.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=this.options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=this.options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=opts.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(t,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238options.addArg(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("call");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("opt");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=options.getOptions().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=options.opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("opt").getOption("requiredOptions");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=options.options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t);if(cmd!=null){cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238ListIterator<String>iterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption?checkRequiredOptions():null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingException("");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=this.options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=this.options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(cmd,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=this.options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238iterator.remove();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){log.warning("msg.bad.required.options",str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(cmd,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingClass(cmd,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingRequiredOptions(cmd,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238log.warning("msg.bad.required.options",str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,stopAtNonOption,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,stopAtNonOption,properties);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,blockAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.throwAsIgnoredException("");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.throwAtNonOption("");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.throwInternal();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=properties.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=properties.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238ListIterator<String>iterator=options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238ListIterator<String>iterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238ListIterator<String>iterator=opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption?getRequiredOptions():options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238RequiredOptionscmd=stopAtNonOption?getRequiredOptions():null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption?getRequiredOptions():arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(str,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=opts.getOption(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(str,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=opts.getOption(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(t,iterator,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(iterator,t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(t,iterator,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(t,iterator,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){aughtExceptionHandler.handleMissingException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,stopAtNonOption,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,blockAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("call",str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("call",arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(options!=null){Optioncmd=options.getOption(t);if(cmd!=null){cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=properties.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption||stopAtNonOption){checkRequireOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){checkRequireParams();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=options.getOptionList().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=options.getOptionIterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=this.options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||eatTheRest){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){thrownewIllegalArgumentException(".");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238&&stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionsoption=options.getOption(t,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238options.getOption(t,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,arguments,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=options.options.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=options.opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=options.options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption?checkRequiredOptions():options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption?checkRequiredOptions(cmd):null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238RequiredOptionscmd=stopAtNonOption?checkRequiredOptions():null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=options.options.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(t,stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){tryFailedToParse(opt,stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){tryFailedToParse(opt,stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseOption(opt,stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=options.stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=eatTheRest;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOptions;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){aughtExceptionHandler.handleMissingArguments(cmd,stopAtNonOption);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(cmd,stopAtNonOption,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(options,cmd,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(t,cmd,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("opts").getOption("requiredOptions");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("opt",str).getOption("requiredOptions");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("stopAtNonOption",str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("stopAtNonOption"+str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseOption(opt,stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseOption(opt,stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238options.addArg(arguments[0]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238options.addArg(arguments[t]);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=this.properties.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingClass(cmd,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingClass(t,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingClass(t,cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){checkTheRest();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=opts.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(options,stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(options,stopAtNonOption){if(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt.getOptions(),stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt.getOptions(),str,stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||eatTheRest){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,iterator,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=iterator.getOption(t,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,iterator,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=arguments.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingRequiredOptions(t,cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingRequiredOptions(cmd,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingRequiredOptions(t,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingRequiredOptions(options,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(t,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(cmd,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(t,cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(options,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,iterator,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,iterator,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=iterator.getOption(t,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){aughtExceptionHandler.handleMissingException(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingException(t,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tehnicătehnicătehnicstopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tehnicătehnicstopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tehnicătehnictehnicstopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tehnicătehnicătehnstopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,str,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,str,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,argument);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=this.opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||eatTheRest){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){checkRequiredOptions(options);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,str,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,str,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){aughtExceptionHandler.handleMissingArguments(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(t,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseAndClearBuffer(opt,stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(t,stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("opts");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("opt",str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=this.opts.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=properties.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,arguments,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,arguments,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("stopAtNonOption",str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("stopAtNonOption"+str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionscmd=options.getOption(t,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(str,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(eatTheRest){checkTheRest();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption||eatTheRest){checkTheRest();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){cmd.addArg(arguments[0]);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){aughtExceptionHandler.handleMissingRequiredOptions(cmd,str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingRequiredOptions(opt,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,block);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionopt=options.getOption(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionopt=options.getOption("opt");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseOptions(opt,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("call",t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238options.addOption(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=option.getOptions().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238MutableIteratoriterator=options.getOptions(t).iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,block);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(cmd);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238t.handleMissingArguments(aughtExceptionHandler);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("opt").getOption("requiredOptions",str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,stopsAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=option.getOption(t,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=opt.arguments.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,this.options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingException(t,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingException(t,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=optionOptions.iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=opt.getOption(str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("opt",t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Log.warning("msg.bad.required.options",str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tehnică(3){log.warning("msg.bad.required.options","msg.bad.required.options");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238ListIterator<String>iterator=opts.values().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238ListIterator<String>iterator=options.keyList().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238ListIterator<String>iterator=options.options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tehnicătehnicătTheResttAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tehnicătehnicătthehnicstopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238iterator.clear();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238options.addOption(t);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,stopsAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,StopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(t,iterator,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){aughtExceptionHandler.handleMissingArguments(cmd,str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=options.options;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption||eatTheRest;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238safeTest(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("startAtNonOption");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(opt);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,eatTheRest){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,iterator){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(opt,arguments,stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingClass(cmd,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingClass(md,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238safeTest(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238safely()){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(opt,arguments,stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(opt)+stopAtNonOption?options.getOption(opt):null;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,iterator,eatTheRest);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,iterator,neededOptions);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption||eatTheRest){checkRequireOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(eatTheRest){checkRequireOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(cmd,stopAtNonOption,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,iterator,stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||stopAtNonOption){thrownewIllegalArgumentException("--");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=options.options().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Ileratoriterator=options.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("stopAtNonOptions");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){log.warning("msg.require-options",str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iteratoriterator=this.opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238iterator.setIndex(iterator.getIndex());
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238iterator.setIterator(options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||this.stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238||blockAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingRequiredOptions(md,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(!stopAtNonOption){aughtExceptionHandler.handleMissingException(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){aughtExceptionHandler.handleMissingException(t);}else{cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(t,stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseAndIgnoreWhitespace(opt,arguments[0],stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseAndIgnoreWhitespace(opt,arguments[0],stopAtNonOption){if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(!stopAtNonOption){aughtExceptionHandler.handleMissingArguments(cmd,stopAtNonOption);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){aughtExceptionHandler.handleMissingArguments(cmd,stopAtNonOption);}else{cmd.addArg(str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=stopAtNonOption?checkRequiredOptions():arguments;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,iterator,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseAndIgnoreWhitespace(opt,arguments[0],stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,str){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parseAndIgnoreWhitespace(t,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238parse(iterator,str);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,"opt");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,iterator){if(stopAtNonOption){checkRequiredOptions();}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(stopAtNonOption){tryFailedToParse(opt,stopAtNonOption);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(!stopAtNonOption){aughtExceptionHandler.handleMissingClass(cmd,str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingClass(cmd,str,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingClass(cmd,str,options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(!stopAtNonOption){aughtExceptionHandler.handleMissingArguments(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(t!=null){aughtExceptionHandler.handleMissingArguments(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(opt.isNonOption()){aughtExceptionHandler.handleMissingArguments(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt.getArgument(),str,stopAtNonOption)){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt.getArgument(),str,stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,argument);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption(t,str,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=options.options.stopAtNonOption;
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238requiredOptions=options.findOptions(stopAtNonOption);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(!stopAtNonOption){aughtExceptionHandler.handleMissingArguments(cmd,str);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238aughtExceptionHandler.handleMissingArguments(md,arguments);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption("call".equals(str));
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Iterator<String>iterator=this.opts.keySet().iterator();
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optionoption=options.getOption("stopAtNonOptions");
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,this.options);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,str);if(cmd!=null){cmd.addArg(t);}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238Optioncmd=options.getOption(t,str,iterator);
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt,stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(opt){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(cmd,stopAtNonOption)){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238tryFailedToParse(cmd,stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238if(!stopAtNonOption){aughtExceptionHandler.handleMissingException("");}
projects/Cli10/src/java/org/apache/commons/cli/Parser.java238while(stopAtNonOption){checkTheRest();}
