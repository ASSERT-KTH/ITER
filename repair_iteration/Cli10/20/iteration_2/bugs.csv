bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  option  =  options.getOption(stopAtNonOption);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  option  =  options.getOption(options,  stopAtNonOption);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  option  =  options.getOption(str);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  option  =  options.getOption(str);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  option  =  options.getOption(str,  stopAtNonOption);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  Iterator  iterator  =  tokenList.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  tokenList.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  tokenList.iterator();	      iterator.next();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  Iterator  iterator  =  tokenList.next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  tokenList.next();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  tokenList.next();	      iterator.next();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  Iterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  options.values().iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  options.values().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  Iterator  iterator  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  optionList.keySet().iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  optionList.keySet().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  arguments.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  arguments.iterator();	      Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  this.requiredOptions.iterator();	      Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  this.options.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  this.options.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  Iterator  iterator  =  optionList.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  optionList.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  optionList.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  while  (iterator.hasNext()  &&  iterator.next()  ==  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  while  (iterator.hasNext()  &&  iterator.next()  ==  null)  {  [BUGGY]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	while  (iterator.hasNext()  &&  iterator.next()  ==  null)  {	  while    (iterator.hasNext()    &&    iterator.next()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  options.values().iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  options.values().iterator();	      Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  optionList.keySet().iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  optionList.keySet().iterator();	      Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  arguments.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  arguments.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  this.options.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(stopAtNonOption);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(options,  stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(options,  stopAtNonOption);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(str);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(str);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(str,  stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(str,  stopAtNonOption);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  while  (iterator.hasNext()  &&  iterator.next())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  while  (iterator.hasNext()  &&  iterator.next())  {  [BUGGY]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	while  (iterator.hasNext()  &&  iterator.next())  {	  while    (iterator.hasNext()    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  while  (iterator.hasNext()  ||  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  while  (iterator.hasNext()  ||  iterator.hasNext())  {  [BUGGY]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	while  (iterator.hasNext()  ||  iterator.hasNext())  {	  while    (iterator.hasNext()    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  iterator  =  options.getOption(stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  iterator  =  options.getOption(stopAtNonOption);	      Option    iterator    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  iterator  =  options.getOption(str);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  iterator  =  options.getOption(str);	      Option    iterator    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  iterator  =  options.getOption(options,  stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  iterator  =  options.getOption(options,  stopAtNonOption);	      Option    iterator    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  Option  iterator  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  iterator  =  options.getOption(options);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  iterator  =  options.getOption(options);	      Option    iterator    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(getArguments(),  stopAtNonOption);	      Option    cmd    =    options.getOption(getArguments());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  iterator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(getArguments(),  iterator);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(getArguments(),  iterator);	      Option    cmd    =    options.getOption(getArguments());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  Iterator  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  opts.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  opts.iterator();	      Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  opts.keySet().iterator();	      Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(blockAtNonOption);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(blockAtNonOption);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption,  options);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(stopAtNonOption,  options);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenList);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  option  =  options.getOption(tokenList);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  option  =  options.getOption(tokenList);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  opts.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
37	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  iterator  =  options.options.keySet().iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  iterator  =  options.options.keySet().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  requiredOptions.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  optionList.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  optionList.iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  optionList.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  option  =  options.getOption(t);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  opt  =  options.getOption(opt);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  opt  =  options.getOption(opt);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Option  cmd  =  options.getOption(t);  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Option  cmd  =  options.getOption(t);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  iterator.remove();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  iterator.remove();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	iterator.remove();	      iterator.next();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();      [BUGGY]  Iterator  <  String>  iterator  =  options.getOptions().iterator();  [BUGGY]    while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	Iterator  <  String>  iterator  =  options.getOptions().iterator();	      Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
