bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Iterator  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  options.iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Iterator  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	41	None	add
2	[BUG]  [BUGGY]    Iterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  options.keySet().iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Iterator  iterator  =  options.keySet().iterator();		non-compiled	[CE]  illegal  start  of  type	41	None	add
3	[BUG]  [BUGGY]    iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    iterator.next();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    iterator.next();		non-compiled	[CE]  illegal  start  of  type	41	None	add
4	[BUG]  [BUGGY]    Option  iterator  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Option  iterator  =  options.getOption(opt);  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Option  iterator  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	41	None	add
5	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Option  option  =  options.getOption(opt);  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Option  option  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	41	None	add
6	[BUG]  [BUGGY]  while  (iterator.hasNext()  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]  while  (iterator.hasNext()  &&  iterator.hasNext())  {  [BUGGY]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	while  (iterator.hasNext()  &&  iterator.hasNext())  {	while  (iterator.hasNext())  {  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
7	[BUG]  [BUGGY]  while  (iterator.hasNext()  &&  iterator.next()!=  null)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]  while  (iterator.hasNext()  &&  iterator.next()!=  null)  {  [BUGGY]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	while  (iterator.hasNext()  &&  iterator.next()!=  null)  {	while  (iterator.hasNext())  {  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
8	[BUG]  [BUGGY]    Iterator  <  String>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  <  String>  iterator  =  options.iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Iterator  <  String>  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	41	None	add
9	[BUG]  [BUGGY]    Iterator  <  String>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  <  String>  iterator  =  options.keySet().iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Iterator  <  String>  iterator  =  options.keySet().iterator();		non-compiled	[CE]  illegal  start  of  type	41	None	add
10	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Option  cmd  =  options.getOption(opt);  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Option  cmd  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	41	None	add
11	[BUG]  [BUGGY]    Iterator  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  requiredOptions.iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Iterator  iterator  =  requiredOptions.iterator();		non-compiled	[CE]  illegal  start  of  type	41	None	add
12	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(getArguments());  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Option  cmd  =  options.getOption(getArguments());  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	    Option  cmd  =  options.getOption(getArguments());		non-compiled	[CE]  illegal  start  of  type	41	None	add
