bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  cmd.getOption(options);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  cmd.getOption(options);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(arguments);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  cmd.getOption(opt);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  cmd.getOption(opt);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(stopAtNonOption);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption( "options ");  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption( "options ");  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption( "options ");	      Option    option    =    options.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "option ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  cmd.getOption( "option ");  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  cmd.getOption( "option ");	      Option    option    =    options.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption( "opt ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption( "opt ");  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption( "opt ");	      Option    option    =    options.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption);  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption);	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  options  =  cmd.getOptions();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  options  =  cmd.getOptions();	      Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  Option  options  =  opts.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  options  =  opts.getOptions();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  options  =  opts.getOptions();	      Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  Options  options  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Options  options  =  cmd.getOptions();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Options  options  =  cmd.getOptions();	      Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  Option  options  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  options  =  opt.getOptions();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  options  =  opt.getOptions();	      Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  eatTheRest));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  eatTheRest));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  eatTheRest));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    options,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    options,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  Options  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Options  options  =  options.getOptions();  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Options  options  =  options.getOptions();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  Option  tokenList  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  tokenList  =  options.getOptions();  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  tokenList  =  options.getOptions();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  eatTheRest));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  eatTheRest));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  eatTheRest));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  null));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  null));	  List    tokenList    =    Arrays.asList(flatten(getArguments(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption),  options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption),  options);  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption),  options);	  List    tokenList    =    Arrays.asList(flatten(getArguments(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  eatTheRest));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  eatTheRest));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  eatTheRest));	  List    tokenList    =    Arrays.asList(flatten(getArguments(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  arguments,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  opts,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  opts,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(arguments,  opts,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  options,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  options,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  options,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(options,  stopAtNonOption);	      Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
28	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(str);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  cmd.getOption(str);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  cmd.getOption(str);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(t,  str);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(t,  str);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(t,  arguments);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(t,  eatTheRest);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  null);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(t,  null);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(t,  null);	      Option    option    =    options.getOption(str,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  arguments,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(str,  arguments,  null);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(str,  arguments,  null);	      Option    option    =    options.getOption(str,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(str,  null,  stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(str,  null,  stopAtNonOption);	      Option    option    =    options.getOption(str,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(str,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  cmd.getOption(str,  null);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  cmd.getOption(str,  null);	      Option    option    =    options.getOption(str,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));	      Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  Arrays.asList(flatten(getOptions(),  cmd,  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Arrays.asList(flatten(getOptions(),  cmd,  arguments,  stopAtNonOption));  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Arrays.asList(flatten(getOptions(),  cmd,  arguments,  stopAtNonOption));	      Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments,  null));  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Arrays.asList(flatten(getOptions(),  arguments,  null));	      Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  options,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  options,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  options,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    options,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  List  tokenList  =  options.asList(flatten(opts,  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  options.asList(flatten(opts,  arguments,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  options.asList(flatten(opts,  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]  List  tokenList  =  options.asList(flatten(opts,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  options.asList(flatten(opts,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  options.asList(flatten(opts,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(cmd,  stopAtNonOption);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments,  eatTheRest));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments,  eatTheRest));  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Arrays.asList(flatten(getOptions(),  arguments,  eatTheRest));	      Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));	      Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOption( "option ",  eatTheRest);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption( "option ",  eatTheRest);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption( "option ",  eatTheRest);	      Option    option    =    options.getOption(   "option   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  options,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  options,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(getArguments(),  options,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(getArguments(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  eatTheRest);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(options,  eatTheRest);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(options,  eatTheRest);	      Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(options,  arguments);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(options,  arguments);	      Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  Option  tokenList  =  options.getOptionList();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  tokenList  =  options.getOptionList();  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  tokenList  =  options.getOptionList();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  null);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(cmd,  null);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(cmd,  null);	      Option    option    =    options.getOption(str,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  str,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(options,  str,  null);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(options,  str,  null);	      Option    option    =    options.getOption(str,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(str,  arguments);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(str,  arguments);	      Option    option    =    options.getOption(str,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  null,  eatTheRest);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(str,  null,  eatTheRest);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(str,  null,  eatTheRest);	      Option    option    =    options.getOption(str,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
55	[BUG]  [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments));  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Arrays.asList(flatten(getOptions(),  arguments));	      Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  eatTheRest);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(cmd,  eatTheRest);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(cmd,  eatTheRest);	      Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(str,  stopAtNonOption);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  option  =  options.getOption(str,  eatTheRest);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption));  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	Option  option  =  options.getOption(str,  eatTheRest);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  arguments,  null));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  arguments,  null));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  arguments,  null));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(defaultOptions,  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(defaultOptions,  arguments,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(defaultOptions,  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
62	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption),  eatTheRest);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption),  eatTheRest);  [BUGGY]    arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	List  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption),  eatTheRest);	  List    tokenList    =    Arrays.asList(flatten(getArguments(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
