bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Option  opt  =  getOptions().getOption(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  final  Option  opt  =  getOptions().getOption(opt);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	final  Option  opt  =  getOptions().getOption(opt);	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =  getOptions().getOption(opt,  iter);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =  getOptions().getOption(opt,  iter);	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  if(opt.isRequired()  &&  opt.isKey())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  &&  opt.isKey())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  &&  opt.isKey())  {	  if(opt.isRequired()    ||    opt.isKey())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(opt.isRequired()  ||  opt.isValue())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  ||  opt.isValue())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  ||  opt.isValue())  {	  if(opt.isRequired()    ||    opt.isKey())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  if(opt.isRequired()  ||  opt.isValid())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  ||  opt.isValid())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  ||  opt.isValid())  {	  if(opt.isRequired()    ||    opt.isKey())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  if(opt.isRequired()  &&  opt.isPrimitive())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  &&  opt.isPrimitive())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  &&  opt.isPrimitive())  {	  if(opt.isRequired()    ||    opt.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  if(opt.isPrimitive()  ||  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isPrimitive()  ||  opt.isRequired())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isPrimitive()  ||  opt.isRequired())  {	  if(opt.isRequired()    ||    opt.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.isRequired()  ||  opt.isPrimitive())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt!=  null  ||  opt.isRequired()  ||  opt.isPrimitive())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt!=  null  ||  opt.isRequired()  ||  opt.isPrimitive())  {	  if(opt.isRequired()    ||    opt.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
9	[BUG]  [BUGGY]  if(opt!=  null  &&  opt.isRequired()  &&  opt.getKey()!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt!=  null  &&  opt.isRequired()  &&  opt.getKey()!=  null)  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt!=  null  &&  opt.isRequired()  &&  opt.getKey()!=  null)  {	  if(opt.isRequired()    &&    opt.getKey()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  if(!opt.isRequired()  &&  opt.getKey()!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!opt.isRequired()  &&  opt.getKey()!=  null)  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!opt.isRequired()  &&  opt.getKey()!=  null)  {	  if(opt.isRequired()    &&    opt.getKey()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  if(option.isRequired()  ||  opt.getKey()!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(option.isRequired()  ||  opt.getKey()!=  null)  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(option.isRequired()  ||  opt.getKey()!=  null)  {	  if(opt.isRequired()    &&    opt.getKey()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  if(opt.isRequired()  &&  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  &&  opt.isRequired())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  &&  opt.isRequired())  {	  if(opt.isRequired()    ||    opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.isRequired()  ||  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt!=  null  ||  opt.isRequired()  ||  opt.isRequired())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt!=  null  ||  opt.isRequired()  ||  opt.isRequired())  {	  if(opt.isRequired()    ||    opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  if(opt.isKey()  ||  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isKey()  ||  opt.isRequired())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isKey()  ||  opt.isRequired())  {	  if(opt.isRequired()    ||    opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  final  Option  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  final  Option  option  =(Option)opt.clone();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	final  Option  option  =(Option)opt.clone();	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =(Option)opt.clone()  :  null;  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =(Option)opt.clone()  :  null;	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  option  =(Option)opt.clone();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	option  =(Option)opt.clone();	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  if(opt.isRequired()  ||  opt.getValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  ||  opt.getValue()!=  null)  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  ||  opt.getValue()!=  null)  {	  if(opt.isRequired()    ||    opt.getKey()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]  if(opt.isRequired()  ||  opt.getKey()  ==  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  ||  opt.getKey()  ==  null)  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  ||  opt.getKey()  ==  null)  {	  if(opt.isRequired()    ||    opt.getKey()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  Option  opt  =(Option)getOptions().get(opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =(Option)getOptions().get(opt.getKey(),  iter);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =(Option)getOptions().get(opt.getKey(),  iter);	      Option    opt    =(Option)getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  Option  opt  =(Option)getOptions().get(opt.getKey()  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =(Option)getOptions().get(opt.getKey()  -  1);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =(Option)getOptions().get(opt.getKey()  -  1);	      Option    opt    =(Option)getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  Option  opt  =(Option)getOptions().get(opt.getValue());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =(Option)getOptions().get(opt.getValue());  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =(Option)getOptions().get(opt.getValue());	      Option    opt    =(Option)getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  if(!opt.isRequired()  &&  opt.getKey().equals( " "))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!opt.isRequired()  &&  opt.getKey().equals( " "))  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!opt.isRequired()  &&  opt.getKey().equals( " "))  {	  if(!opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  if(!opt.isRequired()  &&!opt.isDeclared())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!opt.isRequired()  &&!opt.isDeclared())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!opt.isRequired()  &&!opt.isDeclared())  {	  if(!opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  if(!opt.isRequired()  &&  opt.getKey().length()  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!opt.isRequired()  &&  opt.getKey().length()  >  0)  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!opt.isRequired()  &&  opt.getKey().length()  >  0)  {	  if(!opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =  getOptions().getOption(arg,  iter);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =  getOptions().getOption(arg,  iter);	      Option    opt    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =  getOptions().getOption(option);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =  getOptions().getOption(option);	      Option    opt    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  final  Option  opt  =  getOptions().getOption(arg);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  final  Option  opt  =  getOptions().getOption(arg);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	final  Option  opt  =  getOptions().getOption(arg);	      Option    opt    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  final  Option  opt  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  final  Option  opt  =(Option)opt.clone();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	final  Option  opt  =(Option)opt.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =(Option)opt.clone()  :  null;  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =(Option)opt.clone()  :  null;	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  Option  opt  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =(Option)options.clone();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =(Option)options.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  Option  option  =(Option)opt.getKey();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =(Option)opt.getKey();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =(Option)opt.getKey();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue(),  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =(Option)opt.getValue(),  iter);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =(Option)opt.getValue(),  iter);	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getKey(),  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().get(opt.getKey(),  iter);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().get(opt.getKey(),  iter);	      Option    group    =    getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getKey()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().get(opt.getKey()  -  1);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().get(opt.getKey()  -  1);	      Option    group    =    getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt.getValue());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().get(opt.getValue());  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().get(opt.getValue());	      Option    group    =    getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
37	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().get(opt);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().get(opt);	      Option    group    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  final  Option  group  =  getOptions().getOption(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  final  Option  group  =  getOptions().getOption(opt);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	final  Option  group  =  getOptions().getOption(opt);	      Option    group    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =(Option)opt.getValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  cmd  =(Option)opt.getValue();  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  cmd  =(Option)opt.getValue();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  cmd  =(Option)opt.clone();  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  cmd  =(Option)opt.clone();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  if(opt.getKey()!=  null)  {  for(Option  option  :  opt.getOptions())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.getKey()!=  null)  {  for(Option  option  :  opt.getOptions())  {  requiredOptions.add(option);  }  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.getKey()!=  null)  {  for(Option  option  :  opt.getOptions())  {  requiredOptions.add(option);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  Option  group  =  getOptions().getGroup(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().getGroup(opt);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().getGroup(opt);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  final  Option  group  =  getOptions().getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  final  Option  group  =  getOptions().getOptionGroup(opt);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	final  Option  group  =  getOptions().getOptionGroup(opt);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  if(opt!=  null  &&!opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt!=  null  &&!opt.isRequired())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt!=  null  &&!opt.isRequired())  {	  if(!opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  if(!opt.isRequired()  &&!opt.hasKey())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!opt.isRequired()  &&!opt.hasKey())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!opt.isRequired()  &&!opt.hasKey())  {	  if(!opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  Option  option  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =(Option)options.clone();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =(Option)options.clone();	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =(Option)option.clone();	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  if(option.isRequired()  ||  opt.isPrimitive())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(option.isRequired()  ||  opt.isPrimitive())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(option.isRequired()  ||  opt.isPrimitive())  {	  if(opt.isRequired()    ||    opt.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOptions().get(opt.getKey());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =(Option)opt.getOptions().get(opt.getKey());  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =(Option)opt.getOptions().get(opt.getKey());	      Option    opt    =(Option)getOptions().get(opt.getKey());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
50	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =  getOptions().getOptionGroup(opt);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =  getOptions().getOptionGroup(opt);	      Option    opt    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOptionGroup(arg);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =  getOptions().getOptionGroup(arg);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =  getOptions().getOptionGroup(arg);	      Option    opt    =    getOptions().getOption(arg);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  if(opt.isRequired()  ||  opt.isPrivate())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  ||  opt.isPrivate())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  ||  opt.isPrivate())  {	  if(opt.isRequired()    ||    opt.isKey())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  if(opt.isRequired()  ||  opt.isOptionalKey())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  ||  opt.isOptionalKey())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  ||  opt.isOptionalKey())  {	  if(opt.isRequired()    ||    opt.isKey())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
54	[BUG]  [BUGGY]  Option  option  =  opt.getOption();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =  opt.getOption();  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =  opt.getOption();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
55	[BUG]  [BUGGY]  if(option.isRequired()  ||  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(option.isRequired()  ||  opt.isRequired())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(option.isRequired()  ||  opt.isRequired())  {	  if(opt.isRequired()    ||    opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =(Option)opt.getOption();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =(Option)opt.getOption();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  Option  opt  =(Option)opts.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =(Option)opts.clone();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =(Option)opts.clone();	      Option    opt    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(arg);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().getOptionGroup(arg);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().getOptionGroup(arg);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
59	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
60	[BUG]  [BUGGY]  Option  group  =  getOptions().getOption(arg);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().getOption(arg);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().getOption(arg);	      Option    group    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  Option  group  =  getOptions().getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  group  =  getOptions().getOption(opt,  iter);  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  group  =  getOptions().getOption(opt,  iter);	      Option    group    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
62	[BUG]  [BUGGY]  if(!opt.isRequired()  &&!opt.isKey())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!opt.isRequired()  &&!opt.isKey())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!opt.isRequired()  &&!opt.isKey())  {	  if(!opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
63	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey());  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  opt  =  getOptions().getOption(opt.getKey());	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  Option  option  =(Option)opts.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =(Option)opts.clone();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =(Option)opts.clone();	      Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  OptionGroup  group  =  getOptions().getGroup(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  OptionGroup  group  =  getOptions().getGroup(opt);  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	OptionGroup  group  =  getOptions().getGroup(opt);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
66	[BUG]  [BUGGY]  if(!hasOption  &&  opt.isRequired()  ||  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!hasOption  &&  opt.isRequired()  ||  opt.isRequired())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!hasOption  &&  opt.isRequired()  ||  opt.isRequired())  {	  if(opt.isRequired()    ||    opt.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  if(!hasOption  &&  opt.isRequired()  ||  opt.isKey())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!hasOption  &&  opt.isRequired()  ||  opt.isKey())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!hasOption  &&  opt.isRequired()  ||  opt.isKey())  {	  if(opt.isRequired()    ||    opt.isKey())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  if(opt.isRequired()  ||  opt.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(opt.isRequired()  ||  opt.isEmpty())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(opt.isRequired()  ||  opt.isEmpty())  {	  if(opt.isRequired()    ||    opt.isKey())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
69	[BUG]  [BUGGY]  if(!hasOption  &&  opt.isRequired()  &&  opt.getKey()!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!hasOption  &&  opt.isRequired()  &&  opt.getKey()!=  null)  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!hasOption  &&  opt.isRequired()  &&  opt.getKey()!=  null)  {	  if(opt.isRequired()    &&    opt.getKey()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  Option  option  =(Option)option.getKey();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  Option  option  =(Option)option.getKey();  [BUGGY]    if  (opt.isRequired())  {  {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	Option  option  =(Option)option.getKey();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  if(!hasOption  &&  opt.isRequired()  ||  opt.isPrimitive())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  throw  new  UnrecognizedOptionException(   "Unrecognized  option:     "  +  arg);  }  final  Option  opt  =  getOptions().getOption(arg);      [BUGGY]  if(!hasOption  &&  opt.isRequired()  ||  opt.isPrimitive())  {  [BUGGY]    {  getRequiredOptions().remove(opt.getKey());  }    if  (getOptions().getOptionGroup(opt)  !=  null)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	if(!hasOption  &&  opt.isRequired()  ||  opt.isPrimitive())  {	  if(opt.isRequired()    ||    opt.isPrimitive())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
