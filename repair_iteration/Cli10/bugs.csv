bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return cmd; [FE] AssertionFailedError [CONTEXT] { cmd.addArg(str); } } } } processProperties(properties); checkRequiredOptions(); [BUGGY] return cmd; [BUGGY] } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { cmd.addArg(str); } } } } processProperties(properties); checkRequiredOptions(); [BUGGY] [BUGGY] return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	add	
3	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT]  while (iter.hasNext()) { buff.append(iter.next()); buff.append(", "); } throw new MissingOptionException(buff.substring(0, buff.length() - 2)); } [BUGGY] } [BUGGY]  [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  while (iter.hasNext()) { buff.append(iter.next()); buff.append(", "); } throw new MissingOptionException(buff.substring(0, buff.length() - 2)); } [BUGGY] [BUGGY] } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	add	
5	[BUG] [BUGGY] getRequiredOptions().remove(opt.getKey()); [FE] AssertionFailedError [CONTEXT] + arg); }  final Option opt = getOptions().getOption(arg);   if (opt.isRequired()) { [BUGGY] getRequiredOptions().remove(opt.getKey()); [BUGGY] }   if (getOptions().getOptionGroup(opt) != null) { OptionGroup group = getOptions().getOptionGroup(opt); if (group.isRequired()) { [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] + arg); }  final Option opt = getOptions().getOption(arg);   if (opt.isRequired()) { [BUGGY] [BUGGY] getRequiredOptions().remove(opt.getKey()); }   if (getOptions().getOptionGroup(opt) != null) { OptionGroup group = getOptions().getOptionGroup(opt); if (group.isRequired()) { [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	add	
8	[BUG] [BUGGY] this.options = options; [FE] AssertionFailedError [CONTEXT] protected void setOptions(final Options options) { [BUGGY] this.options = options; [BUGGY] this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	45	45	1	replace	
9	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setOptions(final Options options) { [BUGGY] [BUGGY] this.options = options; this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	45	45	1	add	
10	[BUG] [BUGGY] this.requiredOptions = options.getRequiredOptions(); [FE] AssertionFailedError [CONTEXT] protected void setOptions(final Options options) { this.options = options; [BUGGY] this.requiredOptions = options.getRequiredOptions(); [BUGGY] } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	46	46	1	replace	
11	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setOptions(final Options options) { this.options = options; [BUGGY] [BUGGY] this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	46	46	1	add	
12	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected void setOptions(final Options options) { this.options = options; this.requiredOptions = options.getRequiredOptions(); [BUGGY] } [BUGGY]  [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	47	47	1	replace	
13	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setOptions(final Options options) { this.options = options; this.requiredOptions = options.getRequiredOptions(); [BUGGY] [BUGGY] } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	47	47	1	add	
14	[BUG] [BUGGY] return options; [FE] AssertionFailedError [CONTEXT] protected Options getOptions() { [BUGGY] return options; [BUGGY] } [CLASS] Parser [METHOD] getOptions [RETURN_TYPE] Options  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	50	50	1	replace	
15	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected Options getOptions() { [BUGGY] [BUGGY] return options; } [CLASS] Parser [METHOD] getOptions [RETURN_TYPE] Options  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	50	50	1	add	
16	[BUG] [BUGGY] return requiredOptions; [FE] AssertionFailedError [CONTEXT] protected List getRequiredOptions() { [BUGGY] return requiredOptions; [BUGGY] } [CLASS] Parser [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	54	54	1	replace	
17	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected List getRequiredOptions() { [BUGGY] [BUGGY] return requiredOptions; } [CLASS] Parser [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	54	54	1	add	
18	[BUG] [BUGGY] return parse(options, arguments, null, false); [FE] AssertionFailedError [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] return parse(options, arguments, null, false); [BUGGY] } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	85	85	1	replace	
19	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] [BUGGY] return parse(options, arguments, null, false); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	85	85	1	add	
20	[BUG] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [FE] AssertionFailedError [CONTEXT] {  [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	
21	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {  [BUGGY] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	add	
22	[BUG] [BUGGY] Option opt = (Option) it.next(); [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); [BUGGY] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false;  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	
23	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false;  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	add	
24	[BUG] [BUGGY] opt.clearValues(); [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); [BUGGY] opt.clearValues(); [BUGGY] }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	replace	
25	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); [BUGGY] [BUGGY] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	151	151	1	add	
26	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); [BUGGY] } [BUGGY]   setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	152	152	1	replace	
27	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); [BUGGY] [BUGGY] }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	152	152	1	add	
28	[BUG] [BUGGY] setOptions(options); [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  [BUGGY] setOptions(options); [BUGGY]  cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	155	155	1	replace	
29	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  [BUGGY] [BUGGY] setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	155	155	1	add	
30	[BUG] [BUGGY] cmd = new CommandLine(); [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); [BUGGY] cmd = new CommandLine(); [BUGGY]  boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	157	157	1	replace	
31	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); [BUGGY] [BUGGY] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	157	157	1	add	
32	[BUG] [BUGGY] boolean eatTheRest = false; [FE] AssertionFailedError [CONTEXT] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); [BUGGY] boolean eatTheRest = false; [BUGGY]  if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	159	159	1	replace	
33	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); [BUGGY] [BUGGY] boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	159	159	1	add	
34	[BUG] [BUGGY] if (arguments == null) { [FE] AssertionFailedError [CONTEXT] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [BUGGY] if (arguments == null)  { [BUGGY] { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	161	162	1	replace	
35	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [BUGGY] [BUGGY] if (arguments == null)  { { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	161	162	1	add	
36	[BUG] [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),   arguments,      stopAtNonOption)); [FE] AssertionFailedError [CONTEXT] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption)); [BUGGY] arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	replace	
37	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } [BUGGY] [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption)); arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	166	168	1	add	
38	[BUG] [BUGGY] ListIterator iterator = tokenList.listIterator(); [FE] AssertionFailedError [CONTEXT] if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); [BUGGY] ListIterator iterator = tokenList.listIterator(); [BUGGY]   while (iterator.hasNext()) { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	170	170	1	replace	
39	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); [BUGGY] [BUGGY] ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	170	170	1	add	
40	[BUG] [BUGGY] while (iterator.hasNext()) { [FE] AssertionFailedError [CONTEXT] arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [BUGGY] while (iterator.hasNext())  { [BUGGY] { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }   [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	replace	
41	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [BUGGY] [BUGGY] while (iterator.hasNext())  { { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }   [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	173	174	1	add	
42	[BUG] [BUGGY] String t = (String) iterator.next(); [FE] AssertionFailedError [CONTEXT] List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { [BUGGY] String t = (String) iterator.next(); [BUGGY]   if ("--".equals(t)) { eatTheRest = true; }  else if ("-".equals(t)) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	replace	
43	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { [BUGGY] [BUGGY] String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }  else if ("-".equals(t)) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	175	175	1	add	
44	[BUG] [BUGGY] if ("--".equals(t)) { [FE] AssertionFailedError [CONTEXT] while (iterator.hasNext()) { String t = (String) iterator.next();  [BUGGY] if ("--".equals(t))   { [BUGGY] { eatTheRest = true; }  else if ("-".equals(t)) { if (stopAtNonOption) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	178	179	1	replace	
45	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] while (iterator.hasNext()) { String t = (String) iterator.next();  [BUGGY] [BUGGY] if ("--".equals(t))   { { eatTheRest = true; }  else if ("-".equals(t)) { if (stopAtNonOption) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	178	179	1	add	
46	[BUG] [BUGGY] else if ("-".equals(t)) { [FE] AssertionFailedError [CONTEXT] { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }  [BUGGY] else if ("-".equals(t))   { [BUGGY] { if (stopAtNonOption) { eatTheRest = true; } else { cmd.addArg(t); } } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	
47	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }  [BUGGY] [BUGGY] else if ("-".equals(t))   { { if (stopAtNonOption) { eatTheRest = true; } else { cmd.addArg(t); } } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	add	
48	[BUG] [BUGGY] else if (t.startsWith("-")) { [FE] AssertionFailedError [CONTEXT] { eatTheRest = true; } else { cmd.addArg(t); } }  [BUGGY] else if (t.startsWith("-"))   { [BUGGY] { if (stopAtNonOption && !getOptions().hasOption(t)) { eatTheRest = true; cmd.addArg(t); } else { processOption(t, iterator); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	197	198	1	replace	
49	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { eatTheRest = true; } else { cmd.addArg(t); } }  [BUGGY] [BUGGY] else if (t.startsWith("-"))   { { if (stopAtNonOption && !getOptions().hasOption(t)) { eatTheRest = true; cmd.addArg(t); } else { processOption(t, iterator); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	197	198	1	add	
50	[BUG] [BUGGY] if (stopAtNonOption && !getOptions().hasOption(t)) { [FE] AssertionFailedError [CONTEXT] } else { cmd.addArg(t); } }  else if (t.startsWith("-")) { [BUGGY] if (stopAtNonOption && !getOptions().hasOption(t))    { [BUGGY] { eatTheRest = true; cmd.addArg(t); } else { processOption(t, iterator); } }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	199	200	1	replace	
51	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else { cmd.addArg(t); } }  else if (t.startsWith("-")) { [BUGGY] [BUGGY] if (stopAtNonOption && !getOptions().hasOption(t))    { { eatTheRest = true; cmd.addArg(t); } else { processOption(t, iterator); } }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	199	200	1	add	
52	[BUG] [BUGGY] processOption(t, iterator); [FE] AssertionFailedError [CONTEXT] else if (t.startsWith("-")) { if (stopAtNonOption && !getOptions().hasOption(t)) { eatTheRest = true; cmd.addArg(t); } else { [BUGGY] processOption(t, iterator); [BUGGY] } }  else { cmd.addArg(t); if (stopAtNonOption) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	replace	
53	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] else if (t.startsWith("-")) { if (stopAtNonOption && !getOptions().hasOption(t)) { eatTheRest = true; cmd.addArg(t); } else { [BUGGY] [BUGGY] processOption(t, iterator); } }  else { cmd.addArg(t); if (stopAtNonOption) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	206	206	1	add	
54	[BUG] [BUGGY] if (eatTheRest) { [FE] AssertionFailedError [CONTEXT] { cmd.addArg(t); if (stopAtNonOption) { eatTheRest = true; } }  [BUGGY] if (eatTheRest)   { [BUGGY] { while (iterator.hasNext()) { String str = (String) iterator.next();  if (!"--".equals(str)) { cmd.addArg(str); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	222	223	1	replace	
55	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { cmd.addArg(t); if (stopAtNonOption) { eatTheRest = true; } }  [BUGGY] [BUGGY] if (eatTheRest)   { { while (iterator.hasNext()) { String str = (String) iterator.next();  if (!"--".equals(str)) { cmd.addArg(str); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	222	223	1	add	
56	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] { String str = (String) iterator.next();  if (!"--".equals(str)) { cmd.addArg(str); } } } [BUGGY] } [BUGGY]  processProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	
57	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { String str = (String) iterator.next();  if (!"--".equals(str)) { cmd.addArg(str); } } } [BUGGY] [BUGGY] } processProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	add	
58	[BUG] [BUGGY] processProperties(properties); [FE] AssertionFailedError [CONTEXT]  if (!"--".equals(str)) { cmd.addArg(str); } } } } [BUGGY] processProperties(properties); [BUGGY] checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	
59	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (!"--".equals(str)) { cmd.addArg(str); } } } } [BUGGY] [BUGGY] processProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	add	
60	[BUG] [BUGGY] checkRequiredOptions(); [FE] AssertionFailedError [CONTEXT]  if (!"--".equals(str)) { cmd.addArg(str); } } } } processProperties(properties); [BUGGY] checkRequiredOptions(); [BUGGY]  return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	238	238	1	replace	
61	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (!"--".equals(str)) { cmd.addArg(str); } } } } processProperties(properties); [BUGGY] [BUGGY] checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	238	238	1	add	
62	[BUG] [BUGGY] if (properties == null) { [FE] AssertionFailedError [CONTEXT] { [BUGGY] if (properties == null)  { [BUGGY] { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { [CLASS] Parser [METHOD] processProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options opts CommandLine cmd Enumeration e RuntimeException exp boolean List requiredOptions tokenList Option opt String option value Properties properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	replace	
63	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { [BUGGY] [BUGGY] if (properties == null)  { { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { [CLASS] Parser [METHOD] processProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options opts CommandLine cmd Enumeration e RuntimeException exp boolean List requiredOptions tokenList Option opt String option value Properties properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	251	252	1	add	
64	[BUG] [BUGGY] return; [FE] AssertionFailedError [CONTEXT] { if (properties == null) { [BUGGY] return; [BUGGY] } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { Option opt = getOptions().getOption(option);  [CLASS] Parser [METHOD] processProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options opts CommandLine cmd Enumeration e RuntimeException exp boolean List requiredOptions tokenList Option opt String option value Properties properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	253	253	1	replace	
65	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { if (properties == null) { [BUGGY] [BUGGY] return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { Option opt = getOptions().getOption(option);  [CLASS] Parser [METHOD] processProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options opts CommandLine cmd Enumeration e RuntimeException exp boolean List requiredOptions tokenList Option opt String option value Properties properties  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	253	253	1	add	
66	[BUG] [BUGGY] if (getRequiredOptions().size() > 0) { [FE] AssertionFailedError [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   [BUGGY] if (getRequiredOptions().size() > 0)  { [BUGGY] { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	308	309	1	replace	
67	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   [BUGGY] [BUGGY] if (getRequiredOptions().size() > 0)  { { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	308	309	1	add	
68	[BUG] [BUGGY] boolean hasOption = getOptions().hasOption(arg); [FE] AssertionFailedError [CONTEXT] { [BUGGY] boolean hasOption = getOptions().hasOption(arg); [BUGGY]   if (!hasOption) { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg); [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	388	388	1	replace	
69	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { [BUGGY] [BUGGY] boolean hasOption = getOptions().hasOption(arg);  if (!hasOption) { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg); [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	388	388	1	add	
70	[BUG] [BUGGY] if (!hasOption) { [FE] AssertionFailedError [CONTEXT] { boolean hasOption = getOptions().hasOption(arg);  [BUGGY] if (!hasOption)  { [BUGGY] { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg);    [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	replace	
71	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { boolean hasOption = getOptions().hasOption(arg);  [BUGGY] [BUGGY] if (!hasOption)  { { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg);    [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	391	392	1	add	
72	[BUG] [BUGGY] final Option opt = getOptions().getOption(arg); [FE] AssertionFailedError [CONTEXT] boolean hasOption = getOptions().hasOption(arg);  if (!hasOption) { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  [BUGGY] final Option opt = getOptions().getOption(arg); [BUGGY]    if (opt.isRequired()) { getRequiredOptions().remove(opt.getKey()); }    [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	398	398	1	replace	
73	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] boolean hasOption = getOptions().hasOption(arg);  if (!hasOption) { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  [BUGGY] [BUGGY] final Option opt = getOptions().getOption(arg);   if (opt.isRequired()) { getRequiredOptions().remove(opt.getKey()); }    [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	398	398	1	add	
74	[BUG] [BUGGY] if (opt.isRequired()) { [FE] AssertionFailedError [CONTEXT] { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg);   [BUGGY] if (opt.isRequired())  { [BUGGY] { getRequiredOptions().remove(opt.getKey()); }   if (getOptions().getOptionGroup(opt) != null) { OptionGroup group = getOptions().getOptionGroup(opt);  [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	replace	
75	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg);   [BUGGY] [BUGGY] if (opt.isRequired())  { { getRequiredOptions().remove(opt.getKey()); }   if (getOptions().getOptionGroup(opt) != null) { OptionGroup group = getOptions().getOptionGroup(opt);  [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	402	403	1	add	
76	[BUG] [BUGGY] if (getOptions().getOptionGroup(opt) != null) { [FE] AssertionFailedError [CONTEXT]   if (opt.isRequired()) { getRequiredOptions().remove(opt.getKey()); }   [BUGGY] if (getOptions().getOptionGroup(opt) != null)  { [BUGGY] { OptionGroup group = getOptions().getOptionGroup(opt); if (group.isRequired()) { getRequiredOptions().remove(group); } group.setSelected(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	
77	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   if (opt.isRequired()) { getRequiredOptions().remove(opt.getKey()); }   [BUGGY] [BUGGY] if (getOptions().getOptionGroup(opt) != null)  { { OptionGroup group = getOptions().getOptionGroup(opt); if (group.isRequired()) { getRequiredOptions().remove(group); } group.setSelected(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	add	
78	[BUG] [BUGGY] if (opt.hasArg()) { [FE] AssertionFailedError [CONTEXT] if (group.isRequired()) { getRequiredOptions().remove(group); } group.setSelected(opt); }  [BUGGY] if (opt.hasArg())  { [BUGGY] { processArgs(opt, iter); }   cmd.addOption(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	422	423	1	replace	
79	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (group.isRequired()) { getRequiredOptions().remove(group); } group.setSelected(opt); }  [BUGGY] [BUGGY] if (opt.hasArg())  { { processArgs(opt, iter); }   cmd.addOption(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	422	423	1	add	
80	[BUG] [BUGGY] cmd.addOption(opt); [FE] AssertionFailedError [CONTEXT] }  if (opt.hasArg()) { processArgs(opt, iter); }   [BUGGY] cmd.addOption(opt); [BUGGY] } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	429	429	1	replace	
81	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }  if (opt.hasArg()) { processArgs(opt, iter); }   [BUGGY] [BUGGY] cmd.addOption(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	429	429	1	add	
82	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT]  if (opt.hasArg()) { processArgs(opt, iter); }   cmd.addOption(opt); [BUGGY] } [BUGGY]  [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	430	430	1	replace	
83	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (opt.hasArg()) { processArgs(opt, iter); }   cmd.addOption(opt); [BUGGY] [BUGGY] } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	430	430	1	add	
