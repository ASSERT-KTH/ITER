bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  String>  iterator  =  opts.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2	[BUG]  [BUGGY]  String  str  =(String)iterator.getKey();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  String  str  =(String)iterator.getKey();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	String  str  =(String)iterator.getKey();	  String    str    =(String)iterator.getValue();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
3	[BUG]  [BUGGY]  String  str  =(String)iterator.remove();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  String  str  =(String)iterator.remove();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	String  str  =(String)iterator.remove();	  String    str    =(String)iterator.getValue();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
4	[BUG]  [BUGGY]  else  if(t.equals( "-- ")||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-- ")||!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-- ")||!stopAtNonOption)  {	  else    if(   "--   ".equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]  parseArguments(t,  iterator.next());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parseArguments(t,  iterator.next());  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parseArguments(t,  iterator.next());	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
6	[BUG]  [BUGGY]  parseArguments(iterator.next());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parseArguments(iterator.next());  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parseArguments(iterator.next());	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
7	[BUG]  [BUGGY]  iterator.remove();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  iterator.remove();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	iterator.remove();	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
8	[BUG]  [BUGGY]  options.addArg(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  options.addArg(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	options.addArg(t);	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
9	[BUG]  [BUGGY]  else  if(cmd!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(cmd!=  null)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(cmd!=  null)  {	  else    if(cmd    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  else  if(cmd  ==  null  ||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(cmd  ==  null  ||!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(cmd  ==  null  ||!stopAtNonOption)  {	  else    if(cmd    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  try  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  try  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	try  {	  try    {    [Delete]    catch(Throwable    t)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
12	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  if(t.length()  ==  0)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption)  {  if(t.length()  ==  0)  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption)  {  if(t.length()  ==  0)  {  cmd.addArg(t);  }	  try    {    [Delete]    catch(Throwable    t)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
13	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  try  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  try  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  try  {	  try    {    [Delete]    catch(Throwable    t)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
14	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {	  try    {    [Delete]    catch(Throwable    t)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
15	[BUG]  [BUGGY]  Iterator  it  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  this.arguments.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  this.arguments.iterator();	  Iterator    it    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
16	[BUG]  [BUGGY]  else  if(t  ==  null  ||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  ==  null  ||  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ==  null  ||  stopAtNonOption)  {	  else    if(t    ==    null    ||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  else  if(t!=  null  ||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t!=  null  ||!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t!=  null  ||!stopAtNonOption)  {	  else    if(t    ==    null    ||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  iterator  =  properties.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  iterator  =  properties.iterator();	  Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
19	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  iterator  =  this.opts.iterator();	  Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
20	[BUG]  [BUGGY]  (0  <  <  (size()  -  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (size()  -  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (size()  -  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  >=    (0    <    <    (size()    -    1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
21	[BUG]  [BUGGY]  (0  <  <  (size()))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (size()))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (size()))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  >=    (0    <    <    (size()    -    1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
22	[BUG]  [BUGGY]  (1  <  <  (size()  -  1)))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (1  <  <  (size()  -  1)))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(1  <  <  (size()  -  1)))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  >=    (0    <    <    (size()    -    1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
23	[BUG]  [BUGGY]  (0  <  <  size()))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  size()))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  size()))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  >=    (0    <    <    (size()    -    1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
24	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(cmd))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(cmd))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtil.isEmpty(cmd))  {	  else    if(!stopAtNonOption    &&!StringUtil.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
25	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(str))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtil.isEmpty(str))  {	  else    if(!stopAtNonOption    &&!StringUtil.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
26	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!StringUtil.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  &&!StringUtil.isEmpty(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  &&!StringUtil.isEmpty(t))  {	  else    if(!stopAtNonOption    &&!StringUtil.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
27	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&  cmd.contains(t))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&  cmd.contains(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&  cmd.contains(t))  {	  else    if(!stopAtNonOption    &&!StringUtil.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
28	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  iterator  =  this.options.iterator();  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  iterator  =  this.options.iterator();	  Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
29	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  iterator  =  arguments.iterator();  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  iterator  =  arguments.iterator();	  Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
30	[BUG]  [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  iterator  =  options.keySet().iterator();	  Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
31	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  cmd);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArguments(t,  cmd);	  aughtExceptionHandler.handleMissingArguments(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  arguments,  stopAtNonOption);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(t,    arguments);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  cmd.addArg(t,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  cmd.addArg(t,  str);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	cmd.addArg(t,  str);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
34	[BUG]  [BUGGY]  cmd.addArg(str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  cmd.addArg(str);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	cmd.addArg(str);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
35	[BUG]  [BUGGY]  cmd.addArg(t,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  cmd.addArg(t,  arguments);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	cmd.addArg(t,  arguments);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
36	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isBlank(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isBlank(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtils.isBlank(t))  {	  else    if(!stopAtNonOption    &&!StringUtils.isNotEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
37	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isNotEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isNotEmpty(str))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtils.isNotEmpty(str))  {	  else    if(!stopAtNonOption    &&!StringUtils.isNotEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  &&!StringUtils.isEmpty(t))  {	  else    if(!stopAtNonOption    &&!StringUtils.isNotEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  cmd.addArg(t);  }	  ceilingOptions.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
40	[BUG]  [BUGGY]  if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }	  ceilingOptions.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
41	[BUG]  [BUGGY]  if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  defaultOptions.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  defaultOptions.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  defaultOptions.addArg(t);  }	  ceilingOptions.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
42	[BUG]  [BUGGY]  if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  requiredOptions.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  requiredOptions.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(stopAtNonOption)  {  ceilingOptions.addArg(t);  }  else  {  requiredOptions.addArg(t);  }	  ceilingOptions.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
43	[BUG]  [BUGGY]  else  if(t.equals( "-- ")||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-- ")||  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-- ")||  stopAtNonOption)  {	  else    if(   "--   ".equals(t)||    stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
44	[BUG]  [BUGGY]  else  if(! "-- ".equals(t)||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(! "-- ".equals(t)||  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(! "-- ".equals(t)||  stopAtNonOption)  {	  else    if(   "--   ".equals(t)||    stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
45	[BUG]  [BUGGY]  Option  cmd  =  iterator.getIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  iterator.getIterator();  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  iterator.getIterator();	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
46	[BUG]  [BUGGY]  Option  cmd  =  iterator.getValue();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  iterator.getValue();  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  iterator.getValue();	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  iterator  =  opts.values().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  iterator  =  opts.values().iterator();	  Iterator    <    Option>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
48	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	||  stopAtNonOption)  {  eatTheRest  =  false;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
49	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  ||  stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	||  stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
50	[BUG]  [BUGGY]  &&  stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  &&  stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	&&  stopAtNonOption)  {  eatTheRest  =  true;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
51	[BUG]  [BUGGY]  else  if(t.equals( "-stopAtNonOption))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-stopAtNonOption))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-stopAtNonOption))  {	  else    if(   "-stopAtNonOption       ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
52	[BUG]  [BUGGY]  else  if( "-stopAtNonOption   ".equals(t)||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if( "-stopAtNonOption   ".equals(t)||  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "-stopAtNonOption   ".equals(t)||  stopAtNonOption)  {	  else    if(   "-stopAtNonOption       ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
53	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!options.contains(t))  {  try  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!options.contains(t))  {  try  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!options.contains(t))  {  try  {	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
54	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!opts.contains(t))  {  try  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!opts.contains(t))  {  try  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!opts.contains(t))  {  try  {	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
55	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!options.isEmpty())  {  try  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!options.isEmpty())  {  try  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!options.isEmpty())  {  try  {	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
56	[BUG]  [BUGGY]  try  ==  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  try  ==  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	try  ==	  try    {    [Delete]    catch(Throwable    t)    {    if(stopAtNonOption)    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
57	[BUG]  [BUGGY]  tries  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  tries  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	tries  {	  try    {    [Delete]    catch(Throwable    t)    {    if(stopAtNonOption)    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
58	[BUG]  [BUGGY]  options.Option  cmd  =(Option)iterator.getObject();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  options.Option  cmd  =(Option)iterator.getObject();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	options.Option  cmd  =(Option)iterator.getObject();	  Option    cmd    =(Option)iterator.getObject();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(t,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  iterator.getOption(t,  options);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  iterator.getOption(t,  options);	  Option    cmd    =    options.getOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
60	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  iterator,  arguments);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  iterator,  arguments);	  Option    cmd    =    options.getOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
61	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  iterator,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  iterator,  str);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  iterator,  str);	  Option    cmd    =    options.getOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
62	[BUG]  [BUGGY]  (0  <  <  (size()  -  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (size()  -  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (size()  -  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (size()    -    1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
63	[BUG]  [BUGGY]  (0  <  <  (size()))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (size()))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (size()))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (size()    -    1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
64	[BUG]  [BUGGY]  (1  <  <  (size()  -  1)))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (1  <  <  (size()  -  1)))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(1  <  <  (size()  -  1)))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (size()    -    1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
65	[BUG]  [BUGGY]  (size()  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (size()  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(size()  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (size()    -    1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
66	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||  str.equals(t))  {	  else    if(stopAtNonOption    ||       "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
67	[BUG]  [BUGGY]  else  if(stopAtNonOption  && "--   ".equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  && "--   ".equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  && "--   ".equals(t))  {	  else    if(stopAtNonOption    ||       "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
68	[BUG]  [BUGGY]  (0  <  <  1))  {  eattheRest  =  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1))  {  eattheRest  =  false;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1))  {  eattheRest  =  false;  }	  ==    (0    <    <    (1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
69	[BUG]  [BUGGY]  (0  <  <  1))  {  eattheRest  =  false;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1))  {  eattheRest  =  false;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1))  {  eattheRest  =  false;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
70	[BUG]  [BUGGY]  (0  <  <  1))  {  eatTheRest  =  false;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1))  {  eatTheRest  =  false;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1))  {  eatTheRest  =  false;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
71	[BUG]  [BUGGY]  (0  <  <  2)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  2)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  2)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
72	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  str.equals(t))  {	  else    if(!stopAtNonOption    &&   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
73	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[t].equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[t].equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[t].equals(t))  {	  else    if(!stopAtNonOption    &&   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
74	[BUG]  [BUGGY]  (0  <  <  1))  {  eatTheRest  =  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1))  {  eatTheRest  =  false;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1))  {  eatTheRest  =  false;  }	  ==    (0    <    <    (1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
75	[BUG]  [BUGGY]  (0  <  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
76	[BUG]  [BUGGY]  (0  <  <  2)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  2)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  2)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
77	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!cmd.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!cmd.isEmpty())  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!cmd.isEmpty())  {	  try    {    [Delete]    catch(Throwable    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
78	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  cmd.contains(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&  cmd.contains(t))  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&  cmd.contains(t))  {	  try    {    [Delete]    catch(Throwable    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
79	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!cmd.isEmpty())  {  try  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!cmd.isEmpty())  {  try  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!cmd.isEmpty())  {  try  {	  try    {    [Delete]    catch(Throwable    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
80	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  &&  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  &&  cmd.containsArg(t))  {	  else    if(stopAtNonOption    &&    cmd.contains(t))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
81	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  cmd.contains(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  cmd.contains(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  cmd.contains(t))  {	  else    if(stopAtNonOption    &&    cmd.contains(t))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
82	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  cmd.addArg(t))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  &&  cmd.addArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  &&  cmd.addArg(t))  {	  else    if(stopAtNonOption    &&    cmd.contains(t))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
83	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  str,  stopAtNonOption);	  Option    cmd    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  t,  stopAtNonOption);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  t,  stopAtNonOption);	  Option    cmd    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
85	[BUG]  [BUGGY]  else  if(t.equals( "stopAtNonOption ")||  t.equals( "stopAtNonOption))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "stopAtNonOption ")||  t.equals( "stopAtNonOption))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "stopAtNonOption ")||  t.equals( "stopAtNonOption))  {	  else    if(t.equals(   "stopAtNonOption   "))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
86	[BUG]  [BUGGY]  else  if(t.equals( "stopAtNonOption ")||  t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "stopAtNonOption ")||  t.equals( "-- "))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "stopAtNonOption ")||  t.equals( "-- "))  {	  else    if(t.equals(   "stopAtNonOption   "))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
87	[BUG]  [BUGGY]  else  if(t.equals( "stopAtNonOption ")||  t.equals( "stopAtNonOption "))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "stopAtNonOption ")||  t.equals( "stopAtNonOption "))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "stopAtNonOption ")||  t.equals( "stopAtNonOption "))  {	  else    if(t.equals(   "stopAtNonOption   "))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
88	[BUG]  [BUGGY]  Iterator  it  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  this.opts.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  this.opts.iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
89	[BUG]  [BUGGY]  pullParser().addArg(t,  cmd);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  pullParser().addArg(t,  cmd);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	pullParser().addArg(t,  cmd);	  pullParser().addArg(t);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
90	[BUG]  [BUGGY]  pullParser().addArg(cmd);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  pullParser().addArg(cmd);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	pullParser().addArg(cmd);	  pullParser().addArg(t);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
91	[BUG]  [BUGGY]  parser().addArg(t);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parser().addArg(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parser().addArg(t);	  pullParser().addArg(t);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
92	[BUG]  [BUGGY]  else  if(t.equals( "-- ")||  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-- ")||  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-- ")||  str.equals(t))  {	  else    if(t.equals(   "-   ")||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
93	[BUG]  [BUGGY]  else  if(t.equals( "-- ")&&  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-- ")&&  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-- ")&&  str.equals(t))  {	  else    if(t.equals(   "-   ")||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
94	[BUG]  [BUGGY]  else  if(t.equals( "- ")&&  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "- ")&&  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "- ")&&  str.equals(t))  {	  else    if(t.equals(   "-   ")||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
95	[BUG]  [BUGGY]  if(iterator!=  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(iterator!=  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(iterator!=  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
96	[BUG]  [BUGGY]  if(iterator.hasNext())  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(iterator.hasNext())  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(iterator.hasNext())  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
97	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  iterator,  str);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  iterator,  str);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArguments(t,  iterator,  str);	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
98	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  iterator,  arguments);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArguments(t,  iterator,  arguments);	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
99	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  &&  str.length()  ==  0)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  &&  str.length()  ==  0)  {	  else    if(stopAtNonOption    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
100	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arguments.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||  arguments.length()  ==  0)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||  arguments.length()  ==  0)  {	  else    if(stopAtNonOption    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
101	[BUG]  [BUGGY]  else  if(str.length()  ==  0  ||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(str.length()  ==  0  ||  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(str.length()  ==  0  ||  stopAtNonOption)  {	  else    if(stopAtNonOption    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
102	[BUG]  [BUGGY]  Option  cmd  =  options.getArg(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getArg(t,  stopAtNonOption);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getArg(t,  stopAtNonOption);	  Option    cmd    =    options.getArg(t);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
103	[BUG]  [BUGGY]  Option  cmd  =  options.getArg(t,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getArg(t,  arguments);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getArg(t,  arguments);	  Option    cmd    =    options.getArg(t);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
104	[BUG]  [BUGGY]  Option  cmd  =  options.getArg(t,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getArg(t,  str);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getArg(t,  str);	  Option    cmd    =    options.getArg(t);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
105	[BUG]  [BUGGY]  else  if(t.equals( "-- ")||  t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-- ")||  t.equals( "-- "))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-- ")||  t.equals( "-- "))  {	  else    if(t.equals(   "-   ")||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
106	[BUG]  [BUGGY]  else  if(t.equals( "- ")||  t.equals( "-))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "- ")||  t.equals( "-))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "- ")||  t.equals( "-))  {	  else    if(t.equals(   "-   ")||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
107	[BUG]  [BUGGY]  else  if(t.equals( "-$ ")||  t.equals( "-$ "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-$ ")||  t.equals( "-$ "))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-$ ")||  t.equals( "-$ "))  {	  else    if(t.equals(   "-   ")||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
108	[BUG]  [BUGGY]  else  if(str.equals( "-- ")||  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(str.equals( "-- ")||  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(str.equals( "-- ")||  str.equals(t))  {	  else    if(   "--       ".equals(t)||       "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
109	[BUG]  [BUGGY]  else  if(!str.equals( "-- ")||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!str.equals( "-- ")||!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!str.equals( "-- ")||!stopAtNonOption)  {	  else    if(!str.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
110	[BUG]  [BUGGY]  else  if(!str.equals( "-- ")&&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!str.equals( "-- ")&&!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!str.equals( "-- ")&&!stopAtNonOption)  {	  else    if(!str.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
111	[BUG]  [BUGGY]  else  if(!stopAtNonOption.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption.equals( "-- "))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption.equals( "-- "))  {	  else    if(!str.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
112	[BUG]  [BUGGY]  (size()  <  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (size()  <  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(size()  <  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (size()    -    1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
113	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!options.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!options.isEmpty())  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!options.isEmpty())  {	  try    {    [Delete]    catch(Throwable    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
114	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!opts.contains(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!opts.contains(t))  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!opts.contains(t))  {	  try    {    [Delete]    catch(Throwable    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
115	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!options.contains(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!options.contains(t))  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!options.contains(t))  {	  try    {    [Delete]    catch(Throwable    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
116	[BUG]  [BUGGY]  else  if(t.equals( "-   ")||  str.equals(str))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-   ")||  str.equals(str))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-   ")||  str.equals(str))  {	  else    if(str.equals(   "-   ")||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
117	[BUG]  [BUGGY]  else  if(str.equals( "-- ")&&  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(str.equals( "-- ")&&  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(str.equals( "-- ")&&  str.equals(t))  {	  else    if(str.equals(   "-   ")||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
118	[BUG]  [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  false;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  false;  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	While(stopAtNonOption)  {  eatTheRest  =  false;	  While(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
119	[BUG]  [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  false;  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(stopAtNonOption)  {  eatTheRest  =  false;	  While(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
120	[BUG]  [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	While(stopAtNonOption)  {  eatTheRest  =  false;  }	  While(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
121	[BUG]  [BUGGY]  (0  <  <  1)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	  ==    (0    <    <    (1))    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
122	[BUG]  [BUGGY]  (0  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	  ==    (0    <    <    (1))    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
123	[BUG]  [BUGGY]  (0  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
124	[BUG]  [BUGGY]  (1  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (1  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(1  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	  ==    (0    <    <    (1))    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
125	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  option  =(Option)iterator.next();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  option  =(Option)iterator.next();	  option    cmd    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
126	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(cmd))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(cmd))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtils.isEmpty(cmd))  {	  else    if(!stopAtNonOption    &&!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
127	[BUG]  [BUGGY]  else  if(!stopAtNonOption  ||!StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  ||!StringUtils.isEmpty(str))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  ||!StringUtils.isEmpty(str))  {	  else    if(!stopAtNonOption    &&!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
128	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  cmd!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||  cmd!=  null)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||  cmd!=  null)  {	  else    if(stopAtNonOption    &&    cmd!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
129	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  cmd  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  &&  cmd  ==  null)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  &&  cmd  ==  null)  {	  else    if(stopAtNonOption    &&    cmd!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
130	[BUG]  [BUGGY]  if(iterator.hasNext())  {  aughtExceptionHandler(t,  iterator.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(iterator.hasNext())  {  aughtExceptionHandler(t,  iterator.next());  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(iterator.hasNext())  {  aughtExceptionHandler(t,  iterator.next());  }	  aughtExceptionHandler(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
131	[BUG]  [BUGGY]  aughtExceptionHandler(t,  iterator.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler(t,  iterator.next(),  stopAtNonOption);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler(t,  iterator.next(),  stopAtNonOption);	  aughtExceptionHandler(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
132	[BUG]  [BUGGY]  if(iterator.next()!=  null)  {  aughtExceptionHandler(t,  iterator.next());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(iterator.next()!=  null)  {  aughtExceptionHandler(t,  iterator.next());  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(iterator.next()!=  null)  {  aughtExceptionHandler(t,  iterator.next());  }	  aughtExceptionHandler(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
133	[BUG]  [BUGGY]  if(iterator.hasNext())  {  aughtExceptionHandler(t,  iterator.next());  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(iterator.hasNext())  {  aughtExceptionHandler(t,  iterator.next());  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(iterator.hasNext())  {  aughtExceptionHandler(t,  iterator.next());  }  else  {  cmd.addArg(t);  }	  aughtExceptionHandler(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
134	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  String>  iterator  =  opts.values().iterator();	  Iterator    <    String>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
135	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  iterator  =  arguments.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  iterator  =  arguments.iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
136	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  While(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	While(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	  While(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
137	[BUG]  [BUGGY]  While(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  While(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	While(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  false;  }	  While(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
138	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!cmd.equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!cmd.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!cmd.equals(t))  {	  else    if(!stopAtNonOption.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
139	[BUG]  [BUGGY]  else  if(!stopAtNonOption.equals(cmd))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption.equals(cmd))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption.equals(cmd))  {	  else    if(!stopAtNonOption.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
140	[BUG]  [BUGGY]  else  if(!stopAtNonOption.equals(t)&&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption.equals(t)&&  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption.equals(t)&&  cmd.containsArg(t))  {	  else    if(!stopAtNonOption.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
141	[BUG]  [BUGGY]  else  if(t.equals(stopAtNonOption))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals(stopAtNonOption))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals(stopAtNonOption))  {	  else    if(!stopAtNonOption.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
142	[BUG]  [BUGGY]  else  if(t.equals(str)||  str.equals(str))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals(str)||  str.equals(str))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals(str)||  str.equals(str))  {	  else    if(str.equals(t)||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
143	[BUG]  [BUGGY]  else  if(str.equals(t)||  str.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(str.equals(t)||  str.equals( "-- "))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(str.equals(t)||  str.equals( "-- "))  {	  else    if(str.equals(t)||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
144	[BUG]  [BUGGY]  else  if(t.equals(str)||  arguments.equals(t))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals(str)||  arguments.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals(str)||  arguments.equals(t))  {	  else    if(str.equals(t)||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
145	[BUG]  [BUGGY]  else  if(!stopAtNonOption.equals(t)&&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption.equals(t)&&!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption.equals(t)&&!stopAtNonOption)  {	  else    if(!stopAtNonOption.equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
146	[BUG]  [BUGGY]  else  if(t.equals(stopAtNonOption)||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals(stopAtNonOption)||!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals(stopAtNonOption)||!stopAtNonOption)  {	  else    if(!stopAtNonOption.equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
147	[BUG]  [BUGGY]  else  if(!stopAtNonOption.equals(t)||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption.equals(t)||  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption.equals(t)||  stopAtNonOption)  {	  else    if(!stopAtNonOption.equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
148	[BUG]  [BUGGY]  String  str  =(String)iterator.getValue()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  String  str  =(String)iterator.getValue()  :  null;  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	String  str  =(String)iterator.getValue()  :  null;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
149	[BUG]  [BUGGY]  Iterator  it  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  opts.values().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  opts.values().iterator();	  Iterator    it    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
150	[BUG]  [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler.handleMissingException(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler.handleMissingException(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(stopAtNonOption)  {  aughtExceptionHandler.handleMissingException(t);  }	  aughtExceptionHandler.handleMissingException(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
151	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(t,  t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingException(t,  t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingException(t,  t);	  aughtExceptionHandler.handleMissingException(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
152	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingArgument(t))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!aughtExceptionHandler.handleMissingArgument(t))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!aughtExceptionHandler.handleMissingArgument(t))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	  aughtExceptionHandler.handleMissingArgument(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
153	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingArgument(t))  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!aughtExceptionHandler.handleMissingArgument(t))  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!aughtExceptionHandler.handleMissingArgument(t))  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  aughtExceptionHandler.handleMissingArgument(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
154	[BUG]  [BUGGY]  else  if(t.equals( "-- ")&&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-- ")&&!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-- ")&&!stopAtNonOption)  {	  else    if(t.equals(   "-   ")||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
155	[BUG]  [BUGGY]  else  if(t.equals( "- ")&&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "- ")&&!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "- ")&&!stopAtNonOption)  {	  else    if(t.equals(   "-   ")||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
156	[BUG]  [BUGGY]  else  if(t  ||  cmd.contains(stopAtNonOption))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  ||  cmd.contains(stopAtNonOption))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ||  cmd.contains(stopAtNonOption))  {	  else    if(stopAtNonOption    ||    cmd.contains(t))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
157	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  it.hasNext())  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  it.hasNext())  {	  else    if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
158	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  cmd.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  cmd.isEmpty())  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  cmd.isEmpty())  {	  else    if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
159	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  iterator.hasNext())  {	  else    if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
160	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(t)&&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(t)&&  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtils.isEmpty(t)&&  cmd.containsArg(t))  {	  else    if(!stopAtNonOption    &&!StringUtils.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
161	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  cmd.containsArg(t))  {	  else    if(stopAtNonOption    ||    cmd.containsArg(t))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
162	[BUG]  [BUGGY]  else  if(t  ||  cmd.containsArg(stopAtNonOption))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  ||  cmd.containsArg(stopAtNonOption))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ||  cmd.containsArg(stopAtNonOption))  {	  else    if(stopAtNonOption    ||    cmd.containsArg(t))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
163	[BUG]  [BUGGY]  Iterator  it  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  opts.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  opts.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
164	[BUG]  [BUGGY]  Iterator  it  =  arguments.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  arguments.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  arguments.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
165	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption,  arguments);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
166	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption,  argumentList);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption,  argumentList);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  stopAtNonOption,  argumentList);	  Option    cmd    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
167	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  &&  it.hasNext())  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  &&  it.hasNext())  {	  else    if(stopAtNonOption    ||    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
168	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||  iterator.hasNext())  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||  iterator.hasNext())  {	  else    if(stopAtNonOption    ||    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
169	[BUG]  [BUGGY]  else  if(t.equals( "-- ")||  t.equals( "--))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-- ")||  t.equals( "--))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-- ")||  t.equals( "--))  {	  else    if(t.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
170	[BUG]  [BUGGY]  Iterator  it  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  this.requiredOptions.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  this.requiredOptions.iterator();	  Iterator    it    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
171	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  iterator  =  opts.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  iterator  =  opts.keySet().iterator();	  Iterator    <    Option>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
172	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  String>  iterator  =  opts.iterator();	  Iterator    <    String>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
173	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {  try  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {  try  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {  try  {	  try    {    [Delete]    catch(Throwable    t)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
174	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
175	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  option  =  options.getOption(t,  str);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  option  =  options.getOption(t,  str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
176	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  option  =  options.getOption(str);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  option  =  options.getOption(str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
177	[BUG]  [BUGGY]  Option  option  =  opts.getOption(t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  option  =  opts.getOption(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  option  =  opts.getOption(t);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
178	[BUG]  [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  cmd.addArg(t);  }  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(options!=  null)  {  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  cmd.addArg(t);  }	  Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
179	[BUG]  [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  cmd.addArg(t);  }  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(options!=  null)  {  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  cmd.addArg(t);  }	  Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
180	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingArg(t))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!aughtExceptionHandler.handleMissingArg(t))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!aughtExceptionHandler.handleMissingArg(t))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	  aughtExceptionHandler.handleMissingArg(t);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
181	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingArg(t))  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!aughtExceptionHandler.handleMissingArg(t))  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!aughtExceptionHandler.handleMissingArg(t))  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  aughtExceptionHandler.handleMissingArg(t);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
182	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  String>  iterator  =  this.arguments.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  String>  iterator  =  this.arguments.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
183	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  cmd.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  String>  iterator  =  cmd.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  String>  iterator  =  cmd.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
184	[BUG]  [BUGGY]  parseOption(t,  iterator.next(),  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parseOption(t,  iterator.next(),  str);  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parseOption(t,  iterator.next(),  str);	  parseOption(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
185	[BUG]  [BUGGY]  parse(t,  iterator.next(),  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parse(t,  iterator.next(),  str);  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parse(t,  iterator.next(),  str);	  parseOption(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
186	[BUG]  [BUGGY]  parse(t,  iterator.next());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parse(t,  iterator.next());  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parse(t,  iterator.next());	  parseOption(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
187	[BUG]  [BUGGY]  Iterator  it  =  options.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  options.options.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  options.options.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
188	[BUG]  [BUGGY]  Iterator  it  =  options.opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  options.opts.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  options.opts.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
189	[BUG]  [BUGGY]  else  if(str.equals(t)&&  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(str.equals(t)&&  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(str.equals(t)&&  str.equals(t))  {	  else    if(str.equals(t)||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
190	[BUG]  [BUGGY]  if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArguments(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArguments(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArguments(t);  }	  aughtExceptionHandler.handleMissingArguments(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
191	[BUG]  [BUGGY]  else  if(cmd.contains(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(cmd.contains(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(cmd.contains(t))  {	  else    if(stopAtNonOption    ||    cmd.contains(t))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
192	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArgument(t,  iterator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArgument(t,  iterator);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArgument(t,  iterator);	  aughtExceptionHandler.handleMissingArgument(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
193	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArgument(t,  cmd);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArgument(t,  cmd);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArgument(t,  cmd);	  aughtExceptionHandler.handleMissingArgument(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
194	[BUG]  [BUGGY]  t  =  iterator.next();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  t  =  iterator.next();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	t  =  iterator.next();	  aughtExceptionHandler.handleMissingArgument(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
195	[BUG]  [BUGGY]  ceilingOptions.addArg(t,  cmd);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  ceilingOptions.addArg(t,  cmd);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	ceilingOptions.addArg(t,  cmd);	  ceilingOptions.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
196	[BUG]  [BUGGY]  ceilingOptions.addArg(cmd);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  ceilingOptions.addArg(cmd);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	ceilingOptions.addArg(cmd);	  ceilingOptions.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
197	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  block);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  block);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  block);	  Option    cmd    =    options.getOption(t,    arguments);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
198	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  cmd!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  cmd!=  null)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  cmd!=  null)  {	  else    if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
199	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  String>  iterator  =  options.options().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  String>  iterator  =  options.options().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
200	[BUG]  [BUGGY]  Iterator  <  NoClassDefFoundError>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  NoClassDefFoundError>  iterator  =  opts.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  NoClassDefFoundError>  iterator  =  opts.iterator();	  try    {    [Delete]    catch(NoClassDefFoundError    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
201	[BUG]  [BUGGY]  Iterator  <  NoClassDefFoundError>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  NoClassDefFoundError>  iterator  =  options.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  NoClassDefFoundError>  iterator  =  options.iterator();	  try    {    [Delete]    catch(NoClassDefFoundError    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
202	[BUG]  [BUGGY]  Iterator  <  NoClassDefFoundError>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  NoClassDefFoundError>  iterator  =  options.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  NoClassDefFoundError>  iterator  =  options.keySet().iterator();	  try    {    [Delete]    catch(NoClassDefFoundError    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
203	[BUG]  [BUGGY]  Iterator  it  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  neededOptions.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  neededOptions.iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
204	[BUG]  [BUGGY]  else  if(cmd  ==  null  ||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(cmd  ==  null  ||  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(cmd  ==  null  ||  stopAtNonOption)  {	  else    if(t    ==    null    ||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
205	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  :  arguments;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  String  str  =(String)iterator.next()  :  arguments;  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	String  str  =(String)iterator.next()  :  arguments;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
206	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  iterator,  stopAtNonOption);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  iterator,  stopAtNonOption);	  Option    cmd    =    options.getOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
207	[BUG]  [BUGGY]  Iterator  it  =  options.options.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  options.options.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  options.options.iterator();	  Iterator    it    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
208	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  cmd  =(Option)iterator.next();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  cmd  =(Option)iterator.next();  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  cmd  =(Option)iterator.next();  }	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
209	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  cmd  =(Option)iterator.next();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  cmd  =(Option)iterator.next();  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  cmd  =(Option)iterator.next();  }	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
210	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(t,  iterator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingException(t,  iterator);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingException(t,  iterator);	  aughtExceptionHandler.handleMissingException(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
211	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(t,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingException(t,  str);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingException(t,  str);	  aughtExceptionHandler.handleMissingException(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
212	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingException(t))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!aughtExceptionHandler.handleMissingException(t))  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!aughtExceptionHandler.handleMissingException(t))  {	  aughtExceptionHandler.handleMissingException(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
213	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  options.options().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  options.options().iterator();	  Iterator    it    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
214	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  arguments.length  >  0)  {	  else    if(!stopAtNonOption    &&   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
215	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArg(t,  cmd);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArg(t,  cmd);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArg(t,  cmd);	  aughtExceptionHandler.handleMissingArg(t);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
216	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArg(t,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArg(t,  iterator);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArg(t,  iterator);	  aughtExceptionHandler.handleMissingArg(t);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
217	[BUG]  [BUGGY]  aughtExceptionHandler.handleError(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleError(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleError(t);	  aughtExceptionHandler.handleMissingArg(t);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
218	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption,  requiredOptions);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  stopAtNonOption,  requiredOptions);	  Option    cmd    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
219	[BUG]  [BUGGY]  options  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  options  =(Option)iterator.next();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	options  =(Option)iterator.next();	  Options    cmd    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
220	[BUG]  [BUGGY]  while((  t  =  iterator.next())!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while((  t  =  iterator.next())!=  null)  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while((  t  =  iterator.next())!=  null)  {	  try    {    [Delete]    catch(Throwable    t)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
221	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption)  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption)  {	  try    {    [Delete]    catch(Throwable    t)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
222	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler(t,  iterator.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler(t,  iterator.next());  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  aughtExceptionHandler(t,  iterator.next());  }	  aughtExceptionHandler(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
223	[BUG]  [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler(t,  iterator.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler(t,  iterator.next());  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(stopAtNonOption)  {  aughtExceptionHandler(t,  iterator.next());  }	  aughtExceptionHandler(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
224	[BUG]  [BUGGY]  if(opt.hasArg())  {  aughtExceptionHandler(t,  iterator.next());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(opt.hasArg())  {  aughtExceptionHandler(t,  iterator.next());  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(opt.hasArg())  {  aughtExceptionHandler(t,  iterator.next());  }	  aughtExceptionHandler(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
225	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  cmd.containsArg(t)&&  arguments.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||  cmd.containsArg(t)&&  arguments.length  >  0)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||  cmd.containsArg(t)&&  arguments.length  >  0)  {	  else    if(stopAtNonOption    ||    cmd.containsArg(t))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
226	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&  cmd.containsArg(t))  {	  else    if(!stopAtNonOption    &&!StringUtil.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
227	[BUG]  [BUGGY]  else  if(t  ==  null  ||!stopAtNonOption  &&!StringUtil.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  ==  null  ||!stopAtNonOption  &&!StringUtil.isEmpty(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ==  null  ||!stopAtNonOption  &&!StringUtil.isEmpty(t))  {	  else    if(!stopAtNonOption    &&!StringUtil.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
228	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||!StringUtils.isEmpty(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||!StringUtils.isEmpty(t))  {	  else    if(!stopAtNonOption    &&!StringUtils.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
229	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  iterator  =  options.options().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  iterator  =  options.options().iterator();	  Iterator    <    Option>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
230	[BUG]  [BUGGY]  String  str  =(String)iterator.getAsString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  String  str  =(String)iterator.getAsString();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	String  str  =(String)iterator.getAsString();	  String    str    =(String)iterator.getIterator();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
231	[BUG]  [BUGGY]  else  if( "--   ".equals(t)||  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if( "--   ".equals(t)||  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "--   ".equals(t)||  str.equals(t))  {	  else    if(   "--       ".equals(t)||       "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
232	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  t);	  Option    cmd    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
233	[BUG]  [BUGGY]  (0  <  <  1)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
234	[BUG]  [BUGGY]  (0  <  <  (1  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (1  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (1  <  <  1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
235	[BUG]  [BUGGY]  (0  <  <  (1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (1))  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
236	[BUG]  [BUGGY]  else  if(t.equals( "- ")&&  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "- ")&&  t.equals( "- "))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "- ")&&  t.equals( "- "))  {	  else    if(t.equals(   "-   ")||    t.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
237	[BUG]  [BUGGY]  (0  <  <  1)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
238	[BUG]  [BUGGY]  (0  <  <  (1  <  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (1  <  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (1  <  <  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
239	[BUG]  [BUGGY]  (0  <  <  (1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
240	[BUG]  [BUGGY]  (0  <  <  1)  {  eatTheRest  =  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1)  {  eatTheRest  =  false;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1)  {  eatTheRest  =  false;  }	  ==    (0    <    <    (1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
241	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd.addArg(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  ||  stopAtNonOption)  {  cmd.addArg(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	||  stopAtNonOption)  {  cmd.addArg(t);	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
242	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  ||  stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	||  stopAtNonOption)  {  cmd.addArg(t);  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
243	[BUG]  [BUGGY]  (0  <  <  (size()  >  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (size()  >  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (size()  >  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (size()    -    1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
244	[BUG]  [BUGGY]  (0  <  <  size()))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  size()))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  size()))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  >=    (0    <    <    (size()    -    1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
245	[BUG]  [BUGGY]  (0  <  <  (size()  >  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (size()  >  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (size()  >  1))  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  >=    (0    <    <    (size()    -    1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
246	[BUG]  [BUGGY]  else  if(opt  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(opt  ==  null)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(opt  ==  null)  {	  else    if(cmd    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
247	[BUG]  [BUGGY]  else  if(!stopAtNonOption.equals(md))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption.equals(md))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption.equals(md))  {	  else    if(!stopAtNonOption.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
248	[BUG]  [BUGGY]  else  if(t.equals( "stopAtNonOption ")&&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "stopAtNonOption ")&&  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "stopAtNonOption ")&&  cmd.containsArg(t))  {	  else    if(t.equals(   "stopAtNonOption   "))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
249	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  iterator  =  requiredOptions.iterator();	  Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
250	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  iterator  =  this.options.values().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  iterator  =  this.options.values().iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
251	[BUG]  [BUGGY]  (0  <  <  1)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
252	[BUG]  [BUGGY]  (0  <  <  (1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
253	[BUG]  [BUGGY]  (0  <  <  (1  <  <  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  (1  <  <  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  (1  <  <  1))  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
254	[BUG]  [BUGGY]  (0  <  <  1)  {  eattheRest  =  false;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  (0  <  <  1)  {  eattheRest  =  false;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	(0  <  <  1)  {  eattheRest  =  false;  }  else  {  cmd.addArg(t);  }	  ==    (0    <    <    (1))    {    eattheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
255	[BUG]  [BUGGY]  else  if(!str.equals( "-- ")||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!str.equals( "-- ")||  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!str.equals( "-- ")||  stopAtNonOption)  {	  else    if(!str.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
256	[BUG]  [BUGGY]  else  if( "--   ".equals(t)&&  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if( "--   ".equals(t)&&  stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "--   ".equals(t)&&  stopAtNonOption)  {	  else    if(   "--   ".equals(t)||    stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
257	[BUG]  [BUGGY]  else  if( "--   ".equals(t)||  stopAtNonOption  ||  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if( "--   ".equals(t)||  stopAtNonOption  ||  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "--   ".equals(t)||  stopAtNonOption  ||  cmd.containsArg(t))  {	  else    if(   "--   ".equals(t)||    stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
258	[BUG]  [BUGGY]  Iterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  iterator  =  options.values().iterator();  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  iterator  =  options.values().iterator();	  Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
259	[BUG]  [BUGGY]  Iterator  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  iterator  =  opts.iterator();  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  iterator  =  opts.iterator();	  Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
260	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  iterator.getOptions();  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  iterator.getOptions();	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
261	[BUG]  [BUGGY]  Option  cmd  =  iterator.getOption(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  iterator.getOption(t);  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  iterator.getOption(t);	  Option    cmd    =    iterator.next();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
262	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  iterator,  neededOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  iterator,  neededOptions);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArguments(t,  iterator,  neededOptions);	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
263	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  aughtExceptionHandler.handleMissingArguments(t,  iterator,  requiredOptions);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	aughtExceptionHandler.handleMissingArguments(t,  iterator,  requiredOptions);	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
264	[BUG]  [BUGGY]  parseOption(t,  iterator.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parseOption(t,  iterator.next(),  stopAtNonOption);  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parseOption(t,  iterator.next(),  stopAtNonOption);	  parseOption(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
265	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  String>  iterator  =  this.options.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  String>  iterator  =  this.options.keySet().iterator();	  Iterator    <    String>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
266	[BUG]  [BUGGY]  Option  cmd  =  options.getArg(t  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getArg(t  +  1);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getArg(t  +  1);	  Option    cmd    =    options.getArg(t);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
267	[BUG]  [BUGGY]  else  if(t  ==  null  ||!stopAtNonOption.equals(t)||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  ==  null  ||!stopAtNonOption.equals(t)||!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ==  null  ||!stopAtNonOption.equals(t)||!stopAtNonOption)  {	  else    if(!stopAtNonOption.equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
268	[BUG]  [BUGGY]  While(stopAtNonOption)  {  cmd.addArg(t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  While(stopAtNonOption)  {  cmd.addArg(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	While(stopAtNonOption)  {  cmd.addArg(t);	  While(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
269	[BUG]  [BUGGY]  while(stopAtNonOption)  {  cmd.addArg(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(stopAtNonOption)  {  cmd.addArg(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(stopAtNonOption)  {  cmd.addArg(t);	  While(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
270	[BUG]  [BUGGY]  While(stopAtNonOption)  {  cmd  =(Argument)iterator.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  While(stopAtNonOption)  {  cmd  =(Argument)iterator.next();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	While(stopAtNonOption)  {  cmd  =(Argument)iterator.next();	  While(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
271	[BUG]  [BUGGY]  else  if(t  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  ||  str.length()  ==  0)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ||  str.length()  ==  0)  {	  else    if(stopAtNonOption    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
272	[BUG]  [BUGGY]  cmd.addArg(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  cmd.addArg(t,  stopAtNonOption);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	cmd.addArg(t,  stopAtNonOption);	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
273	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&!StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  &&!StringUtils.isEmpty(str))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  &&!StringUtils.isEmpty(str))  {	  else    if(!stopAtNonOption    &&!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
274	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||!StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||!StringUtils.isEmpty(str))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||!StringUtils.isEmpty(str))  {	  else    if(!stopAtNonOption    &&!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
275	[BUG]  [BUGGY]  Iterator  it  =  optionOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  optionOptions.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  optionOptions.iterator();	  Iterator    it    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
276	[BUG]  [BUGGY]  String  str  =(String)iterator.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  String  str  =(String)iterator.clone();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	String  str  =(String)iterator.clone();	  String    str    =(String)iterator.getValue();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
277	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  options.requireOptions.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  options.requireOptions.iterator();	  Iterator    it    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
278	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  str);  if(cmd!=  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  str);  if(cmd!=  null)  {  cmd.addArg(t);  }  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  str);  if(cmd!=  null)  {  cmd.addArg(t);  }	  Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
279	[BUG]  [BUGGY]  Option  cmd  =(Option)iterator.getIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =(Option)iterator.getIterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =(Option)iterator.getIterator();	  Option    cmd    =(Option)iterator.clone();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
280	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arguments.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||  arguments.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||  arguments.containsArg(t))  {	  else    if(stopAtNonOption    ||    cmd.containsArg(t))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
281	[BUG]  [BUGGY]  Options  cmd  =(Option)iterator.getIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Options  cmd  =(Option)iterator.getIterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Options  cmd  =(Option)iterator.getIterator();	  Options    cmd    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
282	[BUG]  [BUGGY]  try  >>  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  try  >>  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	try  >>	  try    {    [Delete]    catch(Throwable    t)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
283	[BUG]  [BUGGY]  Iterator  it  =  cmd.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  cmd.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  cmd.iterator();	  Iterator    it    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
284	[BUG]  [BUGGY]  Iterator  <  String>  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  String>  it  =  options.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  String>  it  =  options.iterator();	  Iterator    it    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
285	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArg(t);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArg(t);  }	  aughtExceptionHandler.handleMissingArg(t);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
286	[BUG]  [BUGGY]  if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArg(t);  }	  aughtExceptionHandler.handleMissingArg(t);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
287	[BUG]  [BUGGY]  if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArg(t);  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArg(t);  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArg(t);  }  else  {  cmd.addArg(t);  }	  aughtExceptionHandler.handleMissingArg(t);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
288	[BUG]  [BUGGY]  try  ==  stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  try  ==  stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	try  ==  stopAtNonOption)  {  eatTheRest  =  true;  }	  While(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
289	[BUG]  [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	While(stopAtNonOption)  {  eatTheRest  =  true;  }	  While(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
290	[BUG]  [BUGGY]  else  if(t  || "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  || "-- ".equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  || "-- ".equals(t))  {	  else    if(stopAtNonOption    ||       "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
291	[BUG]  [BUGGY]  else  if(t  >  0  || "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  >  0  || "-- ".equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  >  0  || "-- ".equals(t))  {	  else    if(stopAtNonOption    ||       "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
292	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||  arguments.length  ==  0)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||  arguments.length  ==  0)  {	  else    if(stopAtNonOption    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
293	[BUG]  [BUGGY]  else  if(t  ==  null  ||!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  ==  null  ||!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ==  null  ||!stopAtNonOption  &&!StringUtils.isEmpty(t))  {	  else    if(!stopAtNonOption    &&!StringUtils.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
294	[BUG]  [BUGGY]  while(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  while(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	while(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {	  try    {    [Delete]    catch(NoClassDefFoundError    t)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
295	[BUG]  [BUGGY]  opts.addArg(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  opts.addArg(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	opts.addArg(t);	  ceilingOptions.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
296	[BUG]  [BUGGY]  ((  ListIterator  <  String>)iterator.next()).addArg(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  ((  ListIterator  <  String>)iterator.next()).addArg(t);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	((  ListIterator  <  String>)iterator.next()).addArg(t);	  ==    (0    <    <    (1))    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
297	[BUG]  [BUGGY]  else  if(t!=  null  &&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t!=  null  &&!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t!=  null  &&!stopAtNonOption)  {	  else    if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
298	[BUG]  [BUGGY]  else  if(t!=  null  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t!=  null  &&  iterator.hasNext())  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t!=  null  &&  iterator.hasNext())  {	  else    if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
299	[BUG]  [BUGGY]  else  if(t!=  null  &&! "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t!=  null  &&! "-- ".equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t!=  null  &&! "-- ".equals(t))  {	  else    if(t!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
300	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  <  Option>  it  =  options.iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
301	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!cmd.addArg(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!cmd.addArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!cmd.addArg(t))  {	  else    if(!stopAtNonOption    &&!   "--       ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
302	[BUG]  [BUGGY]  else  if( "--   ".equals(t)&&!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if( "--   ".equals(t)&&!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "--   ".equals(t)&&!stopAtNonOption)  {	  else    if(   "--   ".equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
303	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  cmd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  option  =  options.getOption(t,  cmd);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  option  =  options.getOption(t,  cmd);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
304	[BUG]  [BUGGY]  Option  cmd  =(Option)iterator.itemList();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =(Option)iterator.itemList();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =(Option)iterator.itemList();	  Option    cmd    =(Option)iterator.clone();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
305	[BUG]  [BUGGY]  parseOption(t,  iterator.getKey());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parseOption(t,  iterator.getKey());  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parseOption(t,  iterator.getKey());	  parseOption(t,    iterator.next());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
306	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption,  argument);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption,  argument);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  stopAtNonOption,  argument);	  Option    cmd    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
307	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArgument(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArgument(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArgument(t);  }	  aughtExceptionHandler.handleMissingArgument(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
308	[BUG]  [BUGGY]  if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArgument(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArgument(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(cmd!=  null)  {  aughtExceptionHandler.handleMissingArgument(t);  }	  aughtExceptionHandler.handleMissingArgument(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
309	[BUG]  [BUGGY]  if(md!=  null)  {  aughtExceptionHandler.handleMissingArgument(t);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(md!=  null)  {  aughtExceptionHandler.handleMissingArgument(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(md!=  null)  {  aughtExceptionHandler.handleMissingArgument(t);  }	  aughtExceptionHandler.handleMissingArgument(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
310	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
311	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
312	[BUG]  [BUGGY]  else  if(! "-- ".equals(t)||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(! "-- ".equals(t)||!stopAtNonOption)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(! "-- ".equals(t)||!stopAtNonOption)  {	  else    if(!stopAtNonOption.equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
313	[BUG]  [BUGGY]  else  if(t  ==  null  ||  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t  ==  null  ||  arguments.length  ==  0)  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ==  null  ||  arguments.length  ==  0)  {	  else    if(t    ==    null    ||       "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
314	[BUG]  [BUGGY]  else  if(t!=  null  &&!stopAtNonOption  &&!StringUtils.isNotEmpty(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t!=  null  &&!stopAtNonOption  &&!StringUtils.isNotEmpty(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t!=  null  &&!stopAtNonOption  &&!StringUtils.isNotEmpty(t))  {	  else    if(!stopAtNonOption    &&!StringUtils.isNotEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
315	[BUG]  [BUGGY]  else  if(t!=  null  &&!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t!=  null  &&!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t!=  null  &&!stopAtNonOption  &&!StringUtils.isEmpty(t))  {	  else    if(!stopAtNonOption    &&!StringUtils.isNotEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
316	[BUG]  [BUGGY]  While(stopAtNonOption)  {  if(!stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  While(stopAtNonOption)  {  if(!stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	While(stopAtNonOption)  {  if(!stopAtNonOption)  {  eatTheRest  =  true;  }	  While(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
317	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingException(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingException(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingException(t);  }	  aughtExceptionHandler.handleMissingException(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
318	[BUG]  [BUGGY]  t.printStackTrace();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  t.printStackTrace();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	t.printStackTrace();	  aughtExceptionHandler.handleMissingException(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
319	[BUG]  [BUGGY]  Option  cmd  =  options.getArg(t,  iterator.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getArg(t,  iterator.next());  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getArg(t,  iterator.next());	  Option    cmd    =    options.getArg(t);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
320	[BUG]  [BUGGY]  else  if(t.equals(str)||  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals(str)||  str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals(str)||  str.equals(t))  {	  else    if(str.equals(t)||    str.equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
321	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  :  t;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  String  str  =(String)iterator.next()  :  t;  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	String  str  =(String)iterator.next()  :  t;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
322	[BUG]  [BUGGY]  else  if(t.equals( "-- ")||  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "-- ")||  it.hasNext())  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "-- ")||  it.hasNext())  {	  else    if(stopAtNonOption    ||    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
323	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  false;  }	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
324	[BUG]  [BUGGY]  else  if(!str.equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!str.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!str.equals(t))  {	  else    if(!str.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
325	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  cmd.addArg(t))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(stopAtNonOption  ||  cmd.addArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption  ||  cmd.addArg(t))  {	  else    if(stopAtNonOption    ||    cmd.contains(t))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
326	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(str)&&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(str)&&  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtils.isEmpty(str)&&  cmd.containsArg(t))  {	  else    if(!stopAtNonOption    &&!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
327	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(t,  iterator.next());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  parseAndIgnoreWhitespace(t,  iterator.next());  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	parseAndIgnoreWhitespace(t,  iterator.next());	  pullParser().addArg(t);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
328	[BUG]  [BUGGY]  else  if(t!=  null  &&!stopAtNonOption  &&!StringUtil.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t!=  null  &&!stopAtNonOption  &&!StringUtil.isEmpty(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t!=  null  &&!stopAtNonOption  &&!StringUtil.isEmpty(t))  {	  else    if(!stopAtNonOption    &&!StringUtil.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
329	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&!cmd.equals(t))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&!cmd.equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t)&&!cmd.equals(t))  {	  else    if(!stopAtNonOption    &&!StringUtil.isEmpty(t))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
330	[BUG]  [BUGGY]  Iterator  it  =  requiredOptions.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  requiredOptions.keySet().iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  requiredOptions.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
331	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.contains(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  arguments.contains(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  arguments.contains(t))  {	  else    if(!stopAtNonOption    &&   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
332	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[0].equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[0].equals(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[0].equals(t))  {	  else    if(!stopAtNonOption    &&   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
333	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  argument);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Option  cmd  =  options.getOption(t,  argument);  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Option  cmd  =  options.getOption(t,  argument);	  Option    cmd    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
334	[BUG]  [BUGGY]  else  if(t.equals( "stop "))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if(t.equals( "stop "))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t.equals( "stop "))  {	  else    if(t.equals(   "stopAtNonOption   "))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
335	[BUG]  [BUGGY]  else  if( "-stopAtNonOption ".equals(t)&&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  else  if( "-stopAtNonOption ".equals(t)&&  cmd.containsArg(t))  {  [BUGGY]      {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "-stopAtNonOption ".equals(t)&&  cmd.containsArg(t))  {	  else    if(   "-stopAtNonOption       ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
336	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
337	[BUG]  [BUGGY]  if(iterator  ==  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(iterator  ==  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(iterator  ==  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
338	[BUG]  [BUGGY]  if(iterator!=  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(iterator!=  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  else  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(iterator!=  null)  {  aughtExceptionHandler.handleMissingArguments(t,  iterator);  }  else  {  cmd.addArg(t);  }	  aughtExceptionHandler.handleMissingArguments(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
339	[BUG]  [BUGGY]  Iterator  it  =  options.requiresOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  Iterator  it  =  options.requiresOptions.iterator();  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	Iterator  it  =  options.requiresOptions.iterator();	  Iterator    it    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
340	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArguments(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArguments(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissingArguments(t);  }	  aughtExceptionHandler.handleMissingArguments(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
341	[BUG]  [BUGGY]  if(md!=  null)  {  aughtExceptionHandler.handleMissingArguments(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(md!=  null)  {  aughtExceptionHandler.handleMissingArguments(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(md!=  null)  {  aughtExceptionHandler.handleMissingArguments(t);  }	  aughtExceptionHandler.handleMissingArguments(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
342	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  }        [BUGGY]  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      else  if  (     "-     ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	if(!stopAtNonOption)  {  cmd.addArg(t);  }	  cmd.addArg(t);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
