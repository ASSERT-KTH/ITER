bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if( "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]  else  if( "-- ".equals(t))  {  [BUGGY]  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "-- ".equals(t))  {	else  if  ( "- ".equals(t))  {  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
2	[BUG]  [BUGGY]  else  if( "- ".equals(t)||   "- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]  else  if( "- ".equals(t)||   "- ".equals(t))  {  [BUGGY]  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "- ".equals(t)||   "- ".equals(t))  {	else  if  ( "- ".equals(t))  {  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
3	[BUG]  [BUGGY]  else  if( "- ".equals(t)||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]  else  if( "- ".equals(t)||!stopAtNonOption)  {  [BUGGY]  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "- ".equals(t)||!stopAtNonOption)  {	else  if  ( "- ".equals(t))  {  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    [BUGGY]  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	  	else  if  ( "- ".equals(t))  {  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
5	[BUG]  [BUGGY]    Option  cmd  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    Option  cmd  =(Option)iterator.next();  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    Option  cmd  =(Option)iterator.next();		non-compiled	[CE]  illegal  start  of  type	47	None	add
6	[BUG]  [BUGGY]    Iterator  <  String>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    Iterator  <  String>  iterator  =  options.iterator();  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    Iterator  <  String>  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	47	None	add
7	[BUG]  [BUGGY]    String  str  =(String)iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    String  str  =(String)iterator.next();  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    String  str  =(String)iterator.next();		non-compiled	[CE]  illegal  start  of  type	47	None	add
8	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    Option  cmd  =  options.getOption(t);  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    Option  cmd  =  options.getOption(t);		non-compiled	[CE]  illegal  start  of  type	47	None	add
9	[BUG]  [BUGGY]    Iterator  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    Iterator  it  =  options.iterator();  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    Iterator  it  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	47	None	add
10	[BUG]  [BUGGY]  else  if(! "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]  else  if(! "-- ".equals(t))  {  [BUGGY]  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(! "-- ".equals(t))  {	else  if  ( "- ".equals(t))  {  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
11	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]  else  if(stopAtNonOption)  {  [BUGGY]  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(stopAtNonOption)  {	else  if  ( "- ".equals(t))  {  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
12	[BUG]  [BUGGY]  else  if(t  ==  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]  else  if(t  ==  null)  {  [BUGGY]  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if(t  ==  null)  {	else  if  ( "- ".equals(t))  {  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
13	[BUG]  [BUGGY]    if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
14	[BUG]  [BUGGY]    Iterator  <  Option>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    Iterator  <  Option>  iterator  =  options.iterator();  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    Iterator  <  Option>  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	47	None	add
15	[BUG]  [BUGGY]    if(stopAtNonOption)  {  cmd.addArg(t);  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    if(stopAtNonOption)  {  cmd.addArg(t);  }  else  {  cmd.addArg(t);  }  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    if(stopAtNonOption)  {  cmd.addArg(t);  }  else  {  cmd.addArg(t);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
16	[BUG]  [BUGGY]    if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    if(stopAtNonOption)  {  cmd.addArg(t);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
17	[BUG]  [BUGGY]    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
18	[BUG]  [BUGGY]    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
19	[BUG]  [BUGGY]    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
20	[BUG]  [BUGGY]    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]  else  if  ( "- ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	    if(stopAtNonOption)  {  if(stopAtNonOption)  {  eattheRest  =  true;  }  else  {  cmd.addArg(t);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
21	[BUG]  [BUGGY]  else  if( "stopAtNonOption ".equals(t))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [BUGGY]  else  if( "stopAtNonOption ".equals(t))  {  [BUGGY]  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	184	185	1	replace	else  if( "stopAtNonOption ".equals(t))  {	else  if  ( "- ".equals(t))  {  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
