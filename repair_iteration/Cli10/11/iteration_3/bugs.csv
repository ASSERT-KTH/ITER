bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.getOption(it.next()).iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(it.next()).iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(it.next()).iterator();	  Option    option    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
2	[BUG]  [BUGGY]  Option  option  =  it.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  it.getOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  it.getOptions().iterator();	  Option    option    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOptions();	  Option    option    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  it.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(str,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(str,  it.next());	  Option    option    =    options.getOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  it.next(),  str);	  Option    option    =    options.getOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  it.next(),  arguments);	  Option    option    =    options.getOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  str,  it.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(t,  str,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(t,  str,  it.next());	  Option    option    =    options.helpOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(t,  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(t,  arguments);	  Option    option    =    options.helpOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(str,  options);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(str,  options);	  Option    option    =    options.helpOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.helpOptions().iterator();	  Iterator    it    =    options.requireOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
11	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.options().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.options().iterator();	  Iterator    it    =    options.requireOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
12	[BUG]  [BUGGY]  Iterator  it  =  options.propertyOptions().iterator();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.propertyOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.propertyOptions().iterator();	  Iterator    it    =    options.requireOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
13	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions(options.listIterator());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions(options.listIterator());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions(options.listIterator());	  ListIterator    it    =    options.addOptions(requiredOptions.listIterator());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.addOptions(options.listIterator());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOptions(options.listIterator());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOptions(options.listIterator());	  ListIterator    it    =    options.addOptions(requiredOptions.listIterator());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
15	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions(options.getIterator());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions(options.getIterator());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions(options.getIterator());	  ListIterator    it    =    options.addOptions(requiredOptions.listIterator());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
16	[BUG]  [BUGGY]  Options  opt  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Options  opt  =(Option)it.next();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Options  opt  =(Option)it.next();	  options    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.requiredOptions().iterator();	  Iterator    it    =    options.helpRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  str,  stopAtNonOption);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  it.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  str,  it.next());	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  arguments);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(str,  stopAtNonOption);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
22	[BUG]  [BUGGY]  ListIterator  it  =  options.optionsOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.optionsOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.optionsOptions.iterator();	  ListIterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
23	[BUG]  [BUGGY]  ListIterator  it  =  options.requires().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.requires().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.requires().iterator();	  ListIterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
24	[BUG]  [BUGGY]  ListIterator  it  =  options.options().keyList().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options().keyList().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options().keyList().iterator();	  ListIterator    it    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
25	[BUG]  [BUGGY]  ListIterator  it  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.keySet().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.keySet().iterator();	  ListIterator    it    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
26	[BUG]  [BUGGY]  ListIterator  it  =  options.optionsList().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.optionsList().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.optionsList().iterator();	  ListIterator    it    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options().iterator();	  ListIterator    it    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  Option  opt  =  it.next().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  it.next().iterator();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  opt  =  it.next().iterator();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
29	[BUG]  [BUGGY]  Option  opt  =  options.opts().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.opts().iterator();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  opt  =  options.opts().iterator();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
30	[BUG]  [BUGGY]  Option  opt  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.options().iterator();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  opt  =  options.options().iterator();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
31	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.requiredOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options.requiredOptions.iterator();	  ListIterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
32	[BUG]  [BUGGY]  ListIterator  it  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.getOptions().iterator();	  ListIterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
33	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.helpOptions().iterator();	  ListIterator    it    =    options.requiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  ListIterator  it  =  options.getAllRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getAllRequiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.getAllRequiredOptions().iterator();	  ListIterator    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
35	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions.listIterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpOptions.listIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.helpOptions.listIterator();	  ListIterator    it    =    options.requiredOptions.listIterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  ListIterator  it  =  options.options.listIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.listIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options.listIterator();	  ListIterator    it    =    options.requiredOptions.listIterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
37	[BUG]  [BUGGY]  ListIterator  it  =  options.optionsIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.optionsIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.optionsIterator();	  ListIterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.requiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.requiredOptions();	  ListIterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  ListIterator  it  =  options.neededOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.neededOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.neededOptions().iterator();	  ListIterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
40	[BUG]  [BUGGY]  Option  option  =  it.next().options().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  it.next().options().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  it.next().options().iterator();	  Option    option    =    options.options().iterator();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
41	[BUG]  [BUGGY]  Option  option  =(Option)itterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)itterator.next();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =(Option)itterator.next();	  Option    option    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().getOption(str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOptions().getOption(str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOptions().getOption(str);	  Option    option    =    options.helpOptions().getOption(t);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOptions().getOption(t,  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOptions().getOption(t,  str);	  Option    option    =    options.helpOptions().getOption(t);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().getOption(t,  it.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOptions().getOption(t,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOptions().getOption(t,  it.next());	  Option    option    =    options.helpOptions().getOption(t);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
45	[BUG]  [BUGGY]  ListIterator  it  =  options.getOptions().listIterator(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getOptions().listIterator(t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.getOptions().listIterator(t);	  ListIterator    it    =    options.getOptions().listIterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
46	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions().listIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpOptions().listIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.helpOptions().listIterator();	  ListIterator    it    =    options.getOptions().listIterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
47	[BUG]  [BUGGY]  ListIterator  it  =  options.getOptions().requireIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getOptions().requireIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.getOptions().requireIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
48	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions().requireIterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpOptions().requireIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.helpOptions().requireIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
49	[BUG]  [BUGGY]  ListIterator  it  =  options.requireRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.requireRequiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.requireRequiredOptions().iterator();	  ListIterator    it    =    options.requireRequiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
50	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requireRequiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.requireRequiredOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options.requireRequiredOptions.iterator();	  ListIterator    it    =    options.requireRequiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
51	[BUG]  [BUGGY]  Iterator  it  =  options.options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.options.requiredOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.options.requiredOptions.iterator();	  Iterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
52	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.helpOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.helpOptions.iterator();	  Iterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.addOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(str);	  Option    option    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.addOption(t,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(t,  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(t,  str);	  Option    option    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.addOption(str,  t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(str,  t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(str,  t);	  Option    option    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
56	[BUG]  [BUGGY]  Option  option  =  options.addOption(t,  it.next());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(t,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(t,  it.next());	  Option    option    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.helpOption(it.next(),  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(it.next(),  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(it.next(),  str);	  Option    option    =    options.helpOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.helpOption(it.next(),  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(it.next(),  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(it.next(),  arguments);	  Option    option    =    options.helpOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.opts();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.opts();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.opts();	  Option    option    =    options.options();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  Iterator  it  =  options.optionsIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.optionsIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.optionsIterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
61	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().listIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.helpOptions().listIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.helpOptions().listIterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
62	[BUG]  [BUGGY]  Iterator  it  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.keySet().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.keySet().iterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
63	[BUG]  [BUGGY]  ListIterator  it  =  options.optionsOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.optionsOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.optionsOptions().iterator();	  ListIterator    it    =    options.requiresOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str,  it.next());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(str,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(str,  it.next());	  Option    option    =    options.helpOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  it.next(),  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(t,  it.next(),  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(t,  it.next(),  str);	  Option    option    =    options.helpOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
66	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requireOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.requireOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options.requireOptions.iterator();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
67	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.requireOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.requireOptions();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str).iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  str).iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  str).iterator();	  Option    option    =    options.getOption(t).iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it.next()).iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it.next()).iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  it.next()).iterator();	  Option    option    =    options.getOption(t).iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOption(str).iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(str).iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(str).iterator();	  Option    option    =    options.getOption(t).iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOption(it.next(),  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(it.next(),  str);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(it.next(),  str);	  Option    option    =    options.getOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options.getOption(t.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t.next());  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t.next());	  Option    option    =    options.getOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.next());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(options.next());  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(options.next());	  Option    option    =    options.getOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
74	[BUG]  [BUGGY]  Iterator  it  =  options.options.requireOptions.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.options.requireOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.options.requireOptions.iterator();	  Iterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
75	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.requireOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.requireOptions();	  Iterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
76	[BUG]  [BUGGY]  Iterator  it  =  options.neededOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.neededOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.neededOptions().iterator();	  Iterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  Iterator  it  =  options.neededOptionsList.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.neededOptionsList.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.neededOptionsList.iterator();	  Iterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
78	[BUG]  [BUGGY]  Iterator  it  =  options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.requiresOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.requiresOptions().iterator();	  Iterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
79	[BUG]  [BUGGY]  Iterator  it  =  options.requires().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.requires().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.requires().iterator();	  Iterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
80	[BUG]  [BUGGY]  Iterator  it  =  options.optionsOptions.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.optionsOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.optionsOptions.iterator();	  Iterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
81	[BUG]  [BUGGY]  Options  options  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Options  options  =(Option)iterator.next();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Options  options  =(Option)iterator.next();	  options    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
82	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str,  it);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(str,  it);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(str,  it);	  Option    option    =    options.helpOption(t,    it);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
83	[BUG]  [BUGGY]  Option  option  =  options.helpOption(options,  str,  t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(options,  str,  t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(options,  str,  t);	  Option    option    =    options.helpOption(str,    t);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(str,  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(str,  arguments);	  Option    option    =    options.helpOption(str,    t);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  Option  option  =  it.opts().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  it.opts().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  it.opts().iterator();	  Option    option    =    options.opts().iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
86	[BUG]  [BUGGY]  Option  option  =  options.next(),  it.helpOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.next(),  it.helpOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.next(),  it.helpOptions();	  Option    option    =    it.next(),    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  Option  option  =  it.next(),  options.helpOptions(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  it.next(),  options.helpOptions(options);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  it.next(),  options.helpOptions(options);	  Option    option    =    it.next(),    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
88	[BUG]  [BUGGY]  Option  option  =  options.next(),  options.helpOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.next(),  options.helpOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.next(),  options.helpOptions();	  Option    option    =    it.next(),    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
89	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions().iterator();	  ListIterator    it    =    options.requireOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  it.getValue());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(t,  it.getValue());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(t,  it.getValue());	  Option    option    =    options.helpOption(t,    it);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
91	[BUG]  [BUGGY]  Option  option  =  options.helpOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(options);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(options);	  Option    option    =    options.helpOption(str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
92	[BUG]  [BUGGY]  Option  option  =  options.helpOption(options,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(options,  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(options,  str);	  Option    option    =    options.helpOption(str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  Iterator  it  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.getOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.getOptions().iterator();	  Iterator    it    =    options.helpRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
94	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  it);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
95	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  iterator);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  iterator);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
96	[BUG]  [BUGGY]  Option  option  =  options.getOption(it.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(it.next(),  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(it.next(),  stopAtNonOption);	  Option    option    =    options.getOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
97	[BUG]  [BUGGY]  Iterator  it  =  options.requiresOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.requiresOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.requiresOptions();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
98	[BUG]  [BUGGY]  Iterator  it  =  optionOptions.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  optionOptions.neededOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  optionOptions.neededOptions.iterator();	  Iterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
99	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions(options.helpOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions(options.helpOptions());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions(options.helpOptions());	  ListIterator    it    =    options.addOptions(requiredOptions.listIterator());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
100	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions(it.listIterator());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions(it.listIterator());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions(it.listIterator());	  ListIterator    it    =    options.addOptions(requiredOptions.listIterator());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
101	[BUG]  [BUGGY]  ListIterator  it  =  optionOptions.requireOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  optionOptions.requireOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  optionOptions.requireOptions.iterator();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.addOption(options.getOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(options.getOptions());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(options.getOptions());	  Option    option    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
103	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().listIterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.requiredOptions().listIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.requiredOptions().listIterator();	  ListIterator    it    =    options.requiredOptions.listIterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
104	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  it.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(t,  it.next(),  stopAtNonOption);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(t,  it.next(),  stopAtNonOption);	  Option    option    =    options.helpOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.helpOption(it.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(it.next(),  stopAtNonOption);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(it.next(),  stopAtNonOption);	  Option    option    =    options.helpOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
106	[BUG]  [BUGGY]  ListIterator  it  =  option.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  option.neededOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  option.neededOptions.iterator();	  ListIterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
107	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  stopAtNonOption);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  it.next(),  stopAtNonOption);	  Option    option    =    options.getOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
108	[BUG]  [BUGGY]  Option  option  =  options.addOption(options.options());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(options.options());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(options.options());	  Option    option    =    options.options().iterator();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
109	[BUG]  [BUGGY]  Iterator  it  =  options.helpErrors().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.helpErrors().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.helpErrors().iterator();	  Iterator    it    =    options.helpRequires().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
110	[BUG]  [BUGGY]  ListIterator  it  =  options.options.keyList().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.keyList().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options.keyList().iterator();	  ListIterator    it    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
111	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions(options.keyList()).iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions(options.keyList()).iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions(options.keyList()).iterator();	  ListIterator    it    =    options.keyList().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
112	[BUG]  [BUGGY]  ListIterator  it  =  options.requiresOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.requiresOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.requiresOptions();	  ListIterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
113	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions(options);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions(options);	  ListIterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
114	[BUG]  [BUGGY]  Iterator  it  =  options.addOptions().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.addOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.addOptions().iterator();	  Iterator    it    =    options.requireOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
115	[BUG]  [BUGGY]  Option  option  =  options.addOption(options.opts());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(options.opts());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(options.opts());	  Option    option    =    options.opts().iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
116	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOptions().getOption(t,  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOptions().getOption(t,  arguments);	  Option    option    =    options.helpOptions().getOption(t);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
117	[BUG]  [BUGGY]  ListIterator  it  =  options.allOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.allOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.allOptions().iterator();	  ListIterator    it    =    options.requiresOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
118	[BUG]  [BUGGY]  Option  option  =  it.next(),  options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  it.next(),  options.getOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  it.next(),  options.getOptions();	  Option    option    =    it.next(),    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
119	[BUG]  [BUGGY]  Option  option  =  it.next(),  options.addOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  it.next(),  options.addOption(options);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  it.next(),  options.addOption(options);	  Option    option    =    it.next(),    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
120	[BUG]  [BUGGY]  Iterator  it  =  options.options.requireOptions().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.options.requireOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.options.requireOptions().iterator();	  Iterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
121	[BUG]  [BUGGY]  Iterator  it  =  options.addOptions(options.requireOptions());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.addOptions(options.requireOptions());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.addOptions(options.requireOptions());	  Iterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
122	[BUG]  [BUGGY]  Options  opt  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Options  opt  =(Option)iterator.next();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Options  opt  =(Option)iterator.next();	  options    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.addOption(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(options);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(options);	  Option    option    =    options.options();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
124	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  options);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  options);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
125	[BUG]  [BUGGY]  Iterator  it  =  options.options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.options.requiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.options.requiredOptions().iterator();	  Iterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
126	[BUG]  [BUGGY]  Iterator  it  =  options.requiresIterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.requiresIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.requiresIterator();	  Iterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
127	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions(options.requiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions(options.requiredOptions());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions(options.requiredOptions());	  ListIterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
128	[BUG]  [BUGGY]  ListIterator  it  =  requiredOptions.requireIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  requiredOptions.requireIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  requiredOptions.requireIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
129	[BUG]  [BUGGY]  Option  option  =  options.helpOption(it,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(it,  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(it,  str);	  Option    option    =    options.helpOption(str,    t);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
130	[BUG]  [BUGGY]  ListIterator  it  =  options.findRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.findRequiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.findRequiredOptions().iterator();	  ListIterator    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
131	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  blockAtNonOption);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(t,  blockAtNonOption);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
132	[BUG]  [BUGGY]  Option  opt  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOptions().iterator();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  opt  =  options.getOptions().iterator();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
133	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(t,  iterator);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(t,  iterator);	  Option    option    =    options.helpOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.helpOption(it);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(it);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(it);	  Option    option    =    options.helpOption(str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
135	[BUG]  [BUGGY]  Option  option  =(Option)iterator.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)iterator.clone();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =(Option)iterator.clone();	  Option    option    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
136	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.requiresOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options.requiresOptions().iterator();	  ListIterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
137	[BUG]  [BUGGY]  ListIterator  it  =  options.helpRequiresOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpRequiresOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.helpRequiresOptions.iterator();	  ListIterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
138	[BUG]  [BUGGY]  Iterator  it  =  options.allOptions().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.allOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.allOptions().iterator();	  Iterator    it    =    options.requireOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
139	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t,  it.getKey());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(t,  it.getKey());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(t,  it.getKey());	  Option    option    =    options.helpOption(t,    it);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
140	[BUG]  [BUGGY]  Iterator  it  =  options.options.neededOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.options.neededOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.options.neededOptions().iterator();	  Iterator    it    =    options.neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
141	[BUG]  [BUGGY]  ListIterator  it  =  options.helpRequiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpRequiredOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.helpRequiredOptions.iterator();	  ListIterator    it    =    options.requireRequiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
142	[BUG]  [BUGGY]  Options  option  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Options  option  =(Option)iterator.next();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Options  option  =(Option)iterator.next();	  Options    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
143	[BUG]  [BUGGY]  Option  option  =  it.next().opts().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  it.next().opts().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  it.next().opts().iterator();	  Option    option    =    options.opts().iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
144	[BUG]  [BUGGY]  Option  option  =  options.getOption(it.next()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(it.next()  +  1);  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.getOption(it.next()  +  1);	  Option    option    =    options.getOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
145	[BUG]  [BUGGY]  Iterator  it  =  options.getRequires().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.getRequires().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.getRequires().iterator();	  Iterator    it    =    options.helpRequires().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
146	[BUG]  [BUGGY]  Iterator  it  =  options.allRequires().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.allRequires().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.allRequires().iterator();	  Iterator    it    =    options.helpRequires().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
147	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.helpOptions.iterator();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
148	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requireOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.requireOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options.requireOptions().iterator();	  ListIterator    it    =    options.requireOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
149	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.requiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.options.requiredOptions().iterator();	  ListIterator    it    =    options.requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
150	[BUG]  [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.getRequiredOptions().iterator();	  Iterator    it    =    options.helpRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
151	[BUG]  [BUGGY]  Option  option  =(Option)it.getAssignedValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)it.getAssignedValue();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =(Option)it.getAssignedValue();	  Option    option    =(Option)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
152	[BUG]  [BUGGY]  Option  option  =  it.next(),  options.helpOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  it.next(),  options.helpOption(options);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  it.next(),  options.helpOption(options);	  Option    option    =    it.next(),    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
153	[BUG]  [BUGGY]  Option  option  =  options.addOption(str,  it);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(str,  it);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(str,  it);	  Option    option    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
154	[BUG]  [BUGGY]  Option  option  =  options.addOption(str,  option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(str,  option);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.addOption(str,  option);	  Option    option    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
155	[BUG]  [BUGGY]  Option  opt  =  it.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  it.next();  [BUGGY]      opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  opt  =  it.next();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
156	[BUG]  [BUGGY]  Iterator  it  =  requiredOptions.listIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  requiredOptions.listIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  requiredOptions.listIterator();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
157	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.requiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.requiredOptions();	  Iterator    it    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
158	[BUG]  [BUGGY]  Iterator  it  =  options.options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.options.requiresOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Iterator  it  =  options.options.requiresOptions().iterator();	  Iterator    it    =    options.requiresOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
159	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions(it.next());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions(it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.addOptions(it.next());	  ListIterator    it    =    options.addOptions(requiredOptions.listIterator());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
160	[BUG]  [BUGGY]  ListIterator  it  =  options.helpIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpIterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	ListIterator  it  =  options.helpIterator();	  ListIterator    it    =    options.requireIterator();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
161	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t).iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(t).iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(t).iterator();	  Option    option    =    options.getOption(t).iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
162	[BUG]  [BUGGY]  Option  option  =  options.helpOption(it.getKey());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOption(it.getKey());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	150	150	1	replace	Option  option  =  options.helpOption(it.getKey());	  Option    option    =    options.helpOption(it.next());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
