bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
2	[BUG]  [BUGGY]  for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
3	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
4	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(t.equals(iterator.next()))  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(t.equals(iterator.next()))  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(t.equals(iterator.next()))  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
6	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t);  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
7	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t,  iterator.next());  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t,  iterator.next());  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t,  iterator.next());  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
8	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  cmd.addArg(t);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  cmd.addArg(t);  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
9	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t[iter.next().toString());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t[iter.next().toString());  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    Option  option  =  options.getOption(t);  if(option!=  null)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(t[iter.next().toString());  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
10	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Option  option  =  options.getOption(t);  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    Option  option  =  options.getOption(t);		non-compiled	[CE]  illegal  start  of  type	57	None	add
11	[BUG]  [BUGGY]    Iterator  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Iterator  iterator  =  options.iterator();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    Iterator  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	57	None	add
12	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Option  option  =  options.getOption(t);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    Option  option  =  options.getOption(t);  if(option!=  null)  {  cmd.addArg(option);  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
13	[BUG]  [BUGGY]    ListIterator  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    ListIterator  iterator  =  options.iterator();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    ListIterator  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	57	None	add
14	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  if(option  ==  null)  {  cmd.addArg(option);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Option  option  =  options.getOption(t);  if(option  ==  null)  {  cmd.addArg(option);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    Option  option  =  options.getOption(t);  if(option  ==  null)  {  cmd.addArg(option);  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
15	[BUG]  [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	ListIterator  iterator  =  options.values().iterator();	}  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
16	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  ListIterator  iterator  =  options.listIterator();  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	ListIterator  iterator  =  options.listIterator();	}  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
17	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(iterator.next());  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    if(!stopAtNonOption)  {  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  cmd.addArg(iterator.next());  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
18	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  cmd.addArg(it.next());  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  cmd.addArg(it.next());  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    if(!stopAtNonOption)  {  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  cmd.addArg(it.next());  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
19	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  cmd.addArg(it.next());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  cmd.addArg(it.next());  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    if(!stopAtNonOption)  {  for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  cmd.addArg(it.next());  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
20	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  cmd.addArg(it.next().getKey());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  cmd.addArg(it.next().getKey());  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    if(!stopAtNonOption)  {  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  cmd.addArg(it.next().getKey());  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
21	[BUG]  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  cmd.addArg(it.next().getKey());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    if(!stopAtNonOption)  {  for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  cmd.addArg(it.next().getKey());  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	    if(!stopAtNonOption)  {  for(Iterator  it  =  arguments.iterator();  it.hasNext();)  {  cmd.addArg(it.next().getKey());  }		non-compiled	[CE]  illegal  start  of  type	57	None	add
22	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(t);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(t);  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	235	235	1	replace	Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(t);	}  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
