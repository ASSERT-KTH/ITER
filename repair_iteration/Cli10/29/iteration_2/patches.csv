bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  processProperties(options,  iterator,  properties);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  iterator,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  iterator,  properties);	  processProperties(properties,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
2	[BUG]  [BUGGY]  processProperties(properties,  iterator,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  options,  stopAtNonOption);	  processProperties(properties,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
3	[BUG]  [BUGGY]  processOptions(options,  iterator,  properties);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  iterator,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  iterator,  properties);	  processProperties(properties,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
4	[BUG]  [BUGGY]  processProperties(properties,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  arguments);	  processProperties(properties,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator,  eatTheRest);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  iterator,  eatTheRest);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  iterator,  eatTheRest);	  Option    option    =    options.getOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  iterator,  arguments);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  iterator,  arguments);	  Option    option    =    options.getOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator,  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  iterator,  str);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  iterator,  str);	  Option    option    =    options.getOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
8	[BUG]  [BUGGY]  parse(properties,  str,  t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  str,  t);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  str,  t);	  parse(properties,    str);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
9	[BUG]  [BUGGY]  parse(properties,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  arguments);	  parse(properties,    str);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
10	[BUG]  [BUGGY]  parse(properties,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  str,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  str,  stopAtNonOption);	  parse(properties,    str);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
11	[BUG]  [BUGGY]  parse(properties,  t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  t,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  t,  stopAtNonOption);	  parse(properties,    t);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
12	[BUG]  [BUGGY]  parse(properties,  t,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  t,  null);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  t,  null);	  parse(properties,    t);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
13	[BUG]  [BUGGY]  processOption(properties,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOption(properties,  stopAtNonOption,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOption(properties,  stopAtNonOption,  arguments);	  processOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
14	[BUG]  [BUGGY]  processOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOption(options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOption(options,  stopAtNonOption);	  processOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
15	[BUG]  [BUGGY]  processOption(properties,  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOption(properties,  stopAtNonOption,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOption(properties,  stopAtNonOption,  options);	  processOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
16	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }	  processProperties(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
17	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  processProperties(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
18	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }  else  {  cmd.addArg(arguments[0]);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }  else  {  cmd.addArg(arguments[0]);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(options,  stopAtNonOption);  }  else  {  cmd.addArg(arguments[0]);  }	  processProperties(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
19	[BUG]  [BUGGY]  tryFailedToParse(options,  stopAtNonOption)  {  processOptions(properties);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  tryFailedToParse(options,  stopAtNonOption)  {  processOptions(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	tryFailedToParse(options,  stopAtNonOption)  {  processOptions(properties);  }	  if(stopAtNonOption)    {    processOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
20	[BUG]  [BUGGY]  tryFailedToParse(options,  str,  stopAtNonOption)  {  processOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  tryFailedToParse(options,  str,  stopAtNonOption)  {  processOptions(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	tryFailedToParse(options,  str,  stopAtNonOption)  {  processOptions(properties);  }	  if(stopAtNonOption)    {    processOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
21	[BUG]  [BUGGY]  processOptions(options,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  properties,  stopAtNonOption);	  processOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processOptions(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processOptions(properties,  stopAtNonOption);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processOptions(properties,  stopAtNonOption);  }	  processOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  processOptions(properties,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  stopAtNonOption,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  stopAtNonOption,  arguments);	  processOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  processOptions(options,  iterator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  iterator);	  processOptions(options);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
25	[BUG]  [BUGGY]  processOptions(iterator,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(iterator,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(iterator,  properties,  stopAtNonOption);	  processOptions(iterator,    properties);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
26	[BUG]  [BUGGY]  processOptions(iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(iterator,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(iterator,  arguments);	  processOptions(iterator,    properties);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
27	[BUG]  [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  iterator  =  opts.values().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  cmd  =  options.getOption(t,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  cmd  =  options.getOption(t,  arguments);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  cmd  =  options.getOption(str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  cmd  =  options.getOption(str);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  cmd  =  options.getOption(t,  stopAtNonOption);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  cmd  =  options.getOption(t,  str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  cmd  =  options.getOption(t,  str);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
32	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  iterator  =  this.options.iterator();	  ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
33	[BUG]  [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  iterator  =  options.values().iterator();	  ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
34	[BUG]  [BUGGY]  ListIterator  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  iterator  =  opts.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  iterator  =  opts.iterator();	  ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
35	[BUG]  [BUGGY]  options.processProperties(properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  options.processProperties(properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	options.processProperties(properties,  stopAtNonOption);	  options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
36	[BUG]  [BUGGY]  options.processProperties(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  options.processProperties(options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	options.processProperties(options);	  options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
37	[BUG]  [BUGGY]  options.processOptions(properties);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  options.processOptions(properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	options.processOptions(properties);	  options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
38	[BUG]  [BUGGY]  parse(iterator,  properties);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(iterator,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(iterator,  properties);	  parse(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  parse(properties,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  iterator,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  iterator,  stopAtNonOption);	  parse(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
40	[BUG]  [BUGGY]  parse(properties,  iterator,  t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  iterator,  t);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  iterator,  t);	  parse(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
41	[BUG]  [BUGGY]  parse(properties,  iterator,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  iterator,  str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  iterator,  str);	  parse(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  processRequiredOptions(properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processRequiredOptions(properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processRequiredOptions(properties);	  if(stopAtNonOption)    {    processRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
43	[BUG]  [BUGGY]  tehnicătehnică  if(stopAtNonOption)  {  processRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  tehnicătehnică  if(stopAtNonOption)  {  processRequiredOptions(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	tehnicătehnică  if(stopAtNonOption)  {  processRequiredOptions(properties);  }	  if(stopAtNonOption)    {    processRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
44	[BUG]  [BUGGY]  processRequiredOptions(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processRequiredOptions(options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processRequiredOptions(options);	  if(stopAtNonOption)    {    processRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
45	[BUG]  [BUGGY]  processProperties(options,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  arguments,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  arguments,  stopAtNonOption);	  processProperties(options,    properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  processProperties(options,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  options,  stopAtNonOption);	  processProperties(options,    properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  processProperties(options,  properties,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  properties,  stopAtNonOption,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  properties,  stopAtNonOption,  iterator);	  processProperties(options,    properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  opts.values().iterator();	  Iterator    <    String>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption,  arguments);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  blockAtNonOption);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  blockAtNonOption);	  Option    option    =    options.getOption(t,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
51	[BUG]  [BUGGY]  String  str  =(String)iterator.getValue();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.getValue();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.getValue();	  String    str    =(String)iterator.clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
52	[BUG]  [BUGGY]  processProperties(properties,  iterator,  t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  t,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  t,  stopAtNonOption);	  processProperties(properties,    iterator,    t);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
53	[BUG]  [BUGGY]  processProperties(properties,  iterator,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  str);	  processProperties(properties,    iterator,    t);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
54	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  processRequiredOptions(options);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(!stopAtNonOption)  {  processRequiredOptions(options);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(!stopAtNonOption)  {  processRequiredOptions(options);  }	  if(!stopAtNonOption)    {    processRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
55	[BUG]  [BUGGY]  processProperties(iterator,  stopAtNonOption,  properties);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(iterator,  stopAtNonOption,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(iterator,  stopAtNonOption,  properties);	  processProperties(properties,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
56	[BUG]  [BUGGY]  processProperties(iterator,  stopAtNonOption,  property);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(iterator,  stopAtNonOption,  property);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(iterator,  stopAtNonOption,  property);	  processProperties(properties,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
57	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  processProperties(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ||  stopAtNonOption)  {  processProperties(properties,  stopAtNonOption);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	||  stopAtNonOption)  {  processProperties(properties,  stopAtNonOption);  }	  if(stopAtNonOption)    {    processProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
58	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  processProperties(properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ||  stopAtNonOption)  {  processProperties(properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	||  stopAtNonOption)  {  processProperties(properties,  stopAtNonOption);	  if(stopAtNonOption)    {    processProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(stopAtNonOption);	  if(stopAtNonOption)    {    processProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
60	[BUG]  [BUGGY]  Ilerator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Ilerator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Ilerator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());	  Iterator    <    String>    iterator    =    options.iterator();    while(iterator.hasNext())    {    cmd.addArg(iterator.next());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
61	[BUG]  [BUGGY]  String  str  =(String)iterator.getKey();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.getKey();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.getKey();	  String    str    =(String)iterator.getIterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.processProperties(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processProperties(options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processProperties(options);	  if(options    ==    null)    {    processProperties(options);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
63	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  this.options.values().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  this.options.values().iterator();	  Iterator    <    String>    iterator    =    this.options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
64	[BUG]  [BUGGY]  parse(t,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(t,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(t,  properties,  stopAtNonOption);	  parse(t,    properties);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  parse(t,  iterator,  properties);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(t,  iterator,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(t,  iterator,  properties);	  parse(t,    properties);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  parse(t,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(t,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(t,  arguments);	  parse(t,    properties);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
67	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processOptions(opt);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processOptions(opt);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processOptions(opt);  }	  processOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
68	[BUG]  [BUGGY]  if(stopAtNonOption)processOptions(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)processOptions(opt);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)processOptions(opt);	  processOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
69	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processOptions(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processOptions(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processOptions(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  processOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
70	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  this.arguments.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  this.arguments.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
71	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  opt  =  options.getOption(t,  stopAtNonOption);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  Option  opt  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  opt  =  options.getOption(str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  opt  =  options.getOption(str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
73	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  eatTheRest);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  opt  =  options.getOption(t,  eatTheRest);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
74	[BUG]  [BUGGY]  String  str  =(String)iterator.nextToken()  + "n ";  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.nextToken()  + "n ";  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.nextToken()  + "n ";	  String    str    =(String)iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  ListIterator  <  String>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  <  String>  iterator  =  options.values().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  <  String>  iterator  =  options.values().iterator();	  ListIterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
76	[BUG]  [BUGGY]  ListIterator  <  String>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  <  String>  iterator  =  options.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  <  String>  iterator  =  options.iterator();	  ListIterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
77	[BUG]  [BUGGY]  ListIterator  <  String>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  <  String>  iterator  =  opts.keySet().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  <  String>  iterator  =  opts.keySet().iterator();	  ListIterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
78	[BUG]  [BUGGY]  parseOption(properties,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(properties,  stopAtNonOption,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(properties,  stopAtNonOption,  arguments);	  parseOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
79	[BUG]  [BUGGY]  parseOption(t,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(t,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(t,  properties,  stopAtNonOption);	  parseOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
80	[BUG]  [BUGGY]  parseOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(options,  stopAtNonOption);	  parseOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
81	[BUG]  [BUGGY]  parse(properties,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  stopAtNonOption,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  stopAtNonOption,  arguments);	  parseOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
82	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  if(option  ==  null)  {  cmd.addArg(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  str);  if(option  ==  null)  {  cmd.addArg(option);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  str);  if(option  ==  null)  {  cmd.addArg(option);  }	  Option    option    =    options.getOption(t,    arguments);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
83	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  this.opts.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
84	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  t.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  t.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
85	[BUG]  [BUGGY]  parseOptions(iterator,  properties);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(iterator,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(iterator,  properties);	  parseOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
86	[BUG]  [BUGGY]  parseOptions(properties,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(properties,  iterator,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(properties,  iterator,  stopAtNonOption);	  parseOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
87	[BUG]  [BUGGY]  parseOptions(options,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(options,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(options,  iterator);	  parseOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
88	[BUG]  [BUGGY]  parseOptions(properties,  iterator,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(properties,  iterator,  t);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(properties,  iterator,  t);	  parseOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.processProperties(properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processProperties(properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processProperties(properties,  stopAtNonOption);	  Option    option    =    options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.processOptions(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processOptions(options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processOptions(options);	  Option    option    =    options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
91	[BUG]  [BUGGY]  Option  option  =  options.processProperties(properties,  t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processProperties(properties,  t);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processProperties(properties,  t);	  Option    option    =    options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
92	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(t,    arguments);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  arguments,  eatTheRest);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  arguments,  eatTheRest);	  Option    option    =    options.getOption(t,    arguments);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
94	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  this.arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  this.arguments);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  this.arguments);	  Option    option    =    options.getOption(t,    arguments);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
95	[BUG]  [BUGGY]  Ilerator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Ilerator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Ilerator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());  }	  Iterator    <    String>    iterator    =    options.iterator();    while(iterator.hasNext())    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
96	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  opts.iterator();  while(iterator.hasNext())  {  cmd.addArg(iterator.next());  }	  Iterator    <    String>    iterator    =    options.iterator();    while(iterator.hasNext())    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
97	[BUG]  [BUGGY]  parseOptions(properties,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(properties,  stopAtNonOption,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(properties,  stopAtNonOption,  arguments);	  parseOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
98	[BUG]  [BUGGY]  parseOptions(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(options,  stopAtNonOption);	  parseOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  parseOptions(properties,  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(properties,  stopAtNonOption,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(properties,  stopAtNonOption,  options);	  parseOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
100	[BUG]  [BUGGY]  tehnicăProperties(properties);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  tehnicăProperties(properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	tehnicăProperties(properties);	  if(stopAtNonOption)    {    processProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
101	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  iterator,  eatTheRest);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  iterator,  eatTheRest);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(properties,  iterator,  eatTheRest);  }	  processProperties(properties,    iterator,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
102	[BUG]  [BUGGY]  processProperties(iterator,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(iterator,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(iterator,  properties,  stopAtNonOption);	  processProperties(properties,    iterator,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
103	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  iterator,  eatTheRest);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  iterator,  eatTheRest);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(properties,  iterator,  eatTheRest);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  processProperties(properties,    iterator,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
104	[BUG]  [BUGGY]  if(options!=  null)  {  processProperties(properties,  options);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(options!=  null)  {  processProperties(properties,  options);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(options!=  null)  {  processProperties(properties,  options);  }	  processProperties(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
105	[BUG]  [BUGGY]  processOptions(options,  properties);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  properties);	  processProperties(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
106	[BUG]  [BUGGY]  processProperties(properties,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  options,  stopAtNonOption);	  processProperties(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
107	[BUG]  [BUGGY]  processOptions(properties,  options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  options);	  processProperties(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
108	[BUG]  [BUGGY]  Options  option  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Options  option  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Options  option  =  options.getOption(t,  stopAtNonOption);	  Option    option    =    options.getOption(t,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
109	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  StopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  StopAtNonOption);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  StopAtNonOption);	  Option    option    =    options.getOption(t,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
110	[BUG]  [BUGGY]  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  options.getOption(t,  stopAtNonOption);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	options.getOption(t,  stopAtNonOption);	  Option    option    =    options.getOption(t,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
111	[BUG]  [BUGGY]  parse(properties,  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  stopAtNonOption,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  stopAtNonOption,  options);	  parse(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
112	[BUG]  [BUGGY]  parse(properties,  stopAtNonOption,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  stopAtNonOption,  t);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  stopAtNonOption,  t);	  parse(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
113	[BUG]  [BUGGY]  processOptions(properties,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  iterator,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  iterator,  stopAtNonOption);	  processOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
114	[BUG]  [BUGGY]  processOptions(properties,  iterator,  t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  iterator,  t);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  iterator,  t);	  processOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
115	[BUG]  [BUGGY]  Iterator  iterator  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  iterator  =  this.arguments.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  iterator  =  this.arguments.iterator();	  Iterator    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
116	[BUG]  [BUGGY]  parse(options,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(options,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(options,  arguments);	  parse(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
117	[BUG]  [BUGGY]  parse(options,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(options,  str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(options,  str);	  parse(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
118	[BUG]  [BUGGY]  parse(options,  iterator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(options,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(options,  iterator);	  parse(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
119	[BUG]  [BUGGY]  parse(properties,  opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  opt);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  opt);	  parse(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
120	[BUG]  [BUGGY]  parse(options,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(options,  opt);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(options,  opt);	  parse(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
121	[BUG]  [BUGGY]  processOptions(options,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  options,  stopAtNonOption);	  processOptions(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
122	[BUG]  [BUGGY]  processOptions(options,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  arguments,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  arguments,  stopAtNonOption);	  processOptions(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
123	[BUG]  [BUGGY]  processOptions(options,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  options);	  processOptions(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
124	[BUG]  [BUGGY]  ||  eatTheRest)  {  processProperties(properties);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ||  eatTheRest)  {  processProperties(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	||  eatTheRest)  {  processProperties(properties);  }	  ||!stopAtNonOption)    {    processProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
125	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  processProperties(properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ||  stopAtNonOption)  {  processProperties(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	||  stopAtNonOption)  {  processProperties(properties);  }	  ||!stopAtNonOption)    {    processProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
126	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  processRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ||  stopAtNonOption)  {  processRequiredOptions(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	||  stopAtNonOption)  {  processRequiredOptions(properties);  }	  ||!stopAtNonOption)    {    processProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
127	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  properties.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  properties.keySet().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  properties.keySet().iterator();	  Iterator    <    String>    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
128	[BUG]  [BUGGY]  parseOptions(options,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(options,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(options,  arguments);	  parseOptions(options);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
129	[BUG]  [BUGGY]  parseOptions(options,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(options,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(options,  options);	  parseOptions(options);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
130	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processOptions(opt,  properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processOptions(opt,  properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processOptions(opt,  properties);  }	  processOptions(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
131	[BUG]  [BUGGY]  processOptions(options,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  arguments);	  processOptions(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
132	[BUG]  [BUGGY]  if(stopAtNonOption)processOptions(opt,  properties);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)processOptions(opt,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)processOptions(opt,  properties);	  processOptions(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
133	[BUG]  [BUGGY]  options.processOptions(options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  options.processOptions(options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	options.processOptions(options);	  if(options!=    null)    {    processOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.processOption(options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processOption(options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processOption(options);	  if(options!=    null)    {    processOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
135	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  :  arguments;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.next()  :  arguments;  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.next()  :  arguments;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
136	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  :  this;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.next()  :  this;  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.next()  :  this;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
137	[BUG]  [BUGGY]  Iterator  iterator  =  this.properties.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  iterator  =  this.properties.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  iterator  =  this.properties.iterator();	  Iterator    iterator    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
138	[BUG]  [BUGGY]  ||  options!=  null)  {  processProperties(options);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ||  options!=  null)  {  processProperties(options);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	||  options!=  null)  {  processProperties(options);  }	  if(options!=    null)    {    processProperties(options);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
139	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  argument);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  argument);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  argument);  if(option!=  null)  {  cmd.addArg(option);  }	  Option    option    =    options.getOption(t,    str);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
140	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  arguments);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  str,  arguments);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  str,  arguments);  if(option!=  null)  {  cmd.addArg(option);  }	  Option    option    =    options.getOption(t,    str);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
141	[BUG]  [BUGGY]  processProperties(properties,  iterator,  neededOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  neededOptions,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  neededOptions,  stopAtNonOption);	  processProperties(properties,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
142	[BUG]  [BUGGY]  processProperties(properties,  iterator,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  requiredOptions,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  requiredOptions,  stopAtNonOption);	  processProperties(properties,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
143	[BUG]  [BUGGY]  processProperties(options,  iterator,  neededOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  iterator,  neededOptions);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  iterator,  neededOptions);	  processProperties(properties,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
144	[BUG]  [BUGGY]  processOptions(properties,  iterator,  neededOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  iterator,  neededOptions);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  iterator,  neededOptions);	  processProperties(properties,    iterator,    neededOptions);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
145	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  str,  stopAtNonOption);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
146	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  str,  eatTheRest);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  str,  eatTheRest);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
147	[BUG]  [BUGGY]  processProperties(options,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  iterator,  requiredOptions);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  iterator,  requiredOptions);	  processProperties(properties,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
148	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  iterator  =  this.requiredOptions.iterator();	  Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
149	[BUG]  [BUGGY]  if(stopAtNonOption)processOptions(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)processOptions(options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)processOptions(options);	  if(stopAtNonOption)processOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
150	[BUG]  [BUGGY]  if(stopAtNonOption)processOptions(properties,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)processOptions(properties,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)processOptions(properties,  iterator);	  if(stopAtNonOption)processOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
151	[BUG]  [BUGGY]  if(stopAtNonOption)processOptions(cmd);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)processOptions(cmd);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)processOptions(cmd);	  if(stopAtNonOption)processOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
152	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(str,  stopAtNonOption);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
153	[BUG]  [BUGGY]  Option  option  =  opts.getOption(str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  opts.getOption(str);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  opts.getOption(str);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
154	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  cmd.getOption(str);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  cmd.getOption(str);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
155	[BUG]  [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  iterator  =  opts.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
156	[BUG]  [BUGGY]  processProperties(properties,  iterator,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  stopAtNonOption,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  stopAtNonOption,  arguments);	  processProperties(properties,    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
157	[BUG]  [BUGGY]  processProperties(options,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  iterator,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  iterator,  stopAtNonOption);	  processProperties(properties,    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
158	[BUG]  [BUGGY]  processProperties(properties,  iterator,  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  stopAtNonOption,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  stopAtNonOption,  options);	  processProperties(properties,    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
159	[BUG]  [BUGGY]  Option  option  =  options.processOptions(properties);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processOptions(properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processOptions(properties);	  if(options!=    null)    {    processOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
160	[BUG]  [BUGGY]  processProperties(options,  options,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  options,  stopAtNonOption,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  options,  stopAtNonOption,  arguments);	  processProperties(options,    properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
161	[BUG]  [BUGGY]  parseOptions(options,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(options,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(options,  properties,  stopAtNonOption);	  processProperties(options,    properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
162	[BUG]  [BUGGY]  Iterator  iterator  =  optionOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  iterator  =  optionOptions.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  iterator  =  optionOptions.iterator();	  Iterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
163	[BUG]  [BUGGY]  processOptions(options,  iterator,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  iterator,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  iterator,  stopAtNonOption);	  processProperties(properties,    iterator,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
164	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  iterator);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  iterator);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(properties,  iterator);  }	  if(stopAtNonOption)    {    processProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
165	[BUG]  [BUGGY]  processProperties(options,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  stopAtNonOption,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  stopAtNonOption,  iterator);	  processProperties(properties,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
166	[BUG]  [BUGGY]  processOptions(properties,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  stopAtNonOption,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  stopAtNonOption,  iterator);	  processProperties(properties,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
167	[BUG]  [BUGGY]  Option  option  =  options.processOptions(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processOptions(opt);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processOptions(opt);	  Option    option    =    options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
168	[BUG]  [BUGGY]  Option  option  =  options.getOption( "opt ");  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption( "opt ");  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption( "opt ");	  if(options!=    null)    {    processOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
169	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  iterator,  requiredOptions);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  iterator,  requiredOptions);	  Option    option    =    options.getOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
170	[BUG]  [BUGGY]  parse(properties,  iterator,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  iterator,  eatTheRest);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  iterator,  eatTheRest);	  parse(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
171	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  processRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ||!stopAtNonOption)  {  processRequiredOptions(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	||!stopAtNonOption)  {  processRequiredOptions(properties);  }	  ||!stopAtNonOption)    {    processProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
172	[BUG]  [BUGGY]  if(options!=  null)  {  processProperties(properties,  options);  }  else  {  cmd.addArg(arguments[0]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(options!=  null)  {  processProperties(properties,  options);  }  else  {  cmd.addArg(arguments[0]);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(options!=  null)  {  processProperties(properties,  options);  }  else  {  cmd.addArg(arguments[0]);  }	  processProperties(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
173	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
174	[BUG]  [BUGGY]  parseOptions(opt,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(opt,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(opt,  properties,  stopAtNonOption);	  parseOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
175	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopsAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  stopsAtNonOption);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  stopsAtNonOption);	  Option    option    =    options.getOption(t,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
176	[BUG]  [BUGGY]  processOptions(properties,  iterator,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  iterator,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  iterator,  options);	  processProperties(properties,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
177	[BUG]  [BUGGY]  processOptions(options,  iterator,  property);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  iterator,  property);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  iterator,  property);	  processProperties(properties,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
178	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  block);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  block);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  block);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
179	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  this.options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  this.options);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  this.options);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
180	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  iterator  =  options.keySet().iterator();	  ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
181	[BUG]  [BUGGY]  parseOption(opt,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(opt,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(opt,  properties,  stopAtNonOption);	  parseOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
182	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processRequiredOptions(options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processRequiredOptions(options);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processRequiredOptions(options);  }	  if(stopAtNonOption)    {    processRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
183	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processRequiredOptions(cmd);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processRequiredOptions(cmd);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processRequiredOptions(cmd);  }	  if(stopAtNonOption)    {    processRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
184	[BUG]  [BUGGY]  parseOptions(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(opt);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(opt);	  processOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
185	[BUG]  [BUGGY]  parse(t,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(t,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(t,  options);	  parse(t,    properties);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
186	[BUG]  [BUGGY]  parse(options,  t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(options,  t);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(options,  t);	  parse(t,    properties);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
187	[BUG]  [BUGGY]  parseOptions(opt,  properties);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(opt,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(opt,  properties);	  processOptions(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
188	[BUG]  [BUGGY]  parse(t,  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(t,  str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(t,  str);	  parse(properties,    str);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
189	[BUG]  [BUGGY]  parse(properties,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  options);	  parse(properties,    str);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
190	[BUG]  [BUGGY]  processOption(opt,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOption(opt,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOption(opt,  properties,  stopAtNonOption);	  processOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
191	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  cmd  =  options.getOption(t,  eatTheRest);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  cmd  =  options.getOption(t,  eatTheRest);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
192	[BUG]  [BUGGY]  processOptions(opt,  properties,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(opt,  properties,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(opt,  properties,  stopAtNonOption);	  processOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
193	[BUG]  [BUGGY]  processOptions(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(opt,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(opt,  stopAtNonOption);	  processOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
194	[BUG]  [BUGGY]  processOptions(opt,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(opt,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(opt,  iterator);	  processOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
195	[BUG]  [BUGGY]  processOptions(opt,  properties,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(opt,  properties,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(opt,  properties,  iterator);	  processOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
196	[BUG]  [BUGGY]  parse(options,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(options,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(options,  properties);	  parse(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
197	[BUG]  [BUGGY]  Iterator  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  iterator  =  opt.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  iterator  =  opt.iterator();	  Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
198	[BUG]  [BUGGY]  String  str  =(String)iterator.require();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.require();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.require();	  String    str    =(String)iterator.getIterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
199	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  eatTheRest);  if(option!=  null)  {  cmd.addArg(option);  }	  Option    option    =    options.getOption(t,    str);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
200	[BUG]  [BUGGY]  parse(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(options,  stopAtNonOption);	  parse(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
201	[BUG]  [BUGGY]  ListIterator  <  String>  iterator  =  options.keyList().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  <  String>  iterator  =  options.keyList().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  <  String>  iterator  =  options.keyList().iterator();	  ListIterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
202	[BUG]  [BUGGY]  ListIterator  <  String>  iterator  =  options.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  <  String>  iterator  =  options.options.keySet().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  <  String>  iterator  =  options.options.keySet().iterator();	  ListIterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
203	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processRequiredOptions(properties,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processRequiredOptions(properties,  stopAtNonOption);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processRequiredOptions(properties,  stopAtNonOption);  }	  if(stopAtNonOption)    {    processProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
204	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  blockAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  blockAtNonOption);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(properties,  blockAtNonOption);  }	  if(stopAtNonOption)    {    processProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
205	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  null);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  null);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  null);  if(option!=  null)  {  cmd.addArg(option);  }	  Option    option    =    options.getOption(t,    arguments);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
206	[BUG]  [BUGGY]  String  str  =(String)iterator.nextToken()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.nextToken()  +  1;  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.nextToken()  +  1;	  String    str    =(String)iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
207	[BUG]  [BUGGY]  String  str  =(String)iterator.nextToken()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.nextToken()  -  1;  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.nextToken()  -  1;	  String    str    =(String)iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
208	[BUG]  [BUGGY]  options.processOptions(opt,  properties);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  options.processOptions(opt,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	options.processOptions(opt,  properties);	  options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
209	[BUG]  [BUGGY]  options.processOptions(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  options.processOptions(opt);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	options.processOptions(opt);	  options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
210	[BUG]  [BUGGY]  processProperties(options,  iterator,  eatTheRest);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  iterator,  eatTheRest);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  iterator,  eatTheRest);	  processProperties(properties,    iterator,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
211	[BUG]  [BUGGY]  Ilerator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Ilerator  iterator  =  options.keySet().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Ilerator  iterator  =  options.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
212	[BUG]  [BUGGY]  parse(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(cmd,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(cmd,  stopAtNonOption);	  parse(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
213	[BUG]  [BUGGY]  processOptions(properties,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  iterator,  requiredOptions);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  iterator,  requiredOptions);	  processProperties(properties,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
214	[BUG]  [BUGGY]  processOptions(options,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(options,  iterator,  requiredOptions);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(options,  iterator,  requiredOptions);	  processProperties(properties,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
215	[BUG]  [BUGGY]  if(options!=  null)  {  processOptions(options,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(options!=  null)  {  processOptions(options,  stopAtNonOption);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(options!=  null)  {  processOptions(options,  stopAtNonOption);  }	  processOptions(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
216	[BUG]  [BUGGY]  testOptions(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  testOptions(options,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	testOptions(options,  stopAtNonOption);	  processOptions(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
217	[BUG]  [BUGGY]  if(stopAtNonOption)processOptions(opts);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)processOptions(opts);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)processOptions(opts);	  if(stopAtNonOption)processOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
218	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  :  options;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.next()  :  options;  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.next()  :  options;	  String    str    =(String)iterator.next()    :    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
219	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  opt.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  opt.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
220	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processOptions(options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processOptions(options);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processOptions(options);  }	  if(stopAtNonOption)    {    processOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
221	[BUG]  [BUGGY]  processProperties(properties,  stopAtNonOption,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  stopAtNonOption,  iterator,  requiredOptions);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  stopAtNonOption,  iterator,  requiredOptions);	  processProperties(properties,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
222	[BUG]  [BUGGY]  processProperties(properties,  stopAtNonOption,  iterator,  neededOptions);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  stopAtNonOption,  iterator,  neededOptions);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  stopAtNonOption,  iterator,  neededOptions);	  processProperties(properties,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
223	[BUG]  [BUGGY]  parseOptions(properties,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(properties,  stopAtNonOption,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(properties,  stopAtNonOption,  iterator);	  processProperties(properties,    stopAtNonOption,    iterator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
224	[BUG]  [BUGGY]  String  str  =(String)iterator.nextToken(),  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  String  str  =(String)iterator.nextToken(),  t);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	String  str  =(String)iterator.nextToken(),  t);	  String    str    =(String)iterator.nextToken();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
225	[BUG]  [BUGGY]  processProperties(options,  properties,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  properties,  this.stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  properties,  this.stopAtNonOption);	  processProperties(options,    properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
226	[BUG]  [BUGGY]  processProperties(options,  properties,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  properties,  stopAtNonOption,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  properties,  stopAtNonOption,  arguments);	  processProperties(options,    properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
227	[BUG]  [BUGGY]  parseOption(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(opt);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(opt);	  processOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
228	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  opt  =  options.getOption(t,  str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
229	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  opt  =  options.getOption(t,  iterator);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
230	[BUG]  [BUGGY]  parse(properties,  str,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  str,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  str,  iterator);	  parse(properties,    str);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
231	[BUG]  [BUGGY]  parseOptions(properties,  stopAtNonOption,  argument);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(properties,  stopAtNonOption,  argument);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(properties,  stopAtNonOption,  argument);	  parseOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
232	[BUG]  [BUGGY]  ListIterator  <  String>  iterator  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  <  String>  iterator  =  options.getOptions().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  <  String>  iterator  =  options.getOptions().iterator();	  ListIterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
233	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  this.opts.keySet().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  this.opts.keySet().iterator();	  Iterator    <    String>    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
234	[BUG]  [BUGGY]  processProperties(properties,  iterator,  block);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  block);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  block);	  processProperties(properties,    iterator,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
235	[BUG]  [BUGGY]  processProperties(properties,  iterator,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  iterator,  blockAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  iterator,  blockAtNonOption);	  processProperties(properties,    iterator,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
236	[BUG]  [BUGGY]  parseOption(opt,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(opt,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(opt,  properties);	  parse(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
237	[BUG]  [BUGGY]  processOptions(properties,  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  stopAtNonOption,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  stopAtNonOption,  options);	  processOptions(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
238	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  stopAtNonOption,  iterator);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  stopAtNonOption,  iterator);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(properties,  stopAtNonOption,  iterator);  }	  if(stopAtNonOption)    {    processProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
239	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  block);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processProperties(properties,  block);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processProperties(properties,  block);  }	  if(stopAtNonOption)    {    processProperties(properties,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
240	[BUG]  [BUGGY]  parseOptions(properties,  iterator,  str);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(properties,  iterator,  str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(properties,  iterator,  str);	  parseOptions(properties,    iterator);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
241	[BUG]  [BUGGY]  processProperties(options,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  options);	  processProperties(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
242	[BUG]  [BUGGY]  processProperties(options,  iterator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  iterator);	  processProperties(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
243	[BUG]  [BUGGY]  processProperties(options,  properties);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(options,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(options,  properties);	  processProperties(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
244	[BUG]  [BUGGY]  Option  option  =  opt.getOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  opt.getOption(str);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  opt.getOption(str);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
245	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(str,  t);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(str,  t);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
246	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processRequiredOptions(properties,  iterator);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processRequiredOptions(properties,  iterator);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processRequiredOptions(properties,  iterator);  }	  if(!stopAtNonOption)    {    processRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
247	[BUG]  [BUGGY]  ListIterator  iterator  =  cmd.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  ListIterator  iterator  =  cmd.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	ListIterator  iterator  =  cmd.iterator();	  ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
248	[BUG]  [BUGGY]  Option  option  =  options.processProperties(properties,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processProperties(properties,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processProperties(properties,  iterator);	  Option    option    =    options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
249	[BUG]  [BUGGY]  Option  option  =  options.processProperties(properties,  block);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.processProperties(properties,  block);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.processProperties(properties,  block);	  Option    option    =    options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
250	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest,  iterator);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  eatTheRest,  iterator);	  Option    option    =    options.getOption(t,    eatTheRest);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
251	[BUG]  [BUGGY]  options.processProperties(properties,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  options.processProperties(properties,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	options.processProperties(properties,  iterator);	  options.processProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
252	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  processOptions(opt,  properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(!stopAtNonOption)  {  processOptions(opt,  properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(!stopAtNonOption)  {  processOptions(opt,  properties);  }	  processOptions(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
253	[BUG]  [BUGGY]  processOptions(properties,  opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(properties,  opt);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(properties,  opt);	  processOptions(opt,    properties);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
254	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  iterator  =  this.options.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
255	[BUG]  [BUGGY]  parseOptions(options,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOptions(options,  str,  stopAtNonOption);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOptions(options,  str,  stopAtNonOption);	  processOptions(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
256	[BUG]  [BUGGY]  parseOption(properties,  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(properties,  stopAtNonOption,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(properties,  stopAtNonOption,  options);	  parseOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
257	[BUG]  [BUGGY]  parseOption(properties,  stopAtNonOption,  argument);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(properties,  stopAtNonOption,  argument);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(properties,  stopAtNonOption,  argument);	  parseOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
258	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processOptions(properties,  iterator);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(stopAtNonOption)  {  processOptions(properties,  iterator);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(stopAtNonOption)  {  processOptions(properties,  iterator);  }	  if(stopAtNonOption)    {    processOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
259	[BUG]  [BUGGY]  tryFailedToParse(cmd,  stopAtNonOption)  {  processOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  tryFailedToParse(cmd,  stopAtNonOption)  {  processOptions(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	tryFailedToParse(cmd,  stopAtNonOption)  {  processOptions(properties);  }	  if(stopAtNonOption)    {    processOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
260	[BUG]  [BUGGY]  tryFailedToParse(cmd,  stopAtNonOption)  {  processRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  tryFailedToParse(cmd,  stopAtNonOption)  {  processRequiredOptions(properties);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	tryFailedToParse(cmd,  stopAtNonOption)  {  processRequiredOptions(properties);  }	  if(stopAtNonOption)    {    processRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
261	[BUG]  [BUGGY]  processProperties(properties,  options,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processProperties(properties,  options,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processProperties(properties,  options,  iterator);	  processProperties(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
262	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);  if(option!=  null)  {  cmd.addArg(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);  if(option!=  null)  {  cmd.addArg(option);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  arguments,  stopAtNonOption);  if(option!=  null)  {  cmd.addArg(option);  }	  Option    option    =    options.getOption(t,    arguments);    if(option!=    null)    {    cmd.addArg(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
263	[BUG]  [BUGGY]  parseOption(options,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parseOption(options,  str);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parseOption(options,  str);	  parse(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
264	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Iterator  <  String>  iterator  =  requiredOptions.iterator();	  Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
265	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  argument);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  argument);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  argument);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
266	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  iterator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  str,  iterator);  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	Option  option  =  options.getOption(t,  str,  iterator);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
267	[BUG]  [BUGGY]  parse(properties,  t,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(properties,  t,  arguments);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(properties,  t,  arguments);	  parse(properties,    t);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
268	[BUG]  [BUGGY]  if(options!=  null  &&  options.size()  >  0)  {  processProperties(options);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(options!=  null  &&  options.size()  >  0)  {  processProperties(options);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(options!=  null  &&  options.size()  >  0)  {  processProperties(options);  }	  if(options!=    null)    {    processProperties(options);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
269	[BUG]  [BUGGY]  if(options!=  null  &&  options.hasOption(t))  {  processProperties(options);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  if(options!=  null  &&  options.hasOption(t))  {  processProperties(options);  }  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	if(options!=  null  &&  options.hasOption(t))  {  processProperties(options);  }	  if(options!=    null)    {    processProperties(options);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
270	[BUG]  [BUGGY]  parse(options,  t,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  parse(options,  t,  properties);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	parse(options,  t,  properties);	  parse(t,    properties);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
271	[BUG]  [BUGGY]  processOptions(iterator,  properties,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(iterator,  properties,  t);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(iterator,  properties,  t);	  processOptions(iterator,    properties);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
272	[BUG]  [BUGGY]  processOptions(iterator,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOptions(iterator,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOptions(iterator,  options);	  processOptions(iterator,    properties);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
273	[BUG]  [BUGGY]  processOption(properties,  stopAtNonOption,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOption(properties,  stopAtNonOption,  iterator);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOption(properties,  stopAtNonOption,  iterator);	  processOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
274	[BUG]  [BUGGY]  processOption(properties,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }  }      [BUGGY]  processOption(properties,  options);  [BUGGY]      checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	237	237	1	replace	processOption(properties,  options);	  processOption(properties,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
