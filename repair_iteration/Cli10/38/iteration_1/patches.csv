bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  group  =  getOptions().getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getOption(opt,  iter);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getOption(opt,  iter);	      Option    group    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  Option  group  =  getOptions().get(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().get(opt);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().get(opt);	      Option    group    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  if(hasOption)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(hasOption)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(hasOption)  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }	      OptionGroup    group    =    getOptions().getOptionGroup(opt);    if(group.isRequired())    {    getRequiredOptions().remove(group);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =(Option)options.next();  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =(Option)options.next();	      Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Option  option  =(Option)this.options.next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =(Option)this.options.next();  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =(Option)this.options.next();	      Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =(Option)opt.next();  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =(Option)opt.next();	      Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(getOptions().getOptionGroup(opt)!=  null  ||  getOptions().contains(opt.getKey()))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(getOptions().getOptionGroup(opt)!=  null  ||  getOptions().contains(opt.getKey()))  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(getOptions().getOptionGroup(opt)!=  null  ||  getOptions().contains(opt.getKey()))  {	  if(getOptions().getOptionGroup(opt)!=    null    &&    getOptions().contains(opt.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  &&  getOptions().contains(opt.getKey()))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  &&  getOptions().contains(opt.getKey()))  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(getOptions().getOptionGroup(opt)  ==  null  &&  getOptions().contains(opt.getKey()))  {	  if(getOptions().getOptionGroup(opt)!=    null    &&    getOptions().contains(opt.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  if(getOptions().getOptionGroup(opt)!=  null  &&  getOptions().contains(opt.getValue()))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(getOptions().getOptionGroup(opt)!=  null  &&  getOptions().contains(opt.getValue()))  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(getOptions().getOptionGroup(opt)!=  null  &&  getOptions().contains(opt.getValue()))  {	  if(getOptions().getOptionGroup(opt)!=    null    &&    getOptions().contains(opt.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  if(hasOption)  {  Option  group  =  getOptions().getOptionGroup(opt);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(hasOption)  {  Option  group  =  getOptions().getOptionGroup(opt);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(hasOption)  {  Option  group  =  getOptions().getOptionGroup(opt);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }	      Option    group    =    getOptions().getOptionGroup(opt);    if(group.isRequired())    {    getRequiredOptions().remove(group);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  opt  =  getOptions().getOption(opt,  iter);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  opt  =  getOptions().getOption(opt,  iter);	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  opt  =  getOptions().getOption(option);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  opt  =  getOptions().getOption(option);	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  opt  =  getOptions().getOption(opt.getKey());  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  opt  =  getOptions().getOption(opt.getKey());	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().getOptionGroup(opt)!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().getOptionGroup(opt)!=  null)  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().getOptionGroup(opt)!=  null)  {	  if(getOptions().getOptionGroup(opt)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  if(getOptions().getOptionGroup(opt)!=  null  ||  getOptions().getOptionGroup(opt)  ==  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(getOptions().getOptionGroup(opt)!=  null  ||  getOptions().getOptionGroup(opt)  ==  null)  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(getOptions().getOptionGroup(opt)!=  null  ||  getOptions().getOptionGroup(opt)  ==  null)  {	  if(getOptions().getOptionGroup(opt)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  Option  group  =  getOptions().getGroup(opt,  iter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getGroup(opt,  iter);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getGroup(opt,  iter);	      Option    group    =    getOptions().getGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  Option  group  =  getOptions().getGroup(opt.getKey());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getGroup(opt.getKey());  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getGroup(opt.getKey());	      Option    group    =    getOptions().getGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  Option  group  =  getOptions().getGroup(option);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getGroup(option);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getGroup(option);	      Option    group    =    getOptions().getGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =  options.getOption(opt,  iter);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =  options.getOption(opt,  iter);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =  options.getOption(opt.getKey());  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =  options.getOption(opt.getKey());	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  if(hasOption  &&  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(hasOption  &&  opt.isRequired())  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(hasOption  &&  opt.isRequired())  {	  if(hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  if(hasOption  &&  iter.hasNext())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(hasOption  &&  iter.hasNext())  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(hasOption  &&  iter.hasNext())  {	  if(hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  if(hasOption  &&  group.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(hasOption  &&  group.isRequired())  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(hasOption  &&  group.isRequired())  {	  if(hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  if(hasOption  &&  opt.isSelected())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(hasOption  &&  opt.isSelected())  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(hasOption  &&  opt.isSelected())  {	  if(hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(opt,  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(opt,  iter);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	OptionGroup  group  =  getOptions().getOptionGroup(opt,  iter);	      OptionGroup    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  OptionGroup  group  =  getOptions().get(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  OptionGroup  group  =  getOptions().get(opt);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	OptionGroup  group  =  getOptions().get(opt);	      OptionGroup    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  OptionGroup  group  =  getOptions().getGroup(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  OptionGroup  group  =  getOptions().getGroup(opt);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	OptionGroup  group  =  getOptions().getGroup(opt);	      OptionGroup    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt,  iter);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =  getOptions().getOption(opt,  iter);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =  getOptions().getOption(opt,  iter);	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =  getOptions().getOption(option);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =  getOptions().getOption(option);	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =  getOptions().getOption(opt.getKey());  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =  getOptions().getOption(opt.getKey());	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  option  =(Option)iter.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  option  =(Option)iter.next();  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	option  =(Option)iter.next();	      Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  Option  option  =  getOptions().getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =  getOptions().getOptionGroup(opt);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =  getOptions().getOptionGroup(opt);	      Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(opt,  iter);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(opt,  iter);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	OptionGroup  group  =  getOptions().getOptionGroup(opt,  iter);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }	      OptionGroup    group    =    getOptions().getOptionGroup(opt);    if(group.isRequired())    {    getRequiredOptions().remove(group);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().isRequired())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().isRequired())  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().isRequired())  {	  if(getOptions().getOptionGroup(opt)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  iter);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  iter);  if(group.isRequired())  {  getRequiredOptions().remove(group);  }	      Option    group    =    getOptions().getOptionGroup(opt);    if(group.isRequired())    {    getRequiredOptions().remove(group);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(opt.getKey());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(opt.getKey());  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	OptionGroup  group  =  getOptions().getOptionGroup(opt.getKey());	      OptionGroup    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(option);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	OptionGroup  group  =  getOptions().getOptionGroup(option);	      OptionGroup    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
39	[BUG]  [BUGGY]  Option  group  =  getOptions().getOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getOption(opt.getKey());  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getOption(opt.getKey());	      Option    group    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  if(hasOption  ||  opt.isRequired())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(hasOption  ||  opt.isRequired())  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(hasOption  ||  opt.isRequired())  {	  if(hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  if(hasOption  &&  getOptions().containsKey(opt.getKey()))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(hasOption  &&  getOptions().containsKey(opt.getKey()))  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(hasOption  &&  getOptions().containsKey(opt.getKey()))  {	  if(hasOption)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =  options.getOption(opt,  requiredOptions);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =  options.getOption(opt,  requiredOptions);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().contains(opt.getKey()))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().contains(opt.getKey()))  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().contains(opt.getKey()))  {	  if(getOptions().getOptionGroup(opt)!=    null    &&    getOptions().contains(opt.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  opt  =  getOptions().getOptionGroup(opt);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  opt  =  getOptions().getOptionGroup(opt);	      Option    opt    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  Option  group  =  getOptions().getGroup(opt  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getGroup(opt  -  1);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getGroup(opt  -  1);	      Option    group    =    getOptions().getGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getKey());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt.getKey());  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getOptionGroup(opt.getKey());	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getOptionGroup(option);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getOptionGroup(option);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().contains(opt))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().contains(opt))  {  [BUGGY]    {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	if(getOptions().getOptionGroup(opt)  ==  null  ||  getOptions().contains(opt))  {	  if(getOptions().getOptionGroup(opt)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  this);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  group  =  getOptions().getOptionGroup(opt,  this);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  group  =  getOptions().getOptionGroup(opt,  this);	      Option    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  Option  option  =(Option)iter.getValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  Option  option  =(Option)iter.getValue();  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	Option  option  =(Option)iter.getValue();	      Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(opt,  this);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (opt.isRequired())  {  getRequiredOptions().remove(opt.getKey());  }      [BUGGY]  OptionGroup  group  =  getOptions().getOptionGroup(opt,  this);  [BUGGY]    if  (getOptions().getOptionGroup(opt)  !=  null)  {  {  OptionGroup  group  =  getOptions().getOptionGroup(opt);  if  (group.isRequired())  {  getRequiredOptions().remove(group);  }  group.setSelected(opt);  }  [CLASS]  Parser  [METHOD]  processOption  [RETURN_TYPE]  void  String  arg  ListIterator  iter  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  hasOption  OptionGroup  group  List  requiredOptions  tokenList  Option  opt  String  arg  ListIterator  iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	409	410	1	replace	OptionGroup  group  =  getOptions().getOptionGroup(opt,  this);	      OptionGroup    group    =    getOptions().getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
