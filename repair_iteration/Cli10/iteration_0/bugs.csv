bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return cmd; [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] { cmd.addArg(str); } } } } processProperties(properties); checkRequiredOptions(); [BUGGY] return cmd; [BUGGY] } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] { cmd.addArg(str); } } } } processProperties(properties); checkRequiredOptions(); [BUGGY] [BUGGY] return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	240	240	1	add	
3	[BUG] [BUGGY] } [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT]  while (iter.hasNext()) { buff.append(iter.next()); buff.append(", "); } throw new MissingOptionException(buff.substring(0, buff.length() - 2)); } [BUGGY] } [BUGGY]  [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT]  while (iter.hasNext()) { buff.append(iter.next()); buff.append(", "); } throw new MissingOptionException(buff.substring(0, buff.length() - 2)); } [BUGGY] [BUGGY] } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	325	325	1	add	
5	[BUG] [BUGGY] getRequiredOptions().remove(opt.getKey()); [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] + arg); }  final Option opt = getOptions().getOption(arg);   if (opt.isRequired()) { [BUGGY] getRequiredOptions().remove(opt.getKey()); [BUGGY] }   if (getOptions().getOptionGroup(opt) != null) { OptionGroup group = getOptions().getOptionGroup(opt); if (group.isRequired()) { [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] + arg); }  final Option opt = getOptions().getOption(arg);   if (opt.isRequired()) { [BUGGY] [BUGGY] getRequiredOptions().remove(opt.getKey()); }   if (getOptions().getOptionGroup(opt) != null) { OptionGroup group = getOptions().getOptionGroup(opt); if (group.isRequired()) { [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	404	404	1	add	
8	[BUG] [BUGGY] this.options = options; [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected void setOptions(final Options options) { [BUGGY] this.options = options; [BUGGY] this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	45	45	1	replace	
9	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected void setOptions(final Options options) { [BUGGY] [BUGGY] this.options = options; this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	45	45	1	add	
10	[BUG] [BUGGY] this.requiredOptions = options.getRequiredOptions(); [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected void setOptions(final Options options) { this.options = options; [BUGGY] this.requiredOptions = options.getRequiredOptions(); [BUGGY] } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	46	46	1	replace	
11	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected void setOptions(final Options options) { this.options = options; [BUGGY] [BUGGY] this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	46	46	1	add	
12	[BUG] [BUGGY] } [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected void setOptions(final Options options) { this.options = options; this.requiredOptions = options.getRequiredOptions(); [BUGGY] } [BUGGY]  [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	47	47	1	replace	
13	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected void setOptions(final Options options) { this.options = options; this.requiredOptions = options.getRequiredOptions(); [BUGGY] [BUGGY] } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	47	47	1	add	
14	[BUG] [BUGGY] return options; [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected Options getOptions() { [BUGGY] return options; [BUGGY] } [CLASS] Parser [METHOD] getOptions [RETURN_TYPE] Options  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	50	50	1	replace	
15	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected Options getOptions() { [BUGGY] [BUGGY] return options; } [CLASS] Parser [METHOD] getOptions [RETURN_TYPE] Options  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	50	50	1	add	
16	[BUG] [BUGGY] return requiredOptions; [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected List getRequiredOptions() { [BUGGY] return requiredOptions; [BUGGY] } [CLASS] Parser [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	54	54	1	replace	
17	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] protected List getRequiredOptions() { [BUGGY] [BUGGY] return requiredOptions; } [CLASS] Parser [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	54	54	1	add	
18	[BUG] [BUGGY] return parse(options, arguments, null, false); [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] return parse(options, arguments, null, false); [BUGGY] } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	85	85	1	replace	
19	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] [BUGGY] return parse(options, arguments, null, false); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	85	85	1	add	
20	[BUG] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] {  [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	replace	
21	[BUG] [BUGGY] [FE] AssertionFailedError testReuseOptionsTwice [CONTEXT] {  [BUGGY] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli10/src/java/org/apache/commons/cli/Parser.java	0.4472135954999579	149	149	1	add	
