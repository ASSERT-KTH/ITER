bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(outline)  {  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  if(outline)  {  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  }  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	if(outline)  {  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  }	          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,    height));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  final  Path  path  =  new  Path(shape.getPaint());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  final  Path  path  =  new  Path(shape.getPaint());  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	final  Path  path  =  new  Path(shape.getPaint());	  return    path    ==    null?    null    :    new    Icon()    {    Path    path    =    new    Path(shape.getPaint());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =  new  Path(shape);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =  new  Path(shape);  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return    path!=    null?    null    :    new    Icon()    {    Path  path  =  new  Path(shape);	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
4	[BUG]  [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =  new  Path(shape.getPaint());  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =  new  Path(shape.getPaint());  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return    path!=    null?    null    :    new    Icon()    {    Path  path  =  new  Path(shape.getPaint());	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
5	[BUG]  [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =  new  Path(shape.getBounds());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =  new  Path(shape.getBounds());  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return    path!=    null?    null    :    new    Icon()    {    Path  path  =  new  Path(shape.getBounds());	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
6	[BUG]  [BUGGY]  return  path  ==  null?  null  :  new  Icon()  {  path!=  null?  null  :  new  Icon()  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path  ==  null?  null  :  new  Icon()  {  path!=  null?  null  :  new  Icon()  {  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return  path  ==  null?  null  :  new  Icon()  {  path!=  null?  null  :  new  Icon()  {	  return    path    ==    null?    null    :    new    Icon()    {    path    ==    null?    null    :    new    Icon()    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
7	[BUG]  [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =(Paint)path.clone();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =(Paint)path.clone();  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return  path!=  null?  null  :  new  Icon()  {  Path  path  =(Paint)path.clone();	  return    path    ==    null?    null    :    new    Icon()    {    Path    path    =(Paint)path.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
8	[BUG]  [BUGGY]  Path  path  =  new  Path(shape,  width);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  Path  path  =  new  Path(shape,  width);  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	Path  path  =  new  Path(shape,  width);	  Path    path    =    new    Path(shape,    outline);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	add	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    width));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));	  	compilable	  [FE]  AssertionFailedError  	12	1	add
10	[BUG]  [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    width));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));	  	compilable	  [FE]  AssertionFailedError  	12	1	add
11	[BUG]  [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transformed(AffineTransform.getTranslateInstance(width,  width));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transformed(AffineTransform.getTranslateInstance(width,  width));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    width));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transformed(AffineTransform.getTranslateInstance(width,  width));	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
12	[BUG]  [BUGGY]  return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(width);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(width);  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(width);	  return    path    ==    null?    null    :    new    Icon()    {    Path    path    =    new    Path(shape);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
13	[BUG]  [BUGGY]  final  Path  path  =(path  ==  null?  null  :  new  Icon())  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  final  Path  path  =(path  ==  null?  null  :  new  Icon())  {  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	final  Path  path  =(path  ==  null?  null  :  new  Icon())  {	  return    path    ==    null?    null    :    new    Icon()    {    Path    path    =(path    ==    null?    null    :    new    Icon())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
14	[BUG]  [BUGGY]  Path  path  =  new  Path(shape,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  Path  path  =  new  Path(shape,  height);  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	Path  path  =  new  Path(shape,  height);	  Path    path    =    new    Path(width,    height);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  Path  path  =  new  Path(width,  height  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  Path  path  =  new  Path(width,  height  -  1);  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	Path  path  =  new  Path(width,  height  -  1);	  Path    path    =    new    Path(width,    height);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  Path  path  =  new  Path(shape.getPaint());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  Path  path  =  new  Path(shape.getPaint());  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	Path  path  =  new  Path(shape.getPaint());	          path.transform(AffineTransform.getTranslateInstance(width,    height));    Path    path    =    new    Path(shape.getPaint());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  path.transform(AffineTransform.getTranslateInstance(x,  height  -  1));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  path.transform(AffineTransform.getTranslateInstance(x,  height  -  1));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	path.transform(AffineTransform.getTranslateInstance(x,  height  -  1));	  path.transform(AffineTransform.getTranslateInstance(width,    height    -    1));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	add	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));	  	compilable	  [FE]  AssertionFailedError  	10	1	add
19	[BUG]  [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));	  	compilable	  [FE]  AssertionFailedError  	10	1	add
20	[BUG]  [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transformed(AffineTransform.getTranslateInstance(width,  height));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transformed(AffineTransform.getTranslateInstance(width,  height));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transformed(AffineTransform.getTranslateInstance(width,  height));	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
21	[BUG]  [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  path!=  null?  null  :  new  Icon()  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  path!=  null?  null  :  new  Icon()  {  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return    path!=    null?    null    :    new    Icon()    {    path!=  null?  null  :  new  Icon()  {	  	non-compiled	[CE]  <identifier>  expected	20	None	add
22	[BUG]  [BUGGY]  path.transform(AffineTransform.getTranslateInstance(width,  width));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  path.transform(AffineTransform.getTranslateInstance(width,  width));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	path.transform(AffineTransform.getTranslateInstance(width,  width));	          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,    width));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  path.transform(AffineTransform.getTranslateInstance(-width,  -height  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  path.transform(AffineTransform.getTranslateInstance(-width,  -height  +  1));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	path.transform(AffineTransform.getTranslateInstance(-width,  -height  +  1));	  path.transform(AffineTransform.getTranslateInstance(-width,    -height));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  Path  path  =  new  Path(shape,  groupStroke);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  Path  path  =  new  Path(shape,  groupStroke);  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	Path  path  =  new  Path(shape,  groupStroke);	  Path    path    =    new    Path(shape,    outline);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(path.getPaint());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(path.getPaint());  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(path.getPaint());	  return    path    ==    null?    null    :    new    Icon()    {    Path    path    =    new    Path(shape.getPaint());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
26	[BUG]  [BUGGY]  return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(path);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(path);  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return  path  ==  null?  null  :  new  Icon()  {  Path  path  =  new  Path(path);	  return    path    ==    null?    null    :    new    Icon()    {    Path    path    =    new    Path(shape);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  width));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	add	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    width));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  width));	  	compilable	  [FE]  AssertionFailedError  	12	1	add
28	[BUG]  [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  width));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  width));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    width));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  width));	  	compilable	  [FE]  AssertionFailedError  	12	1	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	add	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));	  	compilable	  [FE]  AssertionFailedError  	10	1	add
30	[BUG]  [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	                path.transform(AffineTransform.getTranslateInstance(width,        height));        path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,  width));  path.transform(AffineTransform.getTranslateInstance(width,  height));	  	compilable	  [FE]  AssertionFailedError  	10	1	add
31	[BUG]  [BUGGY]  path.transform(AffineTransform.getTranslateInstance(width,  height));  Path  path  =  new  Path(shape,  shape.getPaint());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  path.transform(AffineTransform.getTranslateInstance(width,  height));  Path  path  =  new  Path(shape,  shape.getPaint());  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	path.transform(AffineTransform.getTranslateInstance(width,  height));  Path  path  =  new  Path(shape,  shape.getPaint());	          path.transform(AffineTransform.getTranslateInstance(width,    height));    Path    path    =    new    Path(shape.getPaint());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  Path  path  =  new  Path(shape,  outlinePaint);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  Path  path  =  new  Path(shape,  outlinePaint);  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	Path  path  =  new  Path(shape,  outlinePaint);	  Path    path    =    new    Path(shape,    outline);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  path.transform(AffineTransform.getTranslateInstance(-width,  -height),  shape);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  path.transform(AffineTransform.getTranslateInstance(-width,  -height),  shape);  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	path.transform(AffineTransform.getTranslateInstance(-width,  -height),  shape);	  path.transform(AffineTransform.getTranslateInstance(-width,    -height));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  Path  path  =  new  Path(shape.getBounds().width,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  Path  path  =  new  Path(shape.getBounds().width,  height);  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	Path  path  =  new  Path(shape.getBounds().width,  height);	  Path    path    =    new    Path(width,    height);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =(path  ==  null?  null  :  new  Icon())  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  return  path!=  null?  null  :  new  Icon()  {  Path  path  =(path  ==  null?  null  :  new  Icon())  {  [BUGGY]      public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	return  path!=  null?  null  :  new  Icon()  {  Path  path  =(path  ==  null?  null  :  new  Icon())  {	  return    path    ==    null?    null    :    new    Icon()    {    Path    path    =(path    ==    null?    null    :    new    Icon())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
36	[BUG]  [BUGGY]  if(outline)  {  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      final  boolean  outline)  {  final  int  width  =  shape.getBounds().width;  final  int  height  =  shape.getBounds().height;  final  GeneralPath  path  =  new  GeneralPath(shape);      [BUGGY]  if(outline)  {  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  }  [BUGGY]      return  new  Icon()  {  public  void  paintIcon(Component  c,  Graphics  g,  int  x,  int  y)  {  Graphics2D  g2  =  (Graphics2D)  g;  path.transform(AffineTransform.getTranslateInstance(x,  y));  if  (fill)  {  g2.fill(path);  }  if  (outline)  {  g2.draw(path);  }  path.transform(AffineTransform.getTranslateInstance(-x,  -y));  [CLASS]  MinMaxCategoryRenderer  1  2  [METHOD]  getIcon  [RETURN_TYPE]  Icon  Shape  shape  final  boolean  fill  final  boolean  outline  [VARIABLES]  Graphics  g  Stroke  groupStroke  stroke  boolean  draw  fill  outline  plotLines  Shape  shape  GeneralPath  path  double  max  maxY  min  minY  previous  x0  x1  y0  y1  Paint  fillPaint  groupPaint  outlinePaint  paint  Icon  icon  maxIcon  minIcon  objectIcon  Component  c  long  serialVersionUID  int  column  height  lastCategory  pass  row  width  x  y  Graphics2D  g2  	projects/Chart23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java	0.4472135954999579	491	491	1	replace	if(outline)  {  path.transform(AffineTransform.getTranslateInstance(width,  height));  path.transform(AffineTransform.getTranslateInstance(width,  width));  }	          path.transform(AffineTransform.getTranslateInstance(width,    height));    path.transform(AffineTransform.getTranslateInstance(width,    width));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
