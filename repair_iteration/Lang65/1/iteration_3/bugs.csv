bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Date  date  =(Date)field.getValue();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)field.getValue();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)field.getValue();	  Date    date    =(Date)field.getTime();    	non-compiled	[CE]  ';'  expected	23	None	replace
2	[BUG]  [BUGGY]  Date  date  =(Date)field.getChronology();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)field.getChronology();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)field.getChronology();	  Date    date    =(Date)field.getTime();    	non-compiled	[CE]  ';'  expected	23	None	replace
3	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this);	  Date    date    =    truncate(date,    field,    null);    	non-compiled	[CE]  ';'  expected	27	None	replace
4	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  fields);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  fields);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  fields);	  Date    date    =    truncate(date,    field,    null);    	non-compiled	[CE]  ';'  expected	27	None	replace
5	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  null,  false);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  null,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  null,  false);	  Date    date    =    truncate(date,    field,    null);    	non-compiled	[CE]  ';'  expected	27	None	replace
6	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  field  +  1);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  field  +  1);	  Date    date    =    new    Date(field,    MILLIS_PER_DAY);    	non-compiled	[CE]  ';'  expected	6	None	replace
7	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  MILLIS_PER_SECOND);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  MILLIS_PER_SECOND);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  MILLIS_PER_SECOND);	  Date    date    =    new    Date(field,    MILLIS_PER_DAY);    	non-compiled	[CE]  ';'  expected	6	None	replace
8	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  field  -  1);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  field  -  1);	  Date    date    =    new    Date(field,    MILLIS_PER_DAY);    	non-compiled	[CE]  ';'  expected	6	None	replace
9	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.DEFAULT_TIME_ZONE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.DEFAULT_TIME_ZONE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.DEFAULT_TIME_ZONE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.getInstance())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
10	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  JsonSecond.getInstance())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  JsonSecond.getInstance())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date  ==  JsonSecond.getInstance())  {	  if(date    ==    null    ||    field    ==    JsonSecond.getInstance())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
11	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.getInstance())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.getInstance())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonNull.getInstance())  {	  if(date    ==    null    ||    field    ==    JsonSecond.getInstance())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
12	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime()  /  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime()  /  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime()  /  1);	  Date    date    =    new    Date(field.getTime()    +    1);    	non-compiled	[CE]  ';'  expected	37	None	replace
13	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime()  -  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime()  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime()  -  1);	  Date    date    =    new    Date(field.getTime()    +    1);    	non-compiled	[CE]  ';'  expected	37	None	replace
14	[BUG]  [BUGGY]  Date  date  =(Date)this.fields.clone();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)this.fields.clone();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)this.fields.clone();	  Date    date    =(Date)fields.clone();    	non-compiled	[CE]  ';'  expected	52	None	replace
15	[BUG]  [BUGGY]  Date  date  =(Date)fields.get(field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)fields.get(field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)fields.get(field);	  Date    date    =(Date)fields.clone();    	non-compiled	[CE]  ';'  expected	52	None	replace
16	[BUG]  [BUGGY]  Date  date  =(Date)super.truncate(date,  field);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)super.truncate(date,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)super.truncate(date,  field);	  Date    date    =(Date)fields.clone();    	non-compiled	[CE]  ';'  expected	52	None	replace
17	[BUG]  [BUGGY]  int[][]  fields  =  getField();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getField();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getField();	  int[][]    fields    =    getChronology();    	non-compiled	[CE]  ';'  expected	18	None	replace
18	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().fields();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().fields();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getChronology().fields();	  int[][]    fields    =    getChronology();    	non-compiled	[CE]  ';'  expected	18	None	replace
19	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().fields;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().fields;  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getChronology().fields;	  int[][]    fields    =    getChronology();    	non-compiled	[CE]  ';'  expected	18	None	replace
20	[BUG]  [BUGGY]  Date  date  =  truncate(date,  FieldUtils.safeNegate(field));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  FieldUtils.safeNegate(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  FieldUtils.safeNegate(field));	  Date    date    =    truncate(date,    field,    false);    	non-compiled	[CE]  ';'  expected	24	None	replace
21	[BUG]  [BUGGY]  Date  date  =  truncate(date,  FieldUtils.safeNegate(field),  false);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  FieldUtils.safeNegate(field),  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  FieldUtils.safeNegate(field),  false);	  Date    date    =    truncate(date,    field,    false);    	non-compiled	[CE]  ';'  expected	24	None	replace
22	[BUG]  [BUGGY]  if(field  ==  0)  {  If(date  ==  null  ||  field  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  0)  {  If(date  ==  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  0)  {  If(date  ==  null  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    0)    {    If(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
23	[BUG]  [BUGGY]  If(date  ==  null  ||  field  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  If(date  ==  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	If(date  ==  null  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    0)    {    If(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
24	[BUG]  [BUGGY]  if(field  ==  null)  {  If(date  ==  null  ||  field  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null)  {  If(date  ==  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null)  {  If(date  ==  null  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    0)    {    If(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
25	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().truncate(date,  field,  false);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().truncate(date,  field,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().truncate(date,  field,  false);	  Date    date    =    getChronology().dayOfMonth().truncate(date,    field);    	non-compiled	[CE]  ';'  expected	41	None	replace
26	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().truncate(date,  field  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().truncate(date,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().truncate(date,  field  +  1);	  Date    date    =    getChronology().dayOfMonth().truncate(date,    field);    	non-compiled	[CE]  ';'  expected	41	None	replace
27	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().truncate(date,  field,  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().truncate(date,  field,  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().truncate(date,  field,  1);	  Date    date    =    getChronology().dayOfMonth().truncate(date,    field);    	non-compiled	[CE]  ';'  expected	41	None	replace
28	[BUG]  [BUGGY]  Date  date  =  getDate(field,  2);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  2);	  Date    date    =    getDate(field,    1);    	non-compiled	[CE]  ';'  expected	11	None	replace
29	[BUG]  [BUGGY]  Date  date  =  getDate(field,  3);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  3);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  3);	  Date    date    =    getDate(field,    1);    	non-compiled	[CE]  ';'  expected	11	None	replace
30	[BUG]  [BUGGY]  Date  date  =  getDate(field,  cal2);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  cal2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  cal2);	  Date    date    =    getDate(field,    cal1);    	non-compiled	[CE]  ';'  expected	10	None	replace
31	[BUG]  [BUGGY]  Date  date  =  getDate(field,  field)+  1;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  field)+  1;  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  field)+  1;	  Date    date    =    getDate(field,    cal1);    	non-compiled	[CE]  ';'  expected	10	None	replace
32	[BUG]  [BUGGY]  Date  date  =  getDate(field,  cal2).getTime();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  cal2).getTime();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  cal2).getTime();	  Date    date    =    getDate(field,    cal1);    	non-compiled	[CE]  ';'  expected	10	None	replace
33	[BUG]  [BUGGY]  Date  date  =  getDate(field,  0L);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  0L);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  0L);	  Date    date    =    getDate(field,    0);    	non-compiled	[CE]  ';'  expected	62	None	replace
34	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  false);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  false);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	72	None	replace
35	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  true);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  true);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  true);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	72	None	replace
36	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  fields);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  fields);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  fields);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	72	None	replace
37	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  1);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	72	None	replace
38	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  JsonNull.createJsonNull())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  JsonNull.createJsonNull())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date  ==  JsonNull.createJsonNull())  {	  if(date    ==    null    ||    field    ==    JsonNull.createJsonNull())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.createDayOfMonth())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.createDayOfMonth())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonNull.createDayOfMonth())  {	  if(date    ==    null    ||    field    ==    JsonNull.createJsonNull())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.createTimeZone(field))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.createTimeZone(field))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonNull.createTimeZone(field))  {	  if(date    ==    null    ||    field    ==    JsonNull.createJsonNull())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  Integer.MIN_VALUE)  {	  if(field    ==    null    ||    date    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
42	[BUG]  [BUGGY]  if(match  ==  null  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(match  ==  null  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(match  ==  null  ||  field  ==  Integer.MIN_VALUE)  {	  if(field    ==    null    ||    date    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
43	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  date);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  date);	  Date    date    =    new    Date(date);    	non-compiled	[CE]  ';'  expected	54	None	replace
44	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  3);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  3);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  3);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field,    0);    	non-compiled	[CE]  ';'  expected	34	None	replace
45	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  0,  field);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  0,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  0,  field);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field,    0);    	non-compiled	[CE]  ';'  expected	34	None	replace
46	[BUG]  [BUGGY]  Date  date  =  new  Date(this.calendarField,  field);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(this.calendarField,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(this.calendarField,  field);	  Date    date    =    new    Date(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	69	None	replace
47	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  this.calendarField,  0);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  this.calendarField,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  this.calendarField,  0);	  Date    date    =    new    Date(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	69	None	replace
48	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  this.calendarField);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date,  this.calendarField);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date,  this.calendarField);	  Date    date    =    new    Date(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	69	None	replace
49	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  1  ||  field  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  1  ||  field  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  1  ||  field  ==  1)  {	  if(date    ==    null    ||    field    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  1000)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  1000)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  1000)  {	  if(date    ==    null    ||    field    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(date,  field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(date,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(date,  field);	  Date    date    =    getChronology().dayOfMonth().set(field);    	non-compiled	[CE]  ';'  expected	40	None	replace
52	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(field,  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(field,  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(field,  1);	  Date    date    =    getChronology().dayOfMonth().set(field);    	non-compiled	[CE]  ';'  expected	40	None	replace
53	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(date);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(date);	  Date    date    =    getChronology().dayOfMonth().set(field);    	non-compiled	[CE]  ';'  expected	40	None	replace
54	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
55	[BUG]  [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
56	[BUG]  [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
57	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  field  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date,  field  +  1);	  Date    date    =    new    Date(date,    field);    	non-compiled	[CE]  ';'  expected	4	None	replace
58	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  field  -  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date,  field  -  1);	  Date    date    =    new    Date(date,    field);    	non-compiled	[CE]  ';'  expected	4	None	replace
59	[BUG]  [BUGGY]  int[][]  fields  =  getFields(field)+  1;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields(field)+  1;  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields(field)+  1;	  int[][]    fields    =    getFields(field);    	non-compiled	[CE]  ';'  expected	16	None	replace
60	[BUG]  [BUGGY]  int[][]  fields  =  getFields(field,  c);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields(field,  c);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields(field,  c);	  int[][]    fields    =    getFields(field);    	non-compiled	[CE]  ';'  expected	16	None	replace
61	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(field));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(field));	  Date    date    =    new    Date(field.getTime(),    FieldUtils.safeNegate(field));    	non-compiled	[CE]  ';'  expected	38	None	replace
62	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeToInt(field));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeToInt(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime(),  FieldUtils.safeToInt(field));	  Date    date    =    new    Date(field.getTime(),    FieldUtils.safeNegate(field));    	non-compiled	[CE]  ';'  expected	38	None	replace
63	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeAdd(field));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeAdd(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime(),  FieldUtils.safeAdd(field));	  Date    date    =    new    Date(field.getTime(),    FieldUtils.safeNegate(field));    	non-compiled	[CE]  ';'  expected	38	None	replace
64	[BUG]  [BUGGY]  Date  date  =  new  Date(date.getTime(),  FieldUtils.safeNegate(field));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date.getTime(),  FieldUtils.safeNegate(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date.getTime(),  FieldUtils.safeNegate(field));	  Date    date    =    new    Date(field.getTime(),    FieldUtils.safeNegate(field));    	non-compiled	[CE]  ';'  expected	38	None	replace
65	[BUG]  [BUGGY]  aughtException( "The  date  must  not  be  null. ");  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aughtException( "The  date  must  not  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aughtException( "The  date  must  not  be  null. ");	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  ';'  expected	63	None	replace
66	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "The  date  must  not  be  null. ");  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "The  date  must  not  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "The  date  must  not  be  null. ");	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  ';'  expected	63	None	replace
67	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "Date  must  not  be  null. ");  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "Date  must  not  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "Date  must  not  be  null. ");	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  ';'  expected	63	None	replace
68	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "The  date  must  not  be  null. ");  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionError( "The  date  must  not  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aughtExceptionHandler.throwAsSertionError( "The  date  must  not  be  null. ");	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  ';'  expected	63	None	replace
69	[BUG]  [BUGGY]  int[][]  fields  =  getFields().length  -  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().length  -  1;  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().length  -  1;	  int[][]    fields    =    getFields().length;    	non-compiled	[CE]  ';'  expected	17	None	replace
70	[BUG]  [BUGGY]  int[][]  fields  =  getFields().length  +  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().length  +  1;  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().length  +  1;	  int[][]    fields    =    getFields().length;    	non-compiled	[CE]  ';'  expected	17	None	replace
71	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  4);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  4);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  4);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field,    2);    	non-compiled	[CE]  ';'  expected	76	None	replace
72	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(date));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(date));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(date));	  Date    date    =    new    Date(field.getTime(),    FieldUtils.safeNegate(date));    	non-compiled	[CE]  ';'  expected	58	None	replace
73	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeAdd(date));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeAdd(date));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime(),  FieldUtils.safeAdd(date));	  Date    date    =    new    Date(field.getTime(),    FieldUtils.safeNegate(date));    	non-compiled	[CE]  ';'  expected	58	None	replace
74	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
75	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
76	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  field.getTime());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  field.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  field.getTime());	  Date    date    =    new    Date(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	70	None	replace
77	[BUG]  [BUGGY]  Date  date  =  new  Date(cal1,  field.getTime());  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(cal1,  field.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(cal1,  field.getTime());	  Date    date    =    new    Date(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	70	None	replace
78	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  cal1.getTime());  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date,  cal1.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date,  cal1.getTime());	  Date    date    =    new    Date(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	70	None	replace
79	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  cal2.getTime());  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  cal2.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  cal2.getTime());	  Date    date    =    new    Date(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	70	None	replace
80	[BUG]  [BUGGY]  Date  date  =(Date)this.field.clone();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)this.field.clone();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)this.field.clone();	  Date    date    =(Date)field.clone();    	non-compiled	[CE]  ';'  expected	45	None	replace
81	[BUG]  [BUGGY]  int[][]  fields  =  getFields().get(field);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().get(field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().get(field);	  int[][]    fields    =    getFields().toArray(field);    	non-compiled	[CE]  ';'  expected	67	None	replace
82	[BUG]  [BUGGY]  int[][]  fields  =  getFields().toArray(field,  false);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().toArray(field,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().toArray(field,  false);	  int[][]    fields    =    getFields().toArray(field);    	non-compiled	[CE]  ';'  expected	67	None	replace
83	[BUG]  [BUGGY]  int[][]  fields  =  getFields().toArray(field,  calendarField);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().toArray(field,  calendarField);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().toArray(field,  calendarField);	  int[][]    fields    =    getFields().toArray(field);    	non-compiled	[CE]  ';'  expected	67	None	replace
84	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(field,  0);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(field,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().get(field,  0);	  Date    date    =    getChronology().dayOfMonth().get(field,    1);    	non-compiled	[CE]  ';'  expected	42	None	replace
85	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(field,  2);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(field,  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().get(field,  2);	  Date    date    =    getChronology().dayOfMonth().get(field,    1);    	non-compiled	[CE]  ';'  expected	42	None	replace
86	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  0);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  Calendar.getInstance().getFields(field,  0);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  ';'  expected	65	None	replace
87	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(date,  field);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  Calendar.getInstance().getFields(date,  field);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  ';'  expected	65	None	replace
88	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  false);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  false);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  Calendar.getInstance().getFields(field,  false);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  ';'  expected	65	None	replace
89	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  field  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime(),  field  +  1);	  Date    date    =    new    Date(field.getTime(),    field);    	non-compiled	[CE]  ';'  expected	35	None	replace
90	[BUG]  [BUGGY]  Date  date  =  new  Date(date.getTime(),  field);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date.getTime(),  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date.getTime(),  field);	  Date    date    =    new    Date(field.getTime(),    field);    	non-compiled	[CE]  ';'  expected	35	None	replace
91	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  field)+  1;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  field)+  1;  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime(),  field)+  1;	  Date    date    =    new    Date(field.getTime(),    field);    	non-compiled	[CE]  ';'  expected	35	None	replace
92	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  JsonSecond.getInstanceUTC())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  JsonSecond.getInstanceUTC())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date  ==  JsonSecond.getInstanceUTC())  {	  if(date    ==    null    ||    field    ==    JsonSecond.getInstanceUTC())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
93	[BUG]  [BUGGY]  Date  truncate  =  new  Date(date.getTime()  +  field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(date.getTime()  +  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(date.getTime()  +  field);	  Date    truncate    =    new    Date(date.getTime());    	non-compiled	[CE]  ';'  expected	49	None	replace
94	[BUG]  [BUGGY]  Date  truncate  =  new  Date(field.getTime());  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(field.getTime());  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(field.getTime());	  Date    truncate    =    new    Date(date.getTime());    	non-compiled	[CE]  ';'  expected	49	None	replace
95	[BUG]  [BUGGY]  Date  truncate  =  new  Date(date.getTime()  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(date.getTime()  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(date.getTime()  +  1);	  Date    truncate    =    new    Date(date.getTime());    	non-compiled	[CE]  ';'  expected	49	None	replace
96	[BUG]  [BUGGY]  aughtException( "The  Date  must  not  be  null. ");  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aughtException( "The  Date  must  not  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aughtException( "The  Date  must  not  be  null. ");	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    Date    must    not    be    null.   ");    }    	non-compiled	[CE]  ';'  expected	64	None	replace
97	[BUG]  [BUGGY]  aughtException( "The  Date  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aughtException( "The  Date  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aughtException( "The  Date  must  not  be  null. ");  }	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    Date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
98	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  [Delete]  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	[Delete]	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    Date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
99	[BUG]  [BUGGY]  Date  date  =  getDateWithField(field);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDateWithField(field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDateWithField(field);	  Date    date    =    getDate(date);    	non-compiled	[CE]  ';'  expected	61	None	replace
100	[BUG]  [BUGGY]  Date  date  =  getDate(field,  date);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  date);	  Date    date    =    getDate(date);    	non-compiled	[CE]  ';'  expected	61	None	replace
101	[BUG]  [BUGGY]  Date  date  =  getDate(field,  field.getTime());  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  field.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  field.getTime());	  Date    date    =    getDate(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	74	None	replace
102	[BUG]  [BUGGY]  Date  date  =  getDate(field,  cal2.getTime());  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  cal2.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  cal2.getTime());	  Date    date    =    getDate(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	74	None	replace
103	[BUG]  [BUGGY]  Date  date  =  getDate(cal1,  field.getTime());  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(cal1,  field.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(cal1,  field.getTime());	  Date    date    =    getDate(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	74	None	replace
104	[BUG]  [BUGGY]  Date  date  =  getDate(date,  field.getTime());  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(date,  field.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(date,  field.getTime());	  Date    date    =    getDate(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	74	None	replace
105	[BUG]  [BUGGY]  int[][]  fields  =  getFields().toArray(new  int[field  -  1]);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().toArray(new  int[field  -  1]);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().toArray(new  int[field  -  1]);	  int[][]    fields    =    getFields().toArray(new    int[field]);    	non-compiled	[CE]  ';'  expected	68	None	replace
106	[BUG]  [BUGGY]  int[][]  fields  =  getFields().toArray(new  int[field  +  1]);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().toArray(new  int[field  +  1]);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().toArray(new  int[field  +  1]);	  int[][]    fields    =    getFields().toArray(new    int[field]);    	non-compiled	[CE]  ';'  expected	68	None	replace
107	[BUG]  [BUGGY]  int[][]  fields  =  getFields().toArray(new  int[field],  0);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().toArray(new  int[field],  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().toArray(new  int[field],  0);	  int[][]    fields    =    getFields().toArray(new    int[field]);    	non-compiled	[CE]  ';'  expected	68	None	replace
108	[BUG]  [BUGGY]  if(field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  0)  {	  if(date    ==    null    ||    field    ==    0)    {    if(date    ==    null    ||    field    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
109	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    0)    {    if(date    ==    null    ||    field    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
110	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().remove(date);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().remove(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().remove(date);	  Date    date    =    getChronology().dayOfMonth().get(date);    	non-compiled	[CE]  ';'  expected	55	None	replace
111	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  null)  {	  if(field    ==    null    ||    date    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
112	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  null)  {	  if(field    ==    null    ||    date    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
113	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  INVALID_DATE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  INVALID_DATE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  INVALID_DATE)  {	  if(field    ==    null    ||    date    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
114	[BUG]  [BUGGY]  if(field  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null)  {	  if(date    ==    null    ||    field    ==    0)    {    if(date    {    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
115	[BUG]  [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  0);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  this.calendarField,  0);	  Date    date    =    getDate(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	73	None	replace
116	[BUG]  [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  false);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  this.calendarField,  false);	  Date    date    =    getDate(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	73	None	replace
117	[BUG]  [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  null);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  null);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  this.calendarField,  null);	  Date    date    =    getDate(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	73	None	replace
118	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  1,  field);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  1,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  1,  field);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field    +    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
119	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  2);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  2);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field    +    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
120	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  3);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  3);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  +  3);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field    +    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
121	[BUG]  [BUGGY]  if(date  ==  null  ||  field  >=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  >=  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  >=  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field!=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
122	[BUG]  [BUGGY]  if(date  ==  null  ||  field  <  2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  <  2)  {	  if(date    ==    null    ||    field    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
123	[BUG]  [BUGGY]  if(date  ==  null  ||  field  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  >=  1)  {	  if(date    ==    null    ||    field    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
124	[BUG]  [BUGGY]  Date  date  =  getDate(date,  field).getTime();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(date,  field).getTime();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(date,  field).getTime();	  Date    date    =    getDate(date,    field);    	non-compiled	[CE]  ';'  expected	8	None	replace
125	[BUG]  [BUGGY]  Date  date  =  getDate(date,  field).truncate(field);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(date,  field).truncate(field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(date,  field).truncate(field);	  Date    date    =    getDate(date,    field);    	non-compiled	[CE]  ';'  expected	8	None	replace
126	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  2);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  2);	  Date    date    =    truncate(date,    field,    1);    	non-compiled	[CE]  ';'  expected	26	None	replace
127	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  3);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  3);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  3);	  Date    date    =    truncate(date,    field,    1);    	non-compiled	[CE]  ';'  expected	26	None	replace
128	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  4);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  4);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  4);	  Date    date    =    truncate(date,    field,    1);    	non-compiled	[CE]  ';'  expected	26	None	replace
129	[BUG]  [BUGGY]  Date  date  =  truncate(date,  FieldUtils.safeMultiply(field));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  FieldUtils.safeMultiply(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  FieldUtils.safeMultiply(field));	  Date    date    =    truncate(date,    field,    true);    	non-compiled	[CE]  ';'  expected	25	None	replace
130	[BUG]  [BUGGY]  Date  date  =  truncate(date,  FieldUtils.currentTimeMillis(),  true);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  FieldUtils.currentTimeMillis(),  true);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  FieldUtils.currentTimeMillis(),  true);	  Date    date    =    truncate(date,    field,    true);    	non-compiled	[CE]  ';'  expected	25	None	replace
131	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(field  -  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().get(field  -  1);	  Date    date    =    getChronology().dayOfMonth().get(field    +    1);    	non-compiled	[CE]  ';'  expected	56	None	replace
132	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(field  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(field  +  1);	  Date    date    =    getChronology().dayOfMonth().get(field    +    1);    	non-compiled	[CE]  ';'  expected	56	None	replace
133	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  0  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
134	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
135	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  -1  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
136	[BUG]  [BUGGY]  int[][]  fields  =  getFields().toArray(fields,  field);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().toArray(fields,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().toArray(fields,  field);	  int[][]    fields    =    getFields().toArray(fields);    	non-compiled	[CE]  ';'  expected	60	None	replace
137	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  1);	  Date    date    =    new    Date(field,    field);    	non-compiled	[CE]  ';'  expected	5	None	replace
138	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getMillis(),  field);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getMillis(),  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getMillis(),  field);	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  ';'  expected	36	None	replace
139	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getLocalMillis());  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getLocalMillis());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getLocalMillis());	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  ';'  expected	36	None	replace
140	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getMillis(),  FieldUtils.safeNegate(field));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getMillis(),  FieldUtils.safeNegate(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getMillis(),  FieldUtils.safeNegate(field));	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  ';'  expected	36	None	replace
141	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.DEFAULT_TIME_ZONE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.DEFAULT_TIME_ZONE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonNull.DEFAULT_TIME_ZONE)  {	  if(date    ==    null    ||    field!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
142	[BUG]  [BUGGY]  Date  date  =(Date)this.date.getTime();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)this.date.getTime();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)this.date.getTime();	  Date    date    =(Date)this.date.clone();    	non-compiled	[CE]  ';'  expected	46	None	replace
143	[BUG]  [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(date.getTime(),  field  +  1);	  Date    truncate    =    new    Date(date.getTime(),    field);    	non-compiled	[CE]  ';'  expected	50	None	replace
144	[BUG]  [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field,  false);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field,  false);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(date.getTime(),  field,  false);	  Date    truncate    =    new    Date(date.getTime(),    field);    	non-compiled	[CE]  ';'  expected	50	None	replace
145	[BUG]  [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field,  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(date.getTime(),  field,  1);	  Date    truncate    =    new    Date(date.getTime(),    field);    	non-compiled	[CE]  ';'  expected	50	None	replace
146	[BUG]  [BUGGY]  Date  c  =  getChronology().dayOfMonth();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  c  =  getChronology().dayOfMonth();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  c  =  getChronology().dayOfMonth();	  Date    c    =    getChronology();    	non-compiled	[CE]  ';'  expected	51	None	replace
147	[BUG]  [BUGGY]  Date  c  =  getField();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  c  =  getField();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  c  =  getField();	  Date    c    =    getChronology();    	non-compiled	[CE]  ';'  expected	51	None	replace
148	[BUG]  [BUGGY]  Date  c  =  getChronology().truncate(date,  field);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  c  =  getChronology().truncate(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  c  =  getChronology().truncate(date,  field);	  Date    c    =    getChronology();    	non-compiled	[CE]  ';'  expected	51	None	replace
149	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  true);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  true);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field,  true);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
150	[BUG]  [BUGGY]  Date  date  =  getChronology().monthOfMonth().set(getMillis(),  field,  false);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().monthOfMonth().set(getMillis(),  field,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().monthOfMonth().set(getMillis(),  field,  false);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
151	[BUG]  [BUGGY]  Date  date  =  getChronology().year().set(getMillis(),  field,  false);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().year().set(getMillis(),  field,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().year().set(getMillis(),  field,  false);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
152	[BUG]  [BUGGY]  int[][]  fields  =  date.getFields();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  date.getFields();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  date.getFields();	  int[][]    fields    =    c.getFields();    	non-compiled	[CE]  ';'  expected	43	None	replace
153	[BUG]  [BUGGY]  int[][]  fields  =  c.getFields(field);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  c.getFields(field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  c.getFields(field);	  int[][]    fields    =    c.getFields();    	non-compiled	[CE]  ';'  expected	43	None	replace
154	[BUG]  [BUGGY]  int[][]  fields  =  field.getFields();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  field.getFields();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  field.getFields();	  int[][]    fields    =    c.getFields();    	non-compiled	[CE]  ';'  expected	43	None	replace
155	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
156	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
157	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  >=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  >=  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  >=  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
158	[BUG]  [BUGGY]  Date  date  =  truncate(date.getTime(),  field);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date.getTime(),  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date.getTime(),  field);	  Date    date    =    truncate(date.getTime());    	non-compiled	[CE]  ';'  expected	44	None	replace
159	[BUG]  [BUGGY]  Date  date  =  truncate(date.getTime()  +  field);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date.getTime()  +  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date.getTime()  +  field);	  Date    date    =    truncate(date.getTime());    	non-compiled	[CE]  ';'  expected	44	None	replace
160	[BUG]  [BUGGY]  Date  date  =  truncate(field,  date.getTime());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(field,  date.getTime());  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(field,  date.getTime());	  Date    date    =    truncate(date.getTime());    	non-compiled	[CE]  ';'  expected	44	None	replace
161	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
162	[BUG]  [BUGGY]  Date  date  =  new  Date(date.getTime()  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date.getTime()  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date.getTime()  +  1);	  Date    date    =    new    Date(date.getTime());    	non-compiled	[CE]  ';'  expected	75	None	replace
163	[BUG]  [BUGGY]  Date  date  =  getDate(field,  field).truncate(date);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  field).truncate(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  field).truncate(date);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  ';'  expected	9	None	replace
164	[BUG]  [BUGGY]  Date  date  =  getDate(field,  MILLIS_PER_SECOND);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  MILLIS_PER_SECOND);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  MILLIS_PER_SECOND);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  ';'  expected	9	None	replace
165	[BUG]  [BUGGY]  Date  date  =  getDate(field,  MILLIS_PER_DAY);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  MILLIS_PER_DAY);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  MILLIS_PER_DAY);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  ';'  expected	9	None	replace
166	[BUG]  [BUGGY]  int[][]  fields  =  getFields(field,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields(field,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields(field,  0);	  int[][]    fields    =    getFields(field);    	non-compiled	[CE]  ';'  expected	16	None	replace
167	[BUG]  [BUGGY]  if(field  ==  null  ||  date  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date  <  =  0)  {	  if(date    ==    null    ||    field    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
168	[BUG]  [BUGGY]  Date  date  =  getChronology().monthOfDay().set(getMillis(),  field,  false);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().monthOfDay().set(getMillis(),  field,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().monthOfDay().set(getMillis(),  field,  false);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field,    false);    	non-compiled	[CE]  ';'  expected	32	None	replace
169	[BUG]  [BUGGY]  aughtInvalidDate(date,  field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aughtInvalidDate(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aughtInvalidDate(date,  field);	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  ';'  expected	63	None	replace
170	[BUG]  [BUGGY]  Date  date  =  new  Date(date.getTime()  +  field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date.getTime()  +  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date.getTime()  +  field);	  Date    date    =    new    Date(date.getTime());    	non-compiled	[CE]  ';'  expected	75	None	replace
171	[BUG]  [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
172	[BUG]  [BUGGY]  if(field  ==  JsonSecond.getInstance())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  JsonSecond.getInstance())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  JsonSecond.getInstance())  {	  if(date    ==    null    ||    field    ==    JsonSecond.getInstance())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
173	[BUG]  [BUGGY]  Date  truncate  =  new  Date(field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(field);	  Date    truncate    =    new    Date(date.getTime());    	non-compiled	[CE]  ';'  expected	49	None	replace
174	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  Integer.MAX_VALUE)  {	  if(field    ==    null    ||    date    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
175	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  Calendar.getInstance().getFields(field,  1);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  ';'  expected	65	None	replace
176	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  -1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  -1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  Calendar.getInstance().getFields(field,  -1);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  ';'  expected	65	None	replace
177	[BUG]  [BUGGY]  int[][]  fields  =  getValues().toArray(fields);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getValues().toArray(fields);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getValues().toArray(fields);	  int[][]    fields    =    getFields().toArray(fields);    	non-compiled	[CE]  ';'  expected	60	None	replace
178	[BUG]  [BUGGY]  Date  date  =  getDateFormat(date);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDateFormat(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDateFormat(date);	  Date    date    =    getDate(date);    	non-compiled	[CE]  ';'  expected	61	None	replace
179	[BUG]  [BUGGY]  Date  date  =  truncate(date,  FieldUtils.safeNegate(field),  true);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  FieldUtils.safeNegate(field),  true);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  FieldUtils.safeNegate(field),  true);	  Date    date    =    truncate(date,    field,    true);    	non-compiled	[CE]  ';'  expected	25	None	replace
180	[BUG]  [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field)+  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field)+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(date.getTime(),  field)+  1;	  Date    truncate    =    new    Date(date.getTime(),    field);    	non-compiled	[CE]  ';'  expected	50	None	replace
181	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getChronology());  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getChronology());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getChronology());	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  ';'  expected	36	None	replace
182	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  this.calendarField  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  this.calendarField  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  this.calendarField  +  1);	  Date    date    =    new    Date(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	69	None	replace
183	[BUG]  [BUGGY]  if(field  ==  -1)  {  if(date!=  null  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  -1)  {  if(date!=  null  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  -1)  {  if(date!=  null  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    0)    {    if(date!=    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
184	[BUG]  [BUGGY]  if(field  ==  -1)  {  if(date!=  null  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  -1)  {  if(date!=  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  -1)  {  if(date!=  null  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    0)    {    if(date!=    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
185	[BUG]  [BUGGY]  int[][]  fields  =  getFields().toArray(new  int[0]);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().toArray(new  int[0]);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().toArray(new  int[0]);	  int[][]    fields    =    getFields().toArray(new    int[field]);    	non-compiled	[CE]  ';'  expected	68	None	replace
186	[BUG]  [BUGGY]  if(field  ==  0)  {  If(date  ==  null  ||  date  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  0)  {  If(date  ==  null  ||  date  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  0)  {  If(date  ==  null  ||  date  ==  0)  {	  if(date    ==    null    ||    field    ==    0)    {    If(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
187	[BUG]  [BUGGY]  if(field  ==  -1)  {  if(date  ==  null  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  -1)  {  if(date  ==  null  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  -1)  {  if(date  ==  null  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    0)    {    if(date    {    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
188	[BUG]  [BUGGY]  if(field  ==  -1)  {  if(date  ==  null  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  -1)  {  if(date  ==  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  -1)  {  if(date  ==  null  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    0)    {    if(date    {    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
189	[BUG]  [BUGGY]  Date  date  =(Date)field.getTime()  +  1;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)field.getTime()  +  1;  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)field.getTime()  +  1;	  Date    date    =(Date)field.getTime();    	non-compiled	[CE]  ';'  expected	23	None	replace
190	[BUG]  [BUGGY]  Date  date  =  getDate(date,  field  +  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(date,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(date,  field  +  1);	  Date    date    =    getDate(date,    field);    	non-compiled	[CE]  ';'  expected	8	None	replace
191	[BUG]  [BUGGY]  if(field  ==  null  ||  date!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date!=  0)  {	  if(date    ==    null    ||    field!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
192	[BUG]  [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
193	[BUG]  [BUGGY]  Date  date  =  new  Date(field  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field  +  1);	  Date    date    =    new    Date(date);    	non-compiled	[CE]  ';'  expected	54	None	replace
194	[BUG]  [BUGGY]  Date  date  =  getChronology().year().set(getMillis(),  field  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().year().set(getMillis(),  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().year().set(getMillis(),  field  +  1);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field    +    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
195	[BUG]  [BUGGY]  Date  c  =  getChronology().withUTC();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  c  =  getChronology().withUTC();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  c  =  getChronology().withUTC();	  Date    c    =    getChronology();    	non-compiled	[CE]  ';'  expected	51	None	replace
196	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().set(date,  field);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().set(date,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getChronology().set(date,  field);	  int[][]    fields    =    getChronology();    	non-compiled	[CE]  ';'  expected	18	None	replace
197	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().set(getMillis(),  field);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().set(getMillis(),  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getChronology().set(getMillis(),  field);	  int[][]    fields    =    getChronology();    	non-compiled	[CE]  ';'  expected	18	None	replace
198	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.timeZone);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.timeZone);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  this.timeZone);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	72	None	replace
199	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.dayOfMonth);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.dayOfMonth);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  this.dayOfMonth);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	72	None	replace
200	[BUG]  [BUGGY]  if(field  ==  JsonNull.createJsonNull())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  JsonNull.createJsonNull())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  JsonNull.createJsonNull())  {	  if(date    ==    null    ||    field    ==    JsonNull.createJsonNull())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
201	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  JsonNull.createJsonNull())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  JsonNull.createJsonNull())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  JsonNull.createJsonNull())  {	  if(date    ==    null    ||    field    ==    JsonNull.createJsonNull())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
202	[BUG]  [BUGGY]  Date  date  =  getDate(field,  -1);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  -1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  -1);	  Date    date    =    getDate(field,    0);    	non-compiled	[CE]  ';'  expected	62	None	replace
203	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().truncate(date,  field  -  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().truncate(date,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().truncate(date,  field  -  1);	  Date    date    =    getChronology().dayOfMonth().truncate(date,    field);    	non-compiled	[CE]  ';'  expected	41	None	replace
204	[BUG]  [BUGGY]  Date  date  =(Date)fields.get(field  -  1);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)fields.get(field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =(Date)fields.get(field  -  1);	  Date    date    =(Date)fields.clone();    	non-compiled	[CE]  ';'  expected	52	None	replace
205	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(date,  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(date,  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().get(date,  1);	  Date    date    =    getChronology().dayOfMonth().get(field,    1);    	non-compiled	[CE]  ';'  expected	42	None	replace
206	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  field.getTime());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date,  field.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(date,  field.getTime());	  Date    date    =    new    Date(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	70	None	replace
207	[BUG]  [BUGGY]  Date  date  =  getChronology().monthOfDay().get(date);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().monthOfDay().get(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().monthOfDay().get(date);	  Date    date    =    getChronology().dayOfMonth().get(date);    	non-compiled	[CE]  ';'  expected	55	None	replace
208	[BUG]  [BUGGY]  Date  date  =  getChronology().monthOfYear().get(date);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().monthOfYear().get(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().monthOfYear().get(date);	  Date    date    =    getChronology().dayOfMonth().get(date);    	non-compiled	[CE]  ';'  expected	55	None	replace
209	[BUG]  [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.DATE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.DATE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.DATE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
210	[BUG]  [BUGGY]  if(field  ==  null  ||  date!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date!=  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date!=  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field!=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
211	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  FieldUtils.safeNegate(field));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  FieldUtils.safeNegate(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  FieldUtils.safeNegate(field));	  Date    date    =    new    Date(field,    MILLIS_PER_DATE);    	non-compiled	[CE]  ';'  expected	7	None	replace
212	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  MILLIS_PER_DATE  +  1);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  MILLIS_PER_DATE  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  MILLIS_PER_DATE  +  1);	  Date    date    =    new    Date(field,    MILLIS_PER_DATE);    	non-compiled	[CE]  ';'  expected	7	None	replace
213	[BUG]  [BUGGY]  int[][]  fields  =  getFields().toArray(field,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().toArray(field,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields().toArray(field,  0);	  int[][]    fields    =    getFields().toArray(field);    	non-compiled	[CE]  ';'  expected	67	None	replace
214	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  field);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  field);	  Date    date    =    truncate(date,    field,    null);    	non-compiled	[CE]  ';'  expected	27	None	replace
215	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  null  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  null  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  date  ==  null  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
216	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  -1  ||  date  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  -1  ||  date  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  -1  ||  date  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
217	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(field  +  2);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().get(field  +  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().get(field  +  2);	  Date    date    =    getChronology().dayOfMonth().get(field    +    1);    	non-compiled	[CE]  ';'  expected	56	None	replace
218	[BUG]  [BUGGY]  Date  date  =  getChronology().year().set(field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().year().set(field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().year().set(field);	  Date    date    =    getChronology().dayOfMonth().set(field);    	non-compiled	[CE]  ';'  expected	40	None	replace
219	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(date,  field));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(date,  field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getTime(),  FieldUtils.safeMultiply(date,  field));	  Date    date    =    new    Date(field.getTime(),    FieldUtils.safeNegate(date));    	non-compiled	[CE]  ';'  expected	58	None	replace
220	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  JsonSecond.getInstance())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  JsonSecond.getInstance())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  null  ||  field  ==  JsonSecond.getInstance())  {	  if(field    ==    null    ||    date    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
221	[BUG]  [BUGGY]  Date  date  =  getDate(date,  this.calendarField);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(date,  this.calendarField);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(date,  this.calendarField);	  Date    date    =    getDate(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	73	None	replace
222	[BUG]  [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  -1);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  -1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  this.calendarField,  -1);	  Date    date    =    getDate(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	73	None	replace
223	[BUG]  [BUGGY]  if(field  ==  JsonSecond.getInstanceUTC())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  JsonSecond.getInstanceUTC())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  JsonSecond.getInstanceUTC())  {	  if(date    ==    null    ||    field    ==    JsonSecond.getInstanceUTC())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
224	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( "The  Date  must  not  be  null. "),  field));  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aught(new  IllegalArgumentException( "The  Date  must  not  be  null. "),  field));  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aught(new  IllegalArgumentException( "The  Date  must  not  be  null. "),  field));	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    Date    must    not    be    null.   ");    }    	non-compiled	[CE]  	64	None	replace
225	[BUG]  [BUGGY]  Date  date  =  getDate(field,  DEFAULT_TIME_ZONE);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  DEFAULT_TIME_ZONE);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  DEFAULT_TIME_ZONE);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  ';'  expected	9	None	replace
226	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  false,  true);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  false,  true);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  false,  true);	  Date    date    =    truncate(date,    field,    false);    	non-compiled	[CE]  ';'  expected	24	None	replace
227	[BUG]  [BUGGY]  Date  c  =  getChronology(field);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  c  =  getChronology(field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  c  =  getChronology(field);	  Date    c    =    getChronology();    	non-compiled	[CE]  ';'  expected	51	None	replace
228	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
229	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
230	[BUG]  [BUGGY]  if(field  ==  RANGE_MONTH_SUNDAY)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  RANGE_MONTH_SUNDAY)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  RANGE_MONTH_SUNDAY)  {	  if(date    ==    null    ||    field    ==    0)    {    if(date!=    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
231	[BUG]  [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field).setTime(date);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(date.getTime(),  field).setTime(date);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(date.getTime(),  field).setTime(date);	  Date    truncate    =    new    Date(date.getTime(),    field);    	non-compiled	[CE]  ';'  expected	50	None	replace
232	[BUG]  [BUGGY]  int[][]  fields  =  calendar.getFields();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  calendar.getFields();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  calendar.getFields();	  int[][]    fields    =    c.getFields();    	non-compiled	[CE]  ';'  expected	43	None	replace
233	[BUG]  [BUGGY]  Date  date  =  getDate(field  +  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field  +  1);	  Date    date    =    getDate(date);    	non-compiled	[CE]  ';'  expected	61	None	replace
234	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  -  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(getMillis(),  field  -  1);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field    +    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
235	[BUG]  [BUGGY]  Date  date  =  getChronology().monthOfMonth().set(getMillis(),  field  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().monthOfMonth().set(getMillis(),  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().monthOfMonth().set(getMillis(),  field  +  1);	  Date    date    =    getChronology().dayOfMonth().set(getMillis(),    field    +    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
236	[BUG]  [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  this.timeZone);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  this.timeZone);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  this.calendarField,  this.timeZone);	  Date    date    =    getDate(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	73	None	replace
237	[BUG]  [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  this.separator);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  this.calendarField,  this.separator);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(field,  this.calendarField,  this.separator);	  Date    date    =    getDate(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	73	None	replace
238	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().toArray(fields);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().toArray(fields);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getChronology().toArray(fields);	  int[][]    fields    =    getFields().toArray(fields);    	non-compiled	[CE]  ';'  expected	60	None	replace
239	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
240	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MILLISECOND)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MILLISECOND)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MILLISECOND)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
241	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.createJsonNull()  ||  field  ==  JsonNull.createDayOfMonth())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonNull.createJsonNull()  ||  field  ==  JsonNull.createDayOfMonth())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonNull.createJsonNull()  ||  field  ==  JsonNull.createDayOfMonth())  {	  if(date    ==    null    ||    field    ==    JsonNull.createJsonNull())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
242	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  field  *  MILLIS_PER_DAY);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  field  *  MILLIS_PER_DAY);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  field  *  MILLIS_PER_DAY);	  Date    date    =    new    Date(field,    MILLIS_PER_DAY);    	non-compiled	[CE]  ';'  expected	6	None	replace
243	[BUG]  [BUGGY]  Date  date  =  truncate(date.getChronology());  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date.getChronology());  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date.getChronology());	  Date    date    =    truncate(date.getTime());    	non-compiled	[CE]  ';'  expected	44	None	replace
244	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getMillis()  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getMillis()  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field.getMillis()  +  1);	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  ';'  expected	36	None	replace
245	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( "The  date  must  not  be  null. "),  field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aught(new  IllegalArgumentException( "The  date  must  not  be  null. "),  field));  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aught(new  IllegalArgumentException( "The  date  must  not  be  null. "),  field));	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
246	[BUG]  [BUGGY]  aughtException( "The  date  must  not  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  aughtException( "The  date  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	aughtException( "The  date  must  not  be  null. ");  }	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
247	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  this.calendarField,  this.timeZone);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  this.calendarField,  this.timeZone);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  this.calendarField,  this.timeZone);	  Date    date    =    new    Date(field,    this.calendarField);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
248	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  this.calendarField,  this.separator);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  this.calendarField,  this.separator);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  this.calendarField,  this.separator);	  Date    date    =    new    Date(field,    this.calendarField);    	non-compiled	[CE]  ';'  expected	69	None	replace
249	[BUG]  [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(this,  field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().dayOfMonth().set(this,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getChronology().dayOfMonth().set(this,  field);	  Date    date    =    getChronology().dayOfMonth().set(field);    	non-compiled	[CE]  ';'  expected	40	None	replace
250	[BUG]  [BUGGY]  if(date!=  null  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date!=  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date!=  null  ||  field  ==  0)  {	  if(date    ==    null    ||    field!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
251	[BUG]  [BUGGY]  Date  date  =  new  Date(cal1.getTime(),  field);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(cal1.getTime(),  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(cal1.getTime(),  field);	  Date    date    =    new    Date(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	70	None	replace
252	[BUG]  [BUGGY]  Date  date  =  new  Date(cal1.getTime());  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(cal1.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(cal1.getTime());	  Date    date    =    new    Date(field,    cal1.getTime());    	non-compiled	[CE]  ';'  expected	70	None	replace
253	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  field  *  MILLIS_PER_DATE);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  field  *  MILLIS_PER_DATE);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  new  Date(field,  field  *  MILLIS_PER_DATE);	  Date    date    =    new    Date(field,    MILLIS_PER_DATE);    	non-compiled	[CE]  ';'  expected	7	None	replace
254	[BUG]  [BUGGY]  if(field  ==  ')')  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(field  ==  ')')  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(field  ==  ')')  {	  if(date    ==    null    ||    field    ==    0)    {    if(date    {    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
255	[BUG]  [BUGGY]  int[][]  fields  =  getFields(field).toArray(new  int[field.size()  ]);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields(field).toArray(new  int[field.size()  ]);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getFields(field).toArray(new  int[field.size()  ]);	  int[][]    fields    =    getFields(field);    	non-compiled	[CE]  ';'  expected	16	None	replace
256	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.getInstanceCount())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.getInstanceCount())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.getInstanceCount())  {	  if(date    ==    null    ||    field    ==    JsonSecond.getInstanceUTC())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
257	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().days();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().days();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getChronology().days();	  int[][]    fields    =    getChronology();    	non-compiled	[CE]  ';'  expected	18	None	replace
258	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().timeZone();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().timeZone();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	int[][]  fields  =  getChronology().timeZone();	  int[][]    fields    =    getChronology();    	non-compiled	[CE]  ';'  expected	18	None	replace
259	[BUG]  [BUGGY]  if(date  ==  null  ||  field  <  1  ||  field  >  MAX_TIME_ZONE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  <  1  ||  field  >  MAX_TIME_ZONE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  <  1  ||  field  >  MAX_TIME_ZONE)  {	  if(date    ==    null    ||    field    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
260	[BUG]  [BUGGY]  if(date  ==  null  ||  field  <  1  ||  field  >  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  <  1  ||  field  >  DateUtils.SEMI_MONTH)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  <  1  ||  field  >  DateUtils.SEMI_MONTH)  {	  if(date    ==    null    ||    field    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
261	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	if(date  ==  null  ||  field  ==  0  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
262	[BUG]  [BUGGY]  Date  date  =  getDate(date,  field  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(date,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  getDate(date,  field  -  1);	  Date    date    =    getDate(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
263	[BUG]  [BUGGY]  Date  truncate  =  new  Date(date.getMillis());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  truncate  =  new  Date(date.getMillis());  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  truncate  =  new  Date(date.getMillis());	  Date    truncate    =    new    Date(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
264	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.year);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.year);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  this.year);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
265	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.separator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.separator);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  this.separator);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
266	[BUG]  [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.era);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {      [BUGGY]  Date  date  =  truncate(date,  field,  this.calendarField,  this.era);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	Date  date  =  truncate(date,  field,  this.calendarField,  this.era);	  Date    date    =    truncate(date,    field,    this.calendarField);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
