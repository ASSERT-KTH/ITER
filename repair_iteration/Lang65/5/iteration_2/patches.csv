bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(new  Date(field,  field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(new  Date(field,  field));	  gval.setTime(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
2	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(new  Date(field),  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(new  Date(field),  field);	  gval.setTime(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
3	[BUG]  [BUGGY]  gval.setTime(new  Date(field  +  1));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(new  Date(field  +  1));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(new  Date(field  +  1));	  gval.setTime(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
4	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.MILLISECOND,  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.MILLISECOND,  2);	  gval.set(Calendar.MILLISECOND,    3);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
5	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  true);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
6	[BUG]  [BUGGY]  gval.setMillis(getChronology().hourOfMonth().set(getMillis(),  field),  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().hourOfMonth().set(getMillis(),  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().hourOfMonth().set(getMillis(),  field),  false);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
7	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)/  2,  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)/  2,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)/  2,  false);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
8	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().getMillis());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().getMillis());	  gval.setMillis(getChronology().year().getMillis());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
9	[BUG]  [BUGGY]  gval.setMillis(getChronology().endFinal().getMillis());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().endFinal().getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().endFinal().getMillis());	  gval.setMillis(getChronology().year().getMillis());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
10	[BUG]  [BUGGY]  gval.setMillis(getChronology().month().getMillis());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().month().getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().month().getMillis());	  gval.setMillis(getChronology().year().getMillis());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
11	[BUG]  [BUGGY]  return  gval.getYear()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getYear()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getYear()  +  1;	  return    gval.getYear();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
12	[BUG]  [BUGGY]  return  gval.getDayOfMonth();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getDayOfMonth();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getDayOfMonth();	  return    gval.getYear();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
13	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field  *  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field  *  1);	  gval.set(Calendar.DATE,    field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
14	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  -  1,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field  -  1,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field  -  1,  field);	  gval.set(Calendar.DATE,    field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
15	[BUG]  [BUGGY]  gval.setMillis(getChronology().days().set(getMillis(),  field  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().days().set(getMillis(),  field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().days().set(getMillis(),  field  +  1));	  gval.setMillis(getChronology().days().set(getMillis(),    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  gval.setMillis(getChronology().hours().set(getMillis(),  field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().hours().set(getMillis(),  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().hours().set(getMillis(),  field));	  gval.setMillis(getChronology().days().set(getMillis(),    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  gval.setMillis(getChronology().days().set(getMillis(),  field),  cal1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().days().set(getMillis(),  field),  cal1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().days().set(getMillis(),  field),  cal1);	  gval.setMillis(getChronology().days().set(getMillis(),    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  gval.setTime(day,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(day,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(day,  field);	  gval.setTime(day);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
19	[BUG]  [BUGGY]  return  gval.getLocalMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getLocalMillis()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getLocalMillis()  +  1;	  return    gval.getLocalMillis();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(cal2.get(Calendar.MONTH)));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(cal2.get(Calendar.MONTH)));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  FieldUtils.safeMultiply(cal2.get(Calendar.MONTH)));	  return    gval.truncate(field,    FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
21	[BUG]  [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)+  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)+  1));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)+  1));	  return    gval.truncate(field,    FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
22	[BUG]  [BUGGY]  return  gval.truncate(date,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(date,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(date,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));	  return    gval.truncate(field,    FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
23	[BUG]  [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)-  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)-  1));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)-  1));	  return    gval.truncate(field,    FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
24	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getLocale(),  field),  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getLocale(),  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(getLocale(),  field),  false);	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(getLocale(),    field));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
25	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getLocale(),  field),  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getLocale(),  field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(getLocale(),  field),  true);	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(getLocale(),    field));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
26	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(getLocale(),  field));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(getLocale(),  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(getLocale(),  field));	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(getLocale(),    field));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
27	[BUG]  [BUGGY]  return  gval.truncate(field,  day);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  day);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  day);	  return    gval.truncate(day,    field);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
28	[BUG]  [BUGGY]  return  gval.truncate(day,  field,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(day,  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(day,  field,  false);	  return    gval.truncate(day,    field);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  return  gval.truncate(field,  year);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  year);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  year);	  return    gval.truncate(year,    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
30	[BUG]  [BUGGY]  return  gval.truncate(year,  field,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(year,  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(year,  field,  false);	  return    gval.truncate(year,    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
31	[BUG]  [BUGGY]  return  gval.getSecondMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getSecondMillis()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getSecondMillis()  +  1;	  return    gval.getMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  return  gval.getMillis()  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getMillis()  *  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getMillis()  *  1;	  return    gval.getMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  Date  gval  =  gval.getEndDate();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getEndDate();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getEndDate();	  Date    gval    =    gval.getDate();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  Date  gval  =  gval.getStartFinal();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getStartFinal();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getStartFinal();	  Date    gval    =    gval.getDate();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  return  gval.getTimeInMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getTimeInMillis()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getTimeInMillis()  +  1;	  return    gval.getTimeInMillis();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
36	[BUG]  [BUGGY]  return  gval.getTimeInMillis(),  field;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getTimeInMillis(),  field;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getTimeInMillis(),  field;	  return    gval.getTimeInMillis();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
37	[BUG]  [BUGGY]  gval.setMillis(getChronology().years().set(getMillis(),  field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().years().set(getMillis(),  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().years().set(getMillis(),  field));	  gval.setMillis(getChronology().months().set(getMillis(),    field));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
38	[BUG]  [BUGGY]  return  gval.toFinalTimeZone()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.toFinalTimeZone()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.toFinalTimeZone()  +  1;	  return    gval.toTimeZone()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
39	[BUG]  [BUGGY]  return  gval.toSecondZone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.toSecondZone();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.toSecondZone();	  return    gval.toTimeZone()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
40	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field,  3);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field,  3);	  gval.set(Calendar.DATE,    field,    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
41	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  4);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field,  4);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field,  4);	  gval.set(Calendar.DATE,    field,    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
42	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field  -  cal1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field  -  cal1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field  -  cal1));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(cal1    -    field));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
43	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[cal1  -  field));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[cal1  -  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[cal1  -  field));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(cal1    -    field));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
44	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(cal2  -  field));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(cal2  -  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(cal2  -  field));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(cal1    -    field));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
45	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  false);	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(getChronology(),    field));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
46	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  true);	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(getChronology(),    field));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
47	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(getChronology(),  field));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(getChronology(),  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(getChronology(),  field));	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(getChronology(),    field));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
48	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  this.endFinal);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  this.endFinal);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(getChronology(),  field),  this.endFinal);	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(getChronology(),    field));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
49	[BUG]  [BUGGY]  gval.setMillis(getCalendarMillis()  *  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getCalendarMillis()  *  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getCalendarMillis()  *  1);	  gval.setMillis(getCalendarMillis()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
50	[BUG]  [BUGGY]  gval.setMillis(getDayOfMonth()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getDayOfMonth()  -  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getDayOfMonth()  -  1);	  gval.setMillis(getCalendarMillis()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
51	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeToInt(field),  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeToInt(field),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeToInt(field),  field);	  gval.set(Calendar.DATE,    FieldUtils.safeToInt(field));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeToInt(field),  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeToInt(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeToInt(field),  false);	  gval.set(Calendar.DATE,    FieldUtils.safeToInt(field));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
53	[BUG]  [BUGGY]  return  gval.truncate(field,  field  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  field  +  2);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  field  +  2);	  return    gval.truncate(field,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
54	[BUG]  [BUGGY]  return  gval.truncate(field,  endFinal  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  endFinal  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  endFinal  +  1);	  return    gval.truncate(field,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
55	[BUG]  [BUGGY]  return  gval.truncate(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(date,  field  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(date,  field  +  1);	  return    gval.truncate(field,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
56	[BUG]  [BUGGY]  return  gval.setTime(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.setTime(date,  field  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.setTime(date,  field  +  1);	  return    gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  return  gval.setTime(date,  field,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.setTime(date,  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.setTime(date,  field,  false);	  return    gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  return  gval.setTime(field,  date);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.setTime(field,  date);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.setTime(field,  date);	  return    gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSuccess( " ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAsSuccess( " ");  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAsSuccess( " ");	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
60	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwInternal();	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
61	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertion( "msg.dup.field.truncate ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAssertion( "msg.dup.field.truncate ");  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAssertion( "msg.dup.field.truncate ");	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
62	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertion( "msg.dup.field.truncate ",  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAssertion( "msg.dup.field.truncate ",  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAssertion( "msg.dup.field.truncate ",  field);	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
63	[BUG]  [BUGGY]  return  gval.truncate(date,  field,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(date,  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(date,  field,  false);	  return    gval.truncate(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
64	[BUG]  [BUGGY]  return  gval.truncate(date,  field,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(date,  field,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(date,  field,  true);	  return    gval.truncate(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
65	[BUG]  [BUGGY]  return  gval.truncate(date,  field,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(date,  field,  null);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(date,  field,  null);	  return    gval.truncate(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  gval.setMillis(getChronology().days().getMillis(),  field  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().days().getMillis(),  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().days().getMillis(),  field  +  1);	  gval.setMillis(getChronology().days().getMillis(),    field);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
67	[BUG]  [BUGGY]  gval.setMillis(getChronology().days().getMillis(),  field,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().days().getMillis(),  field,  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().days().getMillis(),  field,  1);	  gval.setMillis(getChronology().days().getMillis(),    field);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
68	[BUG]  [BUGGY]  gval.setMillis(getChronology().days().getMillis(),  field,  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().days().getMillis(),  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().days().getMillis(),  field,  false);	  gval.setMillis(getChronology().days().getMillis(),    field);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
69	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  1);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
70	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  3);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  3);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
71	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  2);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
72	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  4);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  4);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field),  4);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
73	[BUG]  [BUGGY]  Date  gval  =  gval.getTimeInMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getTimeInMillis()  +  1;  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getTimeInMillis()  +  1;	  Date    gval    =    gval.getTimeInMillis();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
74	[BUG]  [BUGGY]  Date  gval  =  gval.getTimeInMillis(field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getTimeInMillis(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getTimeInMillis(field);	  Date    gval    =    gval.getTimeInMillis();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
75	[BUG]  [BUGGY]  gval.setMillis(getMillis());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getMillis());	  gval.setTime(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
76	[BUG]  [BUGGY]  gval.setTime(getMillis(),  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(getMillis(),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(getMillis(),  field);	  gval.setTime(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
77	[BUG]  [BUGGY]  gval.setTime(getMillis()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(getMillis()  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(getMillis()  +  1);	  gval.setTime(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  gval.setTime(dayOfMonth,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(dayOfMonth,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(dayOfMonth,  field);	  gval.setTime(field);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
79	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field  *  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field  *  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field  *  1));	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field    +    1));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
80	[BUG]  [BUGGY]  gval.setMillis(getChronology().hourOfMonth().set(getMillis(),  field  +  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().hourOfMonth().set(getMillis(),  field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().hourOfMonth().set(getMillis(),  field  +  1));	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field    +    1));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
81	[BUG]  [BUGGY]  gval.setTime(truncate(date,  field),  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(truncate(date,  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(truncate(date,  field),  false);	  gval.setTime(truncate(date,    field));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
82	[BUG]  [BUGGY]  gval.setTime(truncate(date,  field),  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(truncate(date,  field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(truncate(date,  field),  true);	  gval.setTime(truncate(date,    field));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
83	[BUG]  [BUGGY]  gval.setTime(truncate(date,  field),  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(truncate(date,  field),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(truncate(date,  field),  field);	  gval.setTime(truncate(date,    field));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
84	[BUG]  [BUGGY]  return  gval.getEndDate();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getEndDate();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getEndDate();	  return    gval.getStartDate();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
85	[BUG]  [BUGGY]  return  gval.getStartDate()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getStartDate()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getStartDate()  +  1;	  return    gval.getStartDate();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
86	[BUG]  [BUGGY]  return  gval.getStartFinal();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getStartFinal();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getStartFinal();	  return    gval.getStartDate();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
87	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(field),  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(field),  false);	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(field));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  Date  gval  =  gval.getField(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getField(Calendar.DAY_OF_MONTH);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getField(Calendar.DAY_OF_MONTH);	  Date    gval    =    gval.getChronology();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  return  gval.truncate(field,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  true);	  return    gval.truncate(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
90	[BUG]  [BUGGY]  return  gval.truncate(field,  false,  date);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  false,  date);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  false,  date);	  return    gval.truncate(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
91	[BUG]  [BUGGY]  return  gval.truncate(date,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(date,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(date,  false);	  return    gval.truncate(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
92	[BUG]  [BUGGY]  return  gval.getTimeZone()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getTimeZone()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getTimeZone()  +  1;	  return    gval.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
93	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field,  true);	  gval.set(Calendar.DATE,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
94	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  1,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field  +  1,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field  +  1,  false);	  gval.set(Calendar.DATE,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
95	[BUG]  [BUGGY]  gval.setTime(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(date,  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(date,  field  +  1);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
96	[BUG]  [BUGGY]  gval.setTime(date,  field,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(date,  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(date,  field,  false);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
97	[BUG]  [BUGGY]  gval.setTime(field,  date);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(field,  date);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(field,  date);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
98	[BUG]  [BUGGY]  return  gval.truncate(field,  field,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  field,  false);	  return    gval.truncate(field,    date);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
99	[BUG]  [BUGGY]  gval.setTime(getCalendarMillis(),  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(getCalendarMillis(),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(getCalendarMillis(),  field);	  gval.setTime(getCalendarMillis());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
100	[BUG]  [BUGGY]  gval.setTime(getEndMillis());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(getEndMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(getEndMillis());	  gval.setTime(getCalendarMillis());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
101	[BUG]  [BUGGY]  gval.setMillis(getChronology().hours().getMillis()  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().hours().getMillis()  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().hours().getMillis()  +  1);	  gval.setMillis(getChronology().days().getMillis()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
102	[BUG]  [BUGGY]  gval.setMillis(getChronology().months().getMillis()  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().months().getMillis()  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().months().getMillis()  +  1);	  gval.setMillis(getChronology().days().getMillis()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
103	[BUG]  [BUGGY]  gval.setMillis(getChronology().startFinal().set(getMillis(),  field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().startFinal().set(getMillis(),  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().startFinal().set(getMillis(),  field));	  gval.setMillis(getChronology().endFinal().set(getMillis(),    field));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
104	[BUG]  [BUGGY]  gval.setMillis(getChronology().endFinal().set(getMillis(),  field  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().endFinal().set(getMillis(),  field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().endFinal().set(getMillis(),  field  +  1));	  gval.setMillis(getChronology().endFinal().set(getMillis(),    field));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
105	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[1],  field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[1],  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[1],  field));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(fields[0],    field));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
106	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[0],  field  +  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[0],  field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[0],  field  +  1));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(fields[0],    field));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
107	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[0],  field),  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[0],  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields[0],  field),  false);	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(fields[0],    field));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
108	[BUG]  [BUGGY]  return  gval.getIntValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getIntValue()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getIntValue()  +  1;	  return    gval.getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
109	[BUG]  [BUGGY]  return  gval.getLongValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getLongValue();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getLongValue();	  return    gval.getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
110	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.MILLISECOND,  0,  field  +  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
111	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  fields);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  fields);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.MILLISECOND,  0,  fields);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
112	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.MILLISECOND,  0,  field,  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
113	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.MILLISECOND,  0,  field,  2);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
114	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field  +  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field  +  2);	  gval.set(Calendar.DATE,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
115	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  1,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field  +  1,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field  +  1,  field);	  gval.set(Calendar.DATE,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
116	[BUG]  [BUGGY]  gval.setMillis(getChronology().years().get(field).getMillis());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().years().get(field).getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().years().get(field).getMillis());	  gval.setMillis(getChronology().years().getMillis());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
117	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSwitch( "Date  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAsSwitch( "Date  must  not  be  null. ");  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAsSwitch( "Date  must  not  be  null. ");	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
118	[BUG]  [BUGGY]  aughtException( "The  date  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtException( "The  date  must  not  be  null. ");  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtException( "The  date  must  not  be  null. ");	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
119	[BUG]  [BUGGY]  Date  gval  =  gval.setTime(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.setTime(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.setTime(field);	  Date    gval    =    gval.setTime(date);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
120	[BUG]  [BUGGY]  Date  gval  =  gval.setTime(date,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.setTime(date,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.setTime(date,  field);	  Date    gval    =    gval.setTime(date);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
121	[BUG]  [BUGGY]  return  gval.getSecond()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getSecond()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getSecond()  +  1;	  return    gval.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
122	[BUG]  [BUGGY]  return  gval.getStart();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getStart();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getStart();	  return    gval.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
123	[BUG]  [BUGGY]  return  gval.getEndMillis();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getEndMillis();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getEndMillis();	  return    gval.getStartMillis();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
124	[BUG]  [BUGGY]  return  gval.getStartMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getStartMillis()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getStartMillis()  +  1;	  return    gval.getStartMillis();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  return  gval.getStartMillis()  +  field;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getStartMillis()  +  field;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getStartMillis()  +  field;	  return    gval.getStartMillis();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
126	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  false);	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(field));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
127	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  true);	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(field));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
128	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field,  false));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field,  false));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field,  false));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(field));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
129	[BUG]  [BUGGY]  return  gval.truncate(date,  FieldUtils.safeNegate(field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(date,  FieldUtils.safeNegate(field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(date,  FieldUtils.safeNegate(field));	  return    gval.truncate(field,    FieldUtils.safeNegate(field));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
130	[BUG]  [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(field));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  FieldUtils.safeMultiply(field));	  return    gval.truncate(field,    FieldUtils.safeNegate(field));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
131	[BUG]  [BUGGY]  return  gval.truncate(year,  FieldUtils.safeNegate(field));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(year,  FieldUtils.safeNegate(field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(year,  FieldUtils.safeNegate(field));	  return    gval.truncate(field,    FieldUtils.safeNegate(field));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
132	[BUG]  [BUGGY]  gval.setMillis(getCalendarMillis(),  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getCalendarMillis(),  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getCalendarMillis(),  field  +  1);	  gval.setMillis(getCalendarMillis(),    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
133	[BUG]  [BUGGY]  gval.setMillis(getCalendarMillis(),  field,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getCalendarMillis(),  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getCalendarMillis(),  field,  false);	  gval.setMillis(getCalendarMillis(),    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
134	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)/  2,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)/  2,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)/  2,  0);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
135	[BUG]  [BUGGY]  gval.setMillis(getChronology().months().getMillis(),  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().months().getMillis(),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().months().getMillis(),  field);	  gval.setMillis(getChronology().days().getMillis(),    field);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
136	[BUG]  [BUGGY]  Date  gval  =  gval.getStartDate();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getStartDate();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getStartDate();	  Date    gval    =    gval.getDate();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
137	[BUG]  [BUGGY]  return  gval.truncate(field,  FieldUtils.safeAdd(getLocale()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  FieldUtils.safeAdd(getLocale()));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  FieldUtils.safeAdd(getLocale()));	  return    gval.truncate(field,    FieldUtils.safeNegate(field));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
138	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(new  Date(field),  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(new  Date(field),  false);	  gval.setTime(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
139	[BUG]  [BUGGY]  return  gval.getTimeInMillis(field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getTimeInMillis(field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getTimeInMillis(field);	  return    gval.getTimeInMillis();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
140	[BUG]  [BUGGY]  gval.setMillis(getChronology().minutes().getMillis());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().minutes().getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().minutes().getMillis());	  gval.setMillis(getChronology().hours().getMillis());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
141	[BUG]  [BUGGY]  gval.setMillis(getChronology().hours().get(Calendar.MILLISECOND));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().hours().get(Calendar.MILLISECOND));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().hours().get(Calendar.MILLISECOND));	  gval.setMillis(getChronology().hours().getMillis());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
142	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(field,  cal1  -  field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(field,  cal1  -  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(field,  cal1  -  field));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(cal1    -    field));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
143	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field1  -  cal2));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field1  -  cal2));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field1  -  cal2));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(cal1    -    field));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
144	[BUG]  [BUGGY]  gval.setMillis(getChronology().monthOfYear().getMillis());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().monthOfYear().getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().monthOfYear().getMillis());	  gval.setMillis(getChronology().year().getMillis());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
145	[BUG]  [BUGGY]  return  gval.truncate(field,  field  +  3);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  field  +  3);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  field  +  3);	  return    gval.truncate(field,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
146	[BUG]  [BUGGY]  return  gval.truncate(field,  field  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  field  *  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  field  *  1);	  return    gval.truncate(field,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
147	[BUG]  [BUGGY]  gval.setTime(date,  FieldUtils.safeMultiply(field));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(date,  FieldUtils.safeMultiply(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(date,  FieldUtils.safeMultiply(field));	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
148	[BUG]  [BUGGY]  return  gval.getSecondMillis();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getSecondMillis();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getSecondMillis();	  return    gval.getMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
149	[BUG]  [BUGGY]  gval.setTime(startFinal);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(startFinal);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(startFinal);	  gval.setTime(endFinal);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
150	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field  +  3);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field  +  3);	  gval.set(Calendar.DATE,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
151	[BUG]  [BUGGY]  gval.setMillis(getChronology().monthOfMonth().set(getMillis(),  field  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().monthOfMonth().set(getMillis(),  field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().monthOfMonth().set(getMillis(),  field  +  1));	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field    +    1));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
152	[BUG]  [BUGGY]  return  gval.getMonth();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getMonth();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getMonth();	  return    gval.getYear();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
153	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSwitch( "The  date  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAsSwitch( "The  date  must  not  be  null. ");  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAsSwitch( "The  date  must  not  be  null. ");	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
154	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "The  date  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "The  date  must  not  be  null. ");  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "The  date  must  not  be  null. ");	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
155	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
156	[BUG]  [BUGGY]  safeTruncate(field,  field);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  safeTruncate(field,  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	safeTruncate(field,  field);	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
157	[BUG]  [BUGGY]  gval.setMillis(getChronology().millis().getMillis());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().millis().getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().millis().getMillis());	  gval.setMillis(getChronology().months().getMillis());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
158	[BUG]  [BUGGY]  return  gval.truncate(day,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(day,  field  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(day,  field  +  1);	  return    gval.truncate(day,    field);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
159	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  -  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.MILLISECOND,  0,  field  -  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
160	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(fields[0],  field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(fields[0],  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(fields[0],  field));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(fields[0],    field));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
161	[BUG]  [BUGGY]  return  gval.getTime(field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getTime(field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getTime(field);	  return    gval.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
162	[BUG]  [BUGGY]  return  gval.getTimeZone(field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getTimeZone(field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getTimeZone(field);	  return    gval.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
163	[BUG]  [BUGGY]  gval.setTime(dayOfMonth  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(dayOfMonth  -  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(dayOfMonth  -  1);	  gval.setTime(dayOfMonth);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
164	[BUG]  [BUGGY]  gval.setTime(getCalendarMillis()  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(getCalendarMillis()  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(getCalendarMillis()  +  1);	  gval.setTime(getCalendarMillis());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
165	[BUG]  [BUGGY]  gval.setMillis(truncate(date,  field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(truncate(date,  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(truncate(date,  field));	  gval.setTime(truncate(date,    field));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
166	[BUG]  [BUGGY]  Date  gval  =  gval.getTime(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getTime(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getTime(field);	  Date    gval    =    gval.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
167	[BUG]  [BUGGY]  return  gval.getStartValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getStartValue();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getStartValue();	  return    gval.getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
168	[BUG]  [BUGGY]  safeTruncate(field,  FieldUtils.safeNegate(field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  safeTruncate(field,  FieldUtils.safeNegate(field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	safeTruncate(field,  FieldUtils.safeNegate(field));	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
169	[BUG]  [BUGGY]  safeTruncate(field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  safeTruncate(field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	safeTruncate(field);	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
170	[BUG]  [BUGGY]  safeTruncate(field,  FieldUtils.safeAdd(getValue()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  safeTruncate(field,  FieldUtils.safeAdd(getValue()));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	safeTruncate(field,  FieldUtils.safeAdd(getValue()));	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
171	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(field),  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(field),  true);	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(field));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
172	[BUG]  [BUGGY]  return  gval.toDate();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.toDate();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.toDate();	  return    gval.toTimeZone()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
173	[BUG]  [BUGGY]  return  gval.toFinalTimeZone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.toFinalTimeZone();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.toFinalTimeZone();	  return    gval.toTimeZone()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
174	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  999);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.MILLISECOND,  999);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.MILLISECOND,  999);	  gval.set(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
175	[BUG]  [BUGGY]  return  gval.truncate(year,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(year,  field  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(year,  field  +  1);	  return    gval.truncate(year,    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
176	[BUG]  [BUGGY]  return  gval.truncate(field,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  null);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  null);	  return    gval.truncate(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
177	[BUG]  [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(cal2.get(Calendar.MONTH)+  1));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(cal2.get(Calendar.MONTH)+  1));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  FieldUtils.safeMultiply(cal2.get(Calendar.MONTH)+  1));	  return    gval.truncate(field,    FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
178	[BUG]  [BUGGY]  gval.setMillis(getChronology().days().set(getMillis(),  field),  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().days().set(getMillis(),  field),  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().days().set(getMillis(),  field),  0);	  gval.setMillis(getChronology().days().set(getMillis(),    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
179	[BUG]  [BUGGY]  gval.setMillis(getChronology().days().set(getMillis(),  field),  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().days().set(getMillis(),  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().days().set(getMillis(),  field),  false);	  gval.setMillis(getChronology().days().set(getMillis(),    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
180	[BUG]  [BUGGY]  gval.setMillis(getChronology().monthOfMonth().set(getMillis(),  field),  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().monthOfMonth().set(getMillis(),  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().monthOfMonth().set(getMillis(),  field),  false);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
181	[BUG]  [BUGGY]  gval.setMillis(getChronology().hourOfDay().set(getMillis(),  field),  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().hourOfDay().set(getMillis(),  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().hourOfDay().set(getMillis(),  field),  false);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
182	[BUG]  [BUGGY]  Date  gval  =  gval.getZone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getZone();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getZone();	  Date    gval    =    gval.getDate();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
183	[BUG]  [BUGGY]  Date  gval  =  gval.getTimeZone(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  Date  gval  =  gval.getTimeZone(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	Date  gval  =  gval.getTimeZone(field);	  Date    gval    =    gval.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
184	[BUG]  [BUGGY]  return  gval.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.get(Calendar.MILLISECOND);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.get(Calendar.MILLISECOND);	  return    gval.getLocalMillis();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
185	[BUG]  [BUGGY]  return  gval.getStartMillis(),  field;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.getStartMillis(),  field;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.getStartMillis(),  field;	  return    gval.getStartMillis();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
186	[BUG]  [BUGGY]  return  gval.setTime(time);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.setTime(time);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.setTime(time);	  return    gval.setTime(field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
187	[BUG]  [BUGGY]  gval.setTime(date,  FieldUtils.currentTimeMillis());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(date,  FieldUtils.currentTimeMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(date,  FieldUtils.currentTimeMillis());	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
188	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  [Delete]  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	[Delete]	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
189	[BUG]  [BUGGY]  aughtException( "The  date  must  not  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtException( "The  date  must  not  be  null. ");  }  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtException( "The  date  must  not  be  null. ");  }	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
190	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields  -  cal1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields  -  cal1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(fields  -  cal1));	  gval.set(Calendar.DATE,    FieldUtils.safeMultiply(cal1    -    field));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
191	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(cal1  -  field));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(cal1  -  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(cal1  -  field));	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(field));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
192	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(endFinal,  field));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeAdd(endFinal,  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeAdd(endFinal,  field));	  gval.set(Calendar.DATE,    FieldUtils.safeAdd(field));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
193	[BUG]  [BUGGY]  gval.setTime(truncate(date,  field  +  1));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(truncate(date,  field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(truncate(date,  field  +  1));	  gval.setTime(truncate(date,    field));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
194	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIterator( "msg.js.not.truncate ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAsIterator( "msg.js.not.truncate ");  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAsIterator( "msg.js.not.truncate ");	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
195	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");  }	  if(field    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
196	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)-  1,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)-  1,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)-  1,  false);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    false);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
197	[BUG]  [BUGGY]  gval.setTime(cal1.getTime());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setTime(cal1.getTime());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setTime(cal1.getTime());	  gval.setTime(endFinal);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
198	[BUG]  [BUGGY]  return  gval.truncate(cal1,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(cal1,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(cal1,  FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));	  return    gval.truncate(field,    FieldUtils.safeMultiply(cal1.get(Calendar.MONTH)));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
199	[BUG]  [BUGGY]  gval.setMillis(getSecondMillis()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getSecondMillis()  -  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getSecondMillis()  -  1);	  gval.setMillis(getCalendarMillis()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
200	[BUG]  [BUGGY]  return  gval.truncate(field,  FieldUtils.safeAdd(getLocalMillis(),  field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  FieldUtils.safeAdd(getLocalMillis(),  field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  FieldUtils.safeAdd(getLocalMillis(),  field));	  return    gval.truncate(field,    FieldUtils.safeNegate(field));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
201	[BUG]  [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(getValue(field)));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(field,  FieldUtils.safeMultiply(getValue(field)));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(field,  FieldUtils.safeMultiply(getValue(field)));	  return    gval.truncate(field,    FieldUtils.safeNegate(field));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
202	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  -  1,  cal1.getTime());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.set(Calendar.DATE,  field  -  1,  cal1.getTime());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.set(Calendar.DATE,  field  -  1,  cal1.getTime());	  gval.set(Calendar.DATE,    field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
203	[BUG]  [BUGGY]  return  gval.truncate(cal1  +  field,  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  return  gval.truncate(cal1  +  field,  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	return  gval.truncate(cal1  +  field,  field);	  return    gval.truncate(year,    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
204	[BUG]  [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)-  1,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  truncate(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  false);      [BUGGY]  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)-  1,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  truncate  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	gval.setMillis(getChronology().dayOfMonth().set(getMillis(),  field)-  1,  0);	  gval.setMillis(getChronology().dayOfMonth().set(getMillis(),    field),    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
