bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (date == null) { [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { [BUGGY] if (date == null) { [BUGGY] throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, false); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { [BUGGY] [BUGGY] if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, false); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	543	543	1	add	
3	[BUG] [BUGGY] Calendar gval = Calendar.getInstance(); [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } [BUGGY] Calendar gval = Calendar.getInstance(); [BUGGY] gval.setTime(date); modify(gval, field, false); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	546	546	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } [BUGGY] [BUGGY] Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, false); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	546	546	1	add	
5	[BUG] [BUGGY] gval.setTime(date); [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); [BUGGY] gval.setTime(date); [BUGGY] modify(gval, field, false); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	547	547	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); [BUGGY] [BUGGY] gval.setTime(date); modify(gval, field, false); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	547	547	1	add	
7	[BUG] [BUGGY] modify(gval, field, false); [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); [BUGGY] modify(gval, field, false); [BUGGY] return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	548	548	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); [BUGGY] [BUGGY] modify(gval, field, false); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	548	548	1	add	
9	[BUG] [BUGGY] return gval.getTime(); [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, false); [BUGGY] return gval.getTime(); [BUGGY] } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date truncate(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, false); [BUGGY] [BUGGY] return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] truncate [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 date endFinal gval rounded spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	549	549	1	add	
11	[BUG] [BUGGY] if (val.get(Calendar.YEAR) > 280000000) { [FE] AssertionFailedError [CONTEXT] private static void modify(Calendar val, int field, boolean round) { [BUGGY] if (val.get(Calendar.YEAR) > 280000000) { [BUGGY] throw new ArithmeticException("Calendar value too large for accurate calculations"); }        [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	620	620	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static void modify(Calendar val, int field, boolean round) { [BUGGY] [BUGGY] if (val.get(Calendar.YEAR) > 280000000) { throw new ArithmeticException("Calendar value too large for accurate calculations"); }        [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	620	620	1	add	
13	[BUG] [BUGGY] boolean roundUp = false; [FE] AssertionFailedError [CONTEXT]        [BUGGY] boolean roundUp = false; [BUGGY] for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	641	641	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]        [BUGGY] [BUGGY] boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	641	641	1	add	
15	[BUG] [BUGGY] for (int i = 0; i < fields.length; i++) { [FE] AssertionFailedError [CONTEXT]        boolean roundUp = false; [BUGGY] for (int i = 0; i < fields.length; i++) { [BUGGY] for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]        boolean roundUp = false; [BUGGY] [BUGGY] for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	add	
17	[BUG] [BUGGY] for (int j = 0; j < fields[i].length; j++) { [FE] AssertionFailedError [CONTEXT]       boolean roundUp = false; for (int i = 0; i < fields.length; i++) { [BUGGY] for (int j = 0; j < fields[i].length; j++) { [BUGGY] if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]       boolean roundUp = false; for (int i = 0; i < fields.length; i++) { [BUGGY] [BUGGY] for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	add	
19	[BUG] [BUGGY] if (fields[i][j] == field) { [FE] AssertionFailedError [CONTEXT]      boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { [BUGGY] if (fields[i][j] == field) { [BUGGY]  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	644	644	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]      boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { [BUGGY] [BUGGY] if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	644	644	1	add	
21	[BUG] [BUGGY] if (round && roundUp) { [FE] AssertionFailedError [CONTEXT]     boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  [BUGGY] if (round && roundUp) { [BUGGY] if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	646	646	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]     boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  [BUGGY] [BUGGY] if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	646	646	1	add	
23	[BUG] [BUGGY] return; [FE] AssertionFailedError [CONTEXT] } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } } else {   val.add(fields[i][0], 1); } } [BUGGY] return; [BUGGY] } }  int offset = 0; boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	663	663	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } } else {   val.add(fields[i][0], 1); } } [BUGGY] [BUGGY] return; } }  int offset = 0; boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	663	663	1	add	
25	[BUG] [BUGGY] int offset = 0; [FE] AssertionFailedError [CONTEXT] } else {   val.add(fields[i][0], 1); } } return; } }  [BUGGY] int offset = 0; [BUGGY] boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	667	667	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else {   val.add(fields[i][0], 1); } } return; } }  [BUGGY] [BUGGY] int offset = 0; boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	667	667	1	add	
27	[BUG] [BUGGY] boolean offsetSet = false; [FE] AssertionFailedError [CONTEXT]   val.add(fields[i][0], 1); } } return; } }  int offset = 0; [BUGGY] boolean offsetSet = false; [BUGGY]  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;   [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	668	668	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   val.add(fields[i][0], 1); } } return; } }  int offset = 0; [BUGGY] [BUGGY] boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;   [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	668	668	1	add	
29	[BUG] [BUGGY] switch (field) { [FE] AssertionFailedError [CONTEXT] val.add(fields[i][0], 1); } } return; } }  int offset = 0; boolean offsetSet = false;  [BUGGY] switch (field) { [BUGGY] case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;   if (offset >= 15) { offset -= 15; [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] val.add(fields[i][0], 1); } } return; } }  int offset = 0; boolean offsetSet = false;  [BUGGY] [BUGGY] switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;   if (offset >= 15) { offset -= 15; [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	add	
31	[BUG] [BUGGY] if (!offsetSet) { [FE] AssertionFailedError [CONTEXT]  offset = val.get(Calendar.HOUR_OF_DAY); if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } [BUGGY] if (!offsetSet) { [BUGGY] int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	700	700	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  offset = val.get(Calendar.HOUR_OF_DAY); if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } [BUGGY] [BUGGY] if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	700	700	1	add	
33	[BUG] [BUGGY] int min = val.getActualMinimum(fields[i][0]); [FE] AssertionFailedError [CONTEXT] offset = val.get(Calendar.HOUR_OF_DAY); if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { [BUGGY] int min = val.getActualMinimum(fields[i][0]); [BUGGY] int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported"); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	701	701	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] offset = val.get(Calendar.HOUR_OF_DAY); if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { [BUGGY] [BUGGY] int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported"); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	701	701	1	add	
35	[BUG] [BUGGY] int max = val.getActualMaximum(fields[i][0]); [FE] AssertionFailedError [CONTEXT] if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); [BUGGY] int max = val.getActualMaximum(fields[i][0]); [BUGGY]  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported");  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); [BUGGY] [BUGGY] int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported");  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	add	
37	[BUG] [BUGGY] offset = val.get(fields[i][0]) - min; [FE] AssertionFailedError [CONTEXT] } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  [BUGGY] offset = val.get(fields[i][0]) - min; [BUGGY]  roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	704	704	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  [BUGGY] [BUGGY] offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	704	704	1	add	
39	[BUG] [BUGGY] roundUp = offset > ((max - min) / 2); [FE] AssertionFailedError [CONTEXT] offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  [BUGGY] roundUp = offset > ((max - min) / 2); [BUGGY] }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	706	706	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  [BUGGY] [BUGGY] roundUp = offset > ((max - min) / 2); }  val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	706	706	1	add	
41	[BUG] [BUGGY] val.set(fields[i][0], val.get(fields[i][0]) - offset); [FE] AssertionFailedError [CONTEXT] } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  [BUGGY] val.set(fields[i][0], val.get(fields[i][0]) - offset); [BUGGY] } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	709	709	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  [BUGGY] [BUGGY] val.set(fields[i][0], val.get(fields[i][0]) - offset); } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean offsetSet round roundUp long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max min offset Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	709	709	1	add	
43	[BUG] [BUGGY] public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT"); [FE] AssertionFailedError [CONTEXT] [BUGGY] public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT"); [BUGGY]  [CLASS] DateUtils DateIterator  [VARIABLES] 	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.22941573387056174	44	44	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT"); [CLASS] DateUtils DateIterator  [VARIABLES] 	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.22941573387056174	44	44	1	add	
45	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public final static int SEMI_MONTH = 1001; [CLASS] DateUtils DateIterator  [VARIABLES] 	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.22941573387056174	72	72	1	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public final static int SEMI_MONTH = 1001; [CLASS] DateUtils DateIterator  [VARIABLES] 	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.22941573387056174	72	72	1	add	
