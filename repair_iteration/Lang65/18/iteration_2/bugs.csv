bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  +  min,  roundUp);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  +  min,  roundUp);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  +  min,  roundUp);	  int    max    =    val.getActualMaximum(fields[i][0]    +    min);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  +  min,  offset);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  +  min,  offset);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  +  min,  offset);	  int    max    =    val.getActualMaximum(fields[i][0]    +    min);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  +  min,  offsetSet);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  +  min,  offsetSet);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  +  min,  offsetSet);	  int    max    =    val.getActualMaximum(fields[i][0]    +    min);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  int  max  =  val.getMaximum(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getMaximum(fields[i][0]);  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getMaximum(fields[i][0]);	      int    max    =    val.getActualMaximum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  int  max  =  val.getMinimum(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getMinimum(fields[i][0]);  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getMinimum(fields[i][0]);	      int    max    =    val.getActualMaximum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  int  max  =  val.getMaximum(fields[i][0]  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getMaximum(fields[i][0]  +  1);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getMaximum(fields[i][0]  +  1);	  int    max    =    val.getActualMaximum(fields[i][0]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(offsetSet)  {  int  max  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  if(offsetSet)  {  int  max  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	if(offsetSet)  {  int  max  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }	      int    max    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  if(fields[i][0]  ==  field)  {  int  max  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  if(fields[i][0]  ==  field)  {  int  max  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	if(fields[i][0]  ==  field)  {  int  max  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }	      int    max    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  min,  roundUp);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  min,  roundUp);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0],  min,  roundUp);	  int    max    =    val.getActualMaximum(fields[i][0],    min);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  min  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  min  +  1);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0],  min  +  1);	  int    max    =    val.getActualMaximum(fields[i][0],    min);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
11	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  min,  offset);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  min,  offset);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0],  min,  offset);	  int    max    =    val.getActualMaximum(fields[i][0],    min);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  min,  offsetSet);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  min,  offsetSet);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0],  min,  offsetSet);	  int    max    =    val.getActualMaximum(fields[i][0],    min);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  min,  roundUp);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  min,  roundUp);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  -  min,  roundUp);	  int    max    =    val.getActualMaximum(fields[i][0]    -    min);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  min,  offset);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  min,  offset);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  -  min,  offset);	  int    max    =    val.getActualMaximum(fields[i][0]    -    min);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  min,  offsetSet);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  min,  offsetSet);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  -  min,  offsetSet);	  int    max    =    val.getActualMaximum(fields[i][0]    -    min);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  int  max  =  val.getMaximum(fields[i][0]  -  min,  roundUp);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getMaximum(fields[i][0]  -  min,  roundUp);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getMaximum(fields[i][0]  -  min,  roundUp);	  int    max    =    val.getActualMaximum(fields[i][0]    -    min);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  int  max  =  val.get(fields[i][0])-  min;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.get(fields[i][0])-  min;  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.get(fields[i][0])-  min;	  int    max    =    val.get(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  int  max  =  val.get(fields[i][0]  +  min);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.get(fields[i][0]  +  min);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.get(fields[i][0]  +  min);	  int    max    =    val.get(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  int  min  =  val.get(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  min  =  val.get(fields[i][0]);  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  min  =  val.get(fields[i][0]);	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  int  min  =  val.getActualMinimum(fields[i][0]  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  min  =  val.getActualMinimum(fields[i][0]  +  1);  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  min  =  val.getActualMinimum(fields[i][0]  +  1);	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  int  min  =  val.getIntValue(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  min  =  val.getIntValue(fields[i][0]);  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  min  =  val.getIntValue(fields[i][0]);	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  if(offsetSet)  {  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  if(offsetSet)  {  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	if(offsetSet)  {  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }	      int    max    =    val.getActualMaximum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  if(fields[i][0]  ==  field)  {  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  if(fields[i][0]  ==  field)  {  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	if(fields[i][0]  ==  field)  {  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }	      int    max    =    val.getActualMaximum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  int  max  =  val.getIntValue(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getIntValue(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getIntValue(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;	      int    max    =    val.getActualMaximum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  field);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  field);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0],  field);	  int    max    =    val.getActualMaximum(fields[i][0],    min);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  int  max  =  val.getActualMinimum(fields[i][0]  +  min);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMinimum(fields[i][0]  +  min);  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMinimum(fields[i][0]  +  min);	      int    max    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  int  max  =  val.get(fields[i][0]  -  min);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.get(fields[i][0]  -  min);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.get(fields[i][0]  -  min);	  int    max    =    val.get(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  min  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  min  +  1);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  -  min  +  1);	  int    max    =    val.getActualMaximum(fields[i][0]    -    min);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  int  min  =  val.getActualMaximum(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  min  =  val.getActualMaximum(fields[i][0]);  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  min  =  val.getActualMaximum(fields[i][0]);	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  -  1);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  -  1);	  int    max    =    val.getActualMaximum(fields[i][0]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  int  max  =  val.get(fields[i][0]  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.get(fields[i][0]  +  1);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.get(fields[i][0]  +  1);	  int    max    =    val.getActualMaximum(fields[i][0]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  int  max  =  val.get(fields[i][0]).getActualMaximum(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.get(fields[i][0]).getActualMaximum(fields[i][0]);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.get(fields[i][0]).getActualMaximum(fields[i][0]);	  int    max    =    val.get(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0])-  min;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0])-  min;  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0])-  min;	      int    max    =    val.getActualMaximum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  int  min  =  val.getActualMinimum(fields[i][0])-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  min  =  val.getActualMinimum(fields[i][0])-  1;  [BUGGY]    int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  min  =  val.getActualMinimum(fields[i][0])-  1;	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  +  offset);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0]  +  offset);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0]  +  offset);	  int    max    =    val.getActualMaximum(fields[i][0]    +    min);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  round);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.getActualMaximum(fields[i][0],  round);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.getActualMaximum(fields[i][0],  round);	  int    max    =    val.getActualMaximum(fields[i][0],    min);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  int  max  =  val.get(fields[i][0],  min);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);    [BUGGY]  int  max  =  val.get(fields[i][0],  min);  [BUGGY]      offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  throw  new  IllegalArgumentException(   "The  field     "  +  field  +     "  is  not  supported   ");  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	702	702	1	replace	int  max  =  val.get(fields[i][0],  min);	  int    max    =    val.getActualMaximum(fields[i][0],    min);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
