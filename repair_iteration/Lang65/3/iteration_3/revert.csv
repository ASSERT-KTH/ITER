projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getTime();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date);modify(gval,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,0);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,999);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(time);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field*DateTimeConstants.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().set(getMillis(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().year().set(getMillis(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,1000);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,100);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,500);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,200);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,0L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,0,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,null);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);modify(gval,field,false);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field!=null){gval.setTime(date);modify(gval,field,false);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);modified(gval,field,false);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,FieldUtils.safeNegate(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=cal1.getTime();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=c.getTime();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getTimeZone();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeNegate(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field)+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().days().getMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().monthOfYear());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getTimeInMillis();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getChronology();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);modifier(gval,field,false);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(fields[0],fields[1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.currentTimeMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().year().set(date,field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().millisOfDay().get(getMillis()));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().get(getMillis()));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getCalendarMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.currentTimeMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().roundFloor(getMillis()));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE){gval.setTime(date);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE){gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MAX_VALUE){gval.setTime(date);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.setTime(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);modify(gval,field,false);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(0,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(year,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.currentTimeMillis(),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.safeNegate(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,10);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeToInt(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeAdd(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeNegate(field)+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,0,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,0,fields);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,0,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,0,field*DateTimeConstants.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,this);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,0,null);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=cal2.getTime();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=cal.getTime();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getDate();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getField(Calendar.DAY_OF_MONTH);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field*1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field-2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(field,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(field+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().set(getMillis(),field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().set(getMillis(),field+1));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().set(getMillis(),field),date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field*1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field+3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field+2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field/DateTimeConstants.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field-DateTimeConstants.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field*DateTimeConstants.MILLISECOND,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().monthOfDay());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().year());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().year().monthOfYear());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().get(getMillis()-1));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().get(getMillis(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().get(getMillis()+1));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().year().get(getMillis()));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().days().set(getMillis(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().year().set(getMillis(),date));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().year().set(getMillis(),field),date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getCalendarMillis(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(getCalendarMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getCalendarMillis()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().set(date,field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().endFinal().set(date,field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().days().set(date,field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date);modifier(gval,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547modify(gval,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547modifier(gval,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);modifier(gval,field,false);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE||field==Integer.MAX_VALUE){gval.setTime(date);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE||field==Integer.MIN_VALUE){gval.setTime(date);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.currentTimeMillis(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.currentTimeMillis()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.currentTimeMillis(),fields);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=c.getTimeZone();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeMultiply(field)+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeMultiply(field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeMultiply(field,false));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field-1,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.MILLIS_PER_SECOND,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.DAY_OF_MONTH,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().roundFloor(getMillis(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().roundFloor(getMillis()+1));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().roundFloor(getMillis()),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field+1,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field+2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field+3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.currentTimeMillis(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(field+FieldUtils.currentTimeMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date*FieldUtils.currentTimeMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.currentTimeMillis(),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+1,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,endFinal);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field!=null){gval.setTime(date);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,FieldUtils.safeMultiply(field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,FieldUtils.safeMultiply(field),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,FieldUtils.safeAdd(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date);modified(gval,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field!=null){gval.setTime(date);modified(gval,field,false);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);modified(gval,field,true);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field,4);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field!=null){gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date,field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(0,field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,FieldUtils.safeNegate(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,FieldUtils.currentTimeMillis(),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+1,FieldUtils.safeNegate(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,FieldUtils.safeAdd(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getTimeInMillis()+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getTimeInMillis(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,FieldUtils.safeMultiply(field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,FieldUtils.safeNegate(field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE||field==Integer.MAX_VALUE){gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE||field==Integer.MIN_VALUE){gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().days().getMillis(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dates().getMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().days().getMillis()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.DATE,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(field,DateTimeConstants.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.DATE,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.MILLIS_PER_SECOND,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.DAY_OF_MONTH,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.currentTimeMillis(),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field+1,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field*1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field+2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.setTime(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.setTime(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfDay().get(getMillis()));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().millisOfDay().get(getMillis()-1));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,FieldUtils.safeMultiply(field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+1,FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field+2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field+3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,FieldUtils.safeMultiply(field),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,FieldUtils.safeMultiply(field)+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.MILLISECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.MONTH);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(fields[0],fields[1]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(fields[0],fields[1]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(fields[0],fields[1]-2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field)+2;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field)+1L;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field)+3;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.safeMultiply(field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.safeMultiply(field),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.safeMultiply(field),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.safeNegate(field),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=c.getTime(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE||field>=Integer.MAX_VALUE){gval.setTime(date);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field+3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,FieldUtils.safeMultiply(field)+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field!=null){gval.setTime(date);modify(gval,field,false);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(getMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getZone();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field*1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().months().getMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getTime(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().millisOfDay().get(getMillis(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().monthOfDay().get(getMillis()));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldType.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(field,Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field-1,DateTimeConstants.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.getInstantiator(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().monthOfYear());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().monthOfYear()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(field+date,FieldUtils.safeNegate(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,FieldUtils.safeAdd(getLocale(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.safeAdd(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,5000);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().date().set(getMillis(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().months().set(getMillis(),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().year().set(date,field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().months().set(date,field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(fields[0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().year().roundFloor(getMillis()));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(TimeZone.getDefault());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,FieldUtils.safeNegate(field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,FieldUtils.safeNegate(field),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,FieldUtils.safeMultiply(field,false));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dateOfMonth().get(getMillis()));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(date);}else{gval=Calendar.getInstance();}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeMultiply(field),true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(field+date,FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeNegate(field),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null){gval.setTime(0);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.currentTimeMillis(),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(field+date,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,4);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().roundFloor(getMillis()-1));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(fields[0],fields[1]*DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,field,null,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.SEMI_MONTH,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.getLocalMillis(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MAX_VALUE||field==Integer.MAX_VALUE){gval.setTime(date);}else{gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field/1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,field-date*DateTimeConstants.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date);modify(gval,field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date);modified(gval,field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(date,FieldUtils.SEMI_MONTH,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().dayOfMonth().set(getMillis(),date));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=gval.getTimeZone(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeMultiply(date,field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(FieldUtils.safeMultiply(cal1,field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(calendarField);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setMillis(getChronology().days().getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field+1,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(fields[field+1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(fields[0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+field,FieldUtils.currentTimeMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,FieldUtils.safeMultiply(field+1));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,field-1,cal1.getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date,field)/1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.MILLISECOND,0L)+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==null||field<0){gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=cal1.getTime().getTime();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.MILLISECOND,fields);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.MILLISECOND,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.set(Calendar.DATE,FieldUtils.safeMultiply(field+1));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE||field>Integer.MAX_VALUE){gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field==Integer.MIN_VALUE||field>=Integer.MAX_VALUE){gval.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.DATE,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.DATE,field*DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Calendargval=Calendar.getInstance(Calendar.DATE,field*DateTimeConstants.MILLIS_PER_HOUR);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547if(field!=null){gval.setTime(date);modifier(gval,field,false);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547gval.setTime(date+FieldUtils.SEMI_MONTH,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java547Dategval=c.getTimeInMillis();
