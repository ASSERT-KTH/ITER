projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-offset);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!round){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-offset,roundUp);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])/2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>max-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet==0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getIntValue(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!setUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.get(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getMaximum(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getIntValue(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==null){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp<=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset>=0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet==0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])/offset);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fieldSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!setup){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset>=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==Calendar.HOUR_OF_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=Calendar.HOUR_OF_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<min){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])/3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[0][0]);offset=val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet>=0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset==0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==Calendar.HOUR_OF_DAY||fields[i][0]==Calendar.HOUR_OF_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==Calendar.HOUR_OF_DAY||fields[i][1]==Calendar.HOUR_OF_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])/2;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0])/1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getIntValue(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-offset,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])/2,roundUp);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0])/1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.get(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getMaximum(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])/1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==field.get(fields[i][0])&&!offsetSet&&roundUp>1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet||roundUp>1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getIntValue(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getIntValue(fields[i][1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0])-min+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0])/1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!setup&&roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset==0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==val.get(fields[i][0])){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=val.get(fields[i][0])){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp==0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp!=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>max-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0])-min;roundUp=offset>max-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>max-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<min){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>max-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp>1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp<=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp>=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp<0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=MILLIS_PER_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==MILLIS_PER_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(round){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getMaximum(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getMaximum(fields[i][1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getMinimum(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.get(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.get(fields[i][0]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.get(fields[i][0])-offset;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet!=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet>=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||offsetSet>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp>=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp==0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!setUp&&roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=Calendar.HOUR_OF_DAY||fields[i][0]==Calendar.HOUR_OF_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]>=Calendar.HOUR_OF_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset!=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=null){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==null||fieldSet.contains(fields[i][0])){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=null||fieldSet.contains(fields[i][0])){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp||offset<fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp||fieldSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet<=roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])/2+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<fields[i][0]){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp>0&&offset<fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<fields[0].length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||offsetSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp||offsetSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<=0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<=min){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<=max){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset>=min){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp>0&&offset<min){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){intmin=val.get(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0]);offset=val.get(fields[i][0])/2;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getIntValue(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getIntValue(fields[i][1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getMinimumValue(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==MILLIS_PER_DAY||fields[i][0]==field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&offset>1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-offset,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-offset,4);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-offset,8);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0])/min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==MILLIS_PER_HOUR){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset==0&&roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset>=0){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset>=0){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet<0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>max-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getIntValue(fields[i][0],field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getIntValue(fields[i][0]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==field){intmin=val.get(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset>=fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&offset>0&&offset<fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&offset>0&&offset>=fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet&&roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0])-offset;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet&&roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||offset>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||offset<0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getSecondMaximum(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getIntValue(fields[i][0]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getIntValue(fields[i][0],field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]+2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getMaximum(fields[i][0]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset>=0&&roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!setUp&&offsetSet>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&offset>0&&offset<=max){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&offset>0&&offset<min){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet<0||roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||fieldSet>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700Integermin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][1]);offset=val.get(fields[i][1])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0]+2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet>=0&&roundUp<=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!setup&&roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet==roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet>=roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<=fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getIntValue(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getIntValue(fields[i][0],0);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<min&&!offsetSet&&roundUp>0&&offset<min){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset>=max){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet<=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0])-2;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(val.get(fields[i][0])==null){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==null||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<min){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])/min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getIntValue(fields[i][0],0);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0])-MILLIS_PER_DAY;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp>10){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp>5){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>max-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet==0||roundUp>0){
