projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-offset);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!round){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700offset=val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-offset,roundUp);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])/2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>max-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet==0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.get(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getIntValue(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!setUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.get(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getMaximum(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getIntValue(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==null){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet||roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp<=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset>=0||roundUp){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offsetSet==0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])/offset);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fieldSet){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!setup){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset<0||roundUp>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(offset>=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmin=val.getActualMinimum(fields[i][0])-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]==Calendar.HOUR_OF_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=Calendar.HOUR_OF_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(!offsetSet&&roundUp>0&&offset<min){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700if(fields[i][0]!=field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700val.set(fields[i][0],val.get(fields[i][0])-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java700intmax=val.getActualMaximum(fields[i][0])-1;
