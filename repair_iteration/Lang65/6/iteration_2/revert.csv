projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>280000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==280000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>310000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getValues();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=280000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=280000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND)+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==1000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==310000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==10000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.MONTH);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,Calendar.YEAR);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,0,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>2800000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=1000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,offsetSet);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>10000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>1000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,0,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getFields();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getCalendarFields();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=field.getValues();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=1000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>50000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=250000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR)+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(0,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getValues(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>100000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(FieldUtils.MILLISECOND,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.MONTH,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.MONTH)+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.MONTH)-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.MONTH,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(0,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(0,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(0,field+round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,0,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,0,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==round){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=field.getFields();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>3100000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>300000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>2500000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(FieldUtils.MILLISECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>250000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==250000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=250000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,Calendar.YEAR,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(val,Calendar.YEAR,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(field.get(Calendar.YEAR)>val.get(Calendar.YEAR)){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR)+2;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR)+3;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR)/1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.MONTH)==0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,0,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,0,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==50000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>50000000||round>MILLIS_PER_MONTH){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,0);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND)+2;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND)+3;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND)/1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>1000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getValues(field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getFields(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getCalendarFields(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==1000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,round,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round-1-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round-1+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==100000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=100000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field+1,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,Calendar.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round-1,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,round,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,offsetSet,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,round-1,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND+1,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(calendar.YEAR,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getFields(field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,Calendar.YEAR,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(0L,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR+3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==2800000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=2800000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=100000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=10000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>10000000||round>DateUtils.SEMI_MONTH){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>10000000||round>MILLIS_PER_MONTH){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=50000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>50000000||round>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,offsetSet);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=1000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=1000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR+1,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==10000000||round>fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==0||round>fields.length){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(FieldUtils.DAY_OF_MONTH,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,fields,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=25000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND)+4;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getCalendarFields(field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=this.val.getValues();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(FieldUtils.MILLISECOND,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR)+4;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(FieldType.YEAR,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=this.field.getValues();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND,field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(1,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,round-1,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round-1,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round-1,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>100){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(FieldUtils.SEMI_MONTH,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(CalendarFields.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=10000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,Calendar.YEAR,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round-1,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>1000000||round>MILLIS_PER_MONTH){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>1000000||round>MILLIS_PER_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>9999){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,round-1,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>10000000||round>MILLIS_PER_DAY){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>30000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>50000000||round>50000000){
