projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>280000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==280000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>310000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getValues();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=280000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=280000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND)+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.SECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==1000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==310000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==10000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.MONTH);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,Calendar.YEAR);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,0,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>2800000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=1000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,offsetSet);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(field,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>10000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>1000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,round+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,round-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,0,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getFields();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getCalendarFields();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=field.getValues();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=1000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>50000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=250000000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.DAY_OF_MONTH,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.get(Calendar.YEAR)+1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(0,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)!=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MONTH,field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)==1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620int[][]fields=val.getValues(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>field){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>=0){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.YEAR,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620if(val.get(Calendar.YEAR)>100000){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(FieldUtils.MILLISECOND,round);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java620val.set(Calendar.MILLISECOND,round-1);
