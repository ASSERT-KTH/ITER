bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  offset);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  offset);	      int[][]    fields    =    val.get(Calendar.SEMI_MONTH);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  1;	      int[][]    fields    =    val.get(Calendar.SEMI_MONTH);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  round);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  round);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  round);	      int[][]    fields    =    val.get(Calendar.SEMI_MONTH);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  1;	      int[][]    fields    =    val.get(Calendar.SEMI_MONTH);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset);	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1);	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round);	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1;	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  val.add(fields[i][0],  3);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  val.add(fields[i][0],  3);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i][0],  3);	      val.add(fields[i][0],    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  val.add(fields[i][0],  2);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  val.add(fields[i][0],  2);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i][0],  2);	      val.add(fields[i][0],    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  switch(fields[offset)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[offset)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offset)  {	  switch(offset)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  offset);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  offset);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  1;	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND  +  1);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  round);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  round);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  round);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  offset  =  val.get(Calendar.DATE,  round);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  round);	      int    offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  offset  =  val.get(Calendar.DATE,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  1);	      int    offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE)-  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  offset  =  val.get(Calendar.DATE)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE)-  1;	      int    offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  offset  =  val.get(Calendar.DATE  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE  +  1);	      int    offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0])    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  switch(fields[i][0]  &&  roundUp)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  &&  roundUp)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  &&  roundUp)  {	  switch(fields[i][0])    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  switch(fields[offsetSet)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[offsetSet)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offsetSet)  {	  switch(offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  offset);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH,  offset);	      int[][]    fields    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)+  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH)+  1;	      int[][]    fields    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH)-  1;	      int[][]    fields    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH,  1);	      int[][]    fields    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  if(offsetSet)  {  switch(fields[i][1])  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(offsetSet)  {  switch(fields[i][1])  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(offsetSet)  {  switch(fields[i][1])  {	  switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]  &  DateUtils.SEMI_MONTH)  {	  switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  offset);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  offset);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  round);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  round);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  round);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  1);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE  +  1);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offset);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  offset);	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  round);	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  1);	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE  +  1);	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  switch(fields[i][0]  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  {	  switch(fields[i][0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH  +  1);	      int[][]    fields    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  offset  =  val.get(Calendar.DATE  -  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE  -  1);	      int    offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1;	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE)-  1;	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  val.add(fields[i][0],  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  val.add(fields[i][0],  0);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i][0],  0);	      val.add(fields[i][0],    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  1;	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH  +  1);	      int[][]    fields    =    val.get(Calendar.SEMI_MONTH);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  ==  Calendar.DATE)  {	  switch(fields[i][0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  switch(fields[i][0]  >>  Calendar.DATE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  >>  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  >>  Calendar.DATE)  {	  switch(fields[i][0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  switch(fields[i][0]  >=  Calendar.DATE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  >=  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  >=  Calendar.DATE)  {	  switch(fields[i][0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  1;	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  switch(fields)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields)  {	  switch(offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  switch(fields[0][1])  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[0][1])  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[0][1])  {	  switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  switch(fields[i][0]),  offsetSet)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]),  offsetSet)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]),  offsetSet)  {	  switch(fields[i][0])    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  switch(fields[i][0]!=  Calendar.DATE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]!=  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]!=  Calendar.DATE)  {	  switch(fields[i][0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  val.add(fields[i][0],  Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  val.add(fields[i][0],  Calendar.DATE);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i][0],  Calendar.DATE);	      val.add(fields[i][0],    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  switch(fields[i][1]),  offsetSet)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][1]),  offsetSet)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]),  offsetSet)  {	  switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
