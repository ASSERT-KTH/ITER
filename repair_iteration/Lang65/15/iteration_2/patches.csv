bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)/  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)/  1;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
2	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
3	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  roundUp);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  roundUp);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  1);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)/  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE)/  1;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
7	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE)+  1;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
8	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
9	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offsetSet)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offsetSet)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
10	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offset)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offset)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
11	[BUG]  [BUGGY]  switch(fields[i][0]  -  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  -  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  -  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
12	[BUG]  [BUGGY]  switch(fields.length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields.length)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields.length)  {	  switch(fields)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
13	[BUG]  [BUGGY]  switch(fields[i][1]),  round)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]),  round)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]),  round)  {	  switch(fields[i][1]),    offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
14	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE,  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  0);	  int    offset    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  2);	  int    offset    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  3);	  int    offset    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  switch(fields[i][0]),  roundUp)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]),  roundUp)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]),  roundUp)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
18	[BUG]  [BUGGY]  switch(fields[i][0]),  round)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]),  round)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]),  round)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
19	[BUG]  [BUGGY]  switch(fields[i][0],  roundUp)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0],  roundUp)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0],  roundUp)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
20	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  0);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
21	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  2);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
22	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  3);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
23	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE)/  1;	  int    offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
24	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE)-  1  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE)-  1  +  1;	  int    offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE)-  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE)-  2;	  int    offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  field);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  field);	  int[][]    fields    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
27	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  round);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  0,  round);	  int[][]    fields    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
28	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offset  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  offset  +  1);	  int[][]    fields    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
29	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH,  2);	  int[][]    fields    =    val.get(Calendar.MONTH,    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
30	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  3);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH,  3);	  int[][]    fields    =    val.get(Calendar.MONTH,    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
31	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)/  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH)/  1;	  int[][]    fields    =    val.get(Calendar.MONTH)-    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
32	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)-  1  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.MONTH)-    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
33	[BUG]  [BUGGY]  switch(fields[offset  -  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset  -  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offset  -  1)  {	  switch(fields[offset)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  switch(fields[offset  +  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset  +  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offset  +  1)  {	  switch(fields[offset)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  switch(fields[offset][0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset][0)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offset][0)  {	  switch(fields[offset)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  switch(fields[offset][0])  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset][0])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offset][0])  {	  switch(fields[offset)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  offset  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  offset  +  1);	  int    field    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
38	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE)+  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE)+  1;	  int    field    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
39	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  offset  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  offset  +  1);	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH,    offset);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  roundUp);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  roundUp);	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH,    offset);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  1);	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH,    offset);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  field);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  field);	  int[][]    fields    =    val.get(Calendar.SECOND,    round);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  1);	  int[][]    fields    =    val.get(Calendar.SECOND,    round);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
44	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  0,  round);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  0,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  0,  round);	  int[][]    fields    =    val.get(Calendar.SECOND,    round);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  offset  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  offset  +  1);	  int[][]    fields    =    val.get(Calendar.SECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  val.add(fields[i][0],  Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  val.add(fields[i][0],  Calendar.DATE,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i][0],  Calendar.DATE,  1);	  val.add(fields[i][0],    Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
47	[BUG]  [BUGGY]  val.add(fields[i][0],  1,  Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  val.add(fields[i][0],  1,  Calendar.DATE);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i][0],  1,  Calendar.DATE);	  val.add(fields[i][0],    Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
48	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  offset  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH,  offset  +  1);	  int[][]    fields    =    val.get(Calendar.MONTH,    offset);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
49	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  roundUp);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH,  roundUp);	  int[][]    fields    =    val.get(Calendar.MONTH,    offset);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
50	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  2;	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH)+  1  +  1;	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)/  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH)/  1;	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  field);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  field);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    round);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offsetSet)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offsetSet)  {	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
55	[BUG]  [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offset)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offset)  {	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
56	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE)+  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE)+  1;	  int    offset    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
57	[BUG]  [BUGGY]  switch(fields[i][0]  &&  offsetSet)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &&  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  &&  offsetSet)  {	  switch(fields[i][0]    &&    roundUp)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  switch(fields[i][0]  ||  roundUp)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ||  roundUp)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  ||  roundUp)  {	  switch(fields[i][0]    &&    roundUp)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
59	[BUG]  [BUGGY]  switch(fields[i][0]  &&  offset)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &&  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  &&  offset)  {	  switch(fields[i][0]    &&    roundUp)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
60	[BUG]  [BUGGY]  val.add(fields[i][1],  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  val.add(fields[i][1],  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i][1],  0);	  val.add(fields[i][0],    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
61	[BUG]  [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {	  switch(fields[i][0]    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
62	[BUG]  [BUGGY]  switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);	  switch(fields[i][0]    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
63	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);	  int[][]    fields    =    val.get(Calendar.SECOND,    offset);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)/  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE)/  1;	  int    field    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
65	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE)-  1  +  1;	  int    field    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
66	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)-  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE)-  2;	  int    field    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
67	[BUG]  [BUGGY]  switch(fields[i][0]  {  Calendar.DATE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  {  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  {  Calendar.DATE)  {	  switch(fields[i][0]!=    Calendar.DATE)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
68	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  field);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  field);	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH,    round);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  0,  round);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  0,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  0,  round);	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH,    round);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  roundUp);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  roundUp);	  int[][]    fields    =    val.get(Calendar.DATE,    offset);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
71	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)+  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)+  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH)+  2;	  int[][]    fields    =    val.get(Calendar.MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
72	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  2;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  0,  offset);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  0,  offset);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  0,  offset);	  int    field    =    val.get(Calendar.DATE,    offset);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
75	[BUG]  [BUGGY]  switch(fields[offsetSet  -  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offsetSet  -  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offsetSet  -  1)  {	  switch(fields[offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
76	[BUG]  [BUGGY]  switch(fields[offsetSet  -  1])  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offsetSet  -  1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offsetSet  -  1])  {	  switch(fields[offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
77	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)/  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)/  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
78	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
79	[BUG]  [BUGGY]  if(offsetSet)  {  switch(fields[i][0])  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  switch(fields[i][0])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(offsetSet)  {  switch(fields[i][0])  {	  if(offsetSet)    {    switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
80	[BUG]  [BUGGY]  if(offsetSet  >  1)  {  switch(fields[i][1])  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet  >  1)  {  switch(fields[i][1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(offsetSet  >  1)  {  switch(fields[i][1])  {	  if(offsetSet)    {    switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
81	[BUG]  [BUGGY]  if(offsetSet  ||  roundUp)  {  switch(fields[i][1])  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet  ||  roundUp)  {  switch(fields[i][1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(offsetSet  ||  roundUp)  {  switch(fields[i][1])  {	  if(offsetSet)    {    switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
82	[BUG]  [BUGGY]  if(offsetSet  <  1)  {  switch(fields[i][1])  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet  <  1)  {  switch(fields[i][1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(offsetSet  <  1)  {  switch(fields[i][1])  {	  if(offsetSet)    {    switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
83	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  2);	  int[][]    fields    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
84	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  3);	  int[][]    fields    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
85	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  1  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH)-    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
86	[BUG]  [BUGGY]  switch(fields[0][1]  &  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[0][1]  &  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[0][1]  &  DateUtils.SEMI_MONTH)  {	  switch(fields[0][1])    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
87	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  0,  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  0,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  0,  round);	  int    field    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
88	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE,  field);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  field);	  int    offset    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
89	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  0,  round);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE,  0,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  0,  round);	  int    offset    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
90	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  2;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE,  -1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  -1);	  int    offset    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
92	[BUG]  [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:	  switch(fields[i][0]    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
93	[BUG]  [BUGGY]  switch(fields[i][0]  >>  case  DateUtils.SEMI_MONTH:  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  >>  case  DateUtils.SEMI_MONTH:  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  >>  case  DateUtils.SEMI_MONTH:	  switch(fields[i][0]    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
94	[BUG]  [BUGGY]  switch(fields[i][0]  ==  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  ==	  switch(fields[i][0]    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
95	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  -1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  -1);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
96	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  0);	  int[][]    fields    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
97	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  -1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  -1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  -1);	  int[][]    fields    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
98	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  round  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  round  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  round  +  1);	  int[][]    fields    =    val.get(Calendar.SECOND,    round);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round  +  1);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    round);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
100	[BUG]  [BUGGY]  switch(fields[i][1]  ==  Calendar.DATE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  ==  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]  ==  Calendar.DATE)  {	  switch(fields[i][0]    ==    Calendar.DATE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
101	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE  -  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE  -  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  ==  Calendar.DATE  -  1)  {	  switch(fields[i][0]    ==    Calendar.DATE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
102	[BUG]  [BUGGY]  if(offsetSet  >  0)  {  switch(fields[i][1])  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet  >  0)  {  switch(fields[i][1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(offsetSet  >  0)  {  switch(fields[i][1])  {	  if(offsetSet)    {    switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
103	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {	  if(offsetSet)    {    switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
104	[BUG]  [BUGGY]  if(offset  <  1)  {  switch(fields[i][1])  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  1)  {  switch(fields[i][1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(offset  <  1)  {  switch(fields[i][1])  {	  if(offsetSet)    {    switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
105	[BUG]  [BUGGY]  switch(fields[0][0])  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[0][0])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[0][0])  {	  switch(fields[0][1])    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
106	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)+  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH)+  1  +  1;	  int[][]    fields    =    val.get(Calendar.MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
107	[BUG]  [BUGGY]  switch(fields[offset  +  1])  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset  +  1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offset  +  1])  {	  switch(fields[offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
108	[BUG]  [BUGGY]  switch(fields[i][1]  >>  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  >>  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]  >>  DateUtils.SEMI_MONTH)  {	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
109	[BUG]  [BUGGY]  switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
110	[BUG]  [BUGGY]  switch(fields[i][0]  >>  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  >>  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  >>  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
111	[BUG]  [BUGGY]  switch(fields[i][0]  ==  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  ==  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
112	[BUG]  [BUGGY]  switch(fields[i][0]  -  offset)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  -  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  -  offset)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
113	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  2;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
114	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  3;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  3;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  3;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
115	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)-  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH)-  2;	  int[][]    fields    =    val.get(Calendar.MONTH)-    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
116	[BUG]  [BUGGY]  switch(fields[i][0]  &  FieldUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &  FieldUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  &  FieldUtils.SEMI_MONTH)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
117	[BUG]  [BUGGY]  if(offsetSet  >=  1)  {  switch(fields[i][1])  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet  >=  1)  {  switch(fields[i][1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	if(offsetSet  >=  1)  {  switch(fields[i][1])  {	  if(offsetSet)    {    switch(fields[i][1])    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
118	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE  +  1,  offset);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE  +  1,  offset);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE  +  1,  offset);	  int    field    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
119	[BUG]  [BUGGY]  switch(offsets)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(offsets)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(offsets)  {	  switch(fields)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
120	[BUG]  [BUGGY]  switch(fields[i][1]  ==  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  ==  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]  ==  DateUtils.SEMI_MONTH)  {	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
121	[BUG]  [BUGGY]  switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:  break;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:  break;	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
122	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  round  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  round  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  field  =  val.get(Calendar.DATE,  round  +  1);	  int    field    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
123	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE,  round  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE,  round  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE,  round  +  1);	  int    offset    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
124	[BUG]  [BUGGY]  val.add(fields[i].get(Calendar.DATE),  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  val.add(fields[i].get(Calendar.DATE),  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i].get(Calendar.DATE),  0);	  val.add(fields[i][0],    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
125	[BUG]  [BUGGY]  val.add(fields[i].get(Calendar.DATE));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  val.add(fields[i].get(Calendar.DATE));  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	val.add(fields[i].get(Calendar.DATE));	  val.add(fields[i][0],    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
126	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);	  int[][]    fields    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
127	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  round  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  round  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH,  round  +  1);	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH,    round);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
128	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SEMI_MONTH)-  2;	  int[][]    fields    =    val.get(Calendar.SEMI_MONTH)-    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
129	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  2;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
130	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  3;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  3;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
131	[BUG]  [BUGGY]  switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  break;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  break;	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
132	[BUG]  [BUGGY]  switch(fields[i][0]  >=  DateUtils.SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  >=  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[i][0]  >=  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
133	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  round);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MONTH,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.MONTH,  round);	  int[][]    fields    =    val.get(Calendar.MONTH,    offset);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
134	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR)+  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR)+  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
135	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE  +  1)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE  +  1)-  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int  offset  =  val.get(Calendar.DATE  +  1)-  1;	  int    offset    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
136	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR)-  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR)-  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR)-  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
137	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1)-  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1)-  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
138	[BUG]  [BUGGY]  switch(fields[offset])  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	670	670	1	replace	switch(fields[offset])  {	  switch(fields[offset)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
