projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field<0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field<0){thrownewIllegalArgumentException("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtException("Thedatemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSwitch("Datemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwInternal();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546[Delete]
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){Dategval=Calendar.getInstance();}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datedate=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,false,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionFailedError("Thedatemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionError("Thedatemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSuccEssfulException("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,MILLIS_IN_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_MINUTE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1],field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(FieldType.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime()+field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsUnquotedException("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionFailedError("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwUnsupportedOperationException("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546safeTruncate(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionFailedError("Thedatemustnotbenull");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[field+1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]*DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_HOUR);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(Calendar.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,fields[field]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(calendar.getInstance());
