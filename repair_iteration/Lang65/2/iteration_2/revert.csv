projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field<0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field<0){thrownewIllegalArgumentException("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtException("Thedatemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSwitch("Datemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwInternal();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546[Delete]
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){Dategval=Calendar.getInstance();}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datedate=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,false,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionFailedError("Thedatemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionError("Thedatemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSuccEssfulException("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,MILLIS_IN_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_MINUTE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1],field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(FieldType.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime()+field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsUnquotedException("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionFailedError("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwUnsupportedOperationException("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546safeTruncate(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionFailedError("Thedatemustnotbenull");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[field+1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]*DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_HOUR);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(Calendar.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,fields[field]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(calendar.getInstance());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwInternal();}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwInternal();}else{thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwInternal();}else{thrownewIllegalStateException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]/DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]-DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]*DateTimeConstants.MILLIS_PER_SECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,FieldUtils.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_MINUTE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwAsSertionError("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionError("Datemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<=0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546month<0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_HOUR,MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,true,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,null);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,true,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){thrownewIllegalArgumentException("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){for(inti=0;i<fields.length;i++){Calendarc=DateUtils.getCalendar(fields[i]);if(c!=null){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){for(inti=0;i<fields.length;i++){Calendarc=DateUtils.getInstance(fields[i]);c.setTime(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_MINUTE,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,DateTimeConstants.MILLIS_PER_SECOND,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,FieldConstants.MILLIS_PER_SECOND,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."),field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field!=null){aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."),field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546truncate(newIllegalArgumentException("Thedatemustnotbenull."),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getDate());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<=0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]+2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]*1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field,4);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datedate=DateUtils.getInstance(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datedate=DateUtils.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datedate=DateUtils.getInstance(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datedate=DateUtils.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,0,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getTime()+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getTime(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."));}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."),field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]-1+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]-2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546thrownewIllegalArgumentException("Thedatemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtException("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(field,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(date,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(date,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(date,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionFailedError("Datemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,4);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,endFinal+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,field*1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,field+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(calendar.getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(calendar.getInstance(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getInstance());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(Calendar.DATE,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(FieldType.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(FieldUtils.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(Calendar.DATE,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,4);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546TimeZonec=Calendar.getInstance();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,0,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_MINUTE,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_HOUR,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,DateTimeConstants.MILLIS_PER_SECOND,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,DateTimeConstants.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.DATE,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.DATE,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,true,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,false,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,false,date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,false,date,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=DateUtils.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=DateUtils.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=DateUtils.getInstance(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=DateUtils.getInstance(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSwitch("Datemustbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSwitch("TheDatemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,MILLIS_IN_HOUR);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_HOUR,MILLIS_IN_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,DateTimeConstants.MILLIS_PER_SECOND,MILLIS_IN_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_MINUTE,MILLIS_IN_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,false,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,false,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,false,null);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field*1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field-1+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,fields[0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,fields[1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,fields[field],1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1],field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1],field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1],field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1],date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwAsUnquotedException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwAsUnquotedException("");}else{thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,endFinal);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,FieldUtils.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,Date.MONTH);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,Date.MILLISECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(date,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,false,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field+2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field+3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_MINUTE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_HOUR,MILLIS_PER_MINUTE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_HOUR,MILLIS_IN_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(year,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,FieldUtils.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year<=0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],false,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(FieldType.DATE,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,FieldType.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(FieldType.DATE,field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(FieldType.DATE,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance(),field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance(),field,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance(),field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionError("");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSertionFailedError("",field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field+1,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,fields[0],false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime()+field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime()*field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546safeTruncate(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546validate(field,truncate);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwUnsupportedOperationException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwUnsupportedOperationException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(date,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,false,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=DateUtils.getInstance(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=DateUtils.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=DateUtils.getInstance(date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=DateUtils.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,MILLIS_IN_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field+1,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field*1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSuccEssfulException("",field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsSuccEssfulException(",");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(field,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getDate(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime(),field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime(),field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getTime(),date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstanceUTC());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field.getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,true,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546gval=Calendar.getInstance(field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,field,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(date,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[field-1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[field*1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[field+1],field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.handleInternal();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.warning("msg.js.internal.date",field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.warning("msg.invalid.date",field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[field+1]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546safeTruncate(field,DateUtils.currentTimeMillis());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546safeTruncate(field,DateUtils.safeMultiply(date));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,FieldUtils.safeNegate(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(FieldType.DATE,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.DEFAULT_TIME_ZONE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0],fields[1]-1,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,0);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_HOUR+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,FieldUtils.safeMultiply(fields,false));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,FieldUtils.safeNegate(fields));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate();
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,DateTimeConstants.MILLIS_PER_MINUTE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=DateUtils.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwAsSertionFailedError("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwAsSertionFailedError("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwAsSuccEssfulException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwAsSuccEssfulException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,date+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,field+3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(fields[field+1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwAsSertionError("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){Calendargval=Calendar.getInstance();}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[0]+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwAsSertionFailedError("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwAsSertionFailedError("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getChronology());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(locale,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,DateTimeConstants.MILLIS_PER_SECOND,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime()).setTime(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsUnquotedException("",field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,true,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,false,date);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==0){thrownewIllegalArgumentException("Thedatemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=DateUtils.getInstance(field,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(date.getTime());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getInstance(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getInstance(),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(Calendar.DATE,field-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwAsSertionFailedError("Thedatemustnotbenull");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(fields[field+1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){aughtExceptionHandler.throwUnsupportedOperationException("");}else{thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,this.calendarField);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwAsSwitch("Datemustnotbenull.");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546aughtExceptionHandler.throwAsIgnored("Datemustnotbenull.");
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[1],false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field.getInstance());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year>=0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546year==0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field.getTime(),false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime()/field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance(0));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546nan
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(this.calendarField,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(FieldType.DAY_OF_MONTH,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(fields,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(fields,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(fields,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(fields,false);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[field]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546validate(date,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwAsUnquotedException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,FieldUtils.MILLIS_PER_SECOND,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields[1L]+1L);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(fields,field+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,FieldUtils.SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance(),FieldUtils.safeMultiply(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(Calendar.getInstance(),FieldUtils.safeNegate(field));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTime(),field,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field/1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwAsSertionFailedError("Thedatemustnotbenull");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datedate=DateUtils.getInstance(this.calendarField,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(date.getTimeZone());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,4);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(Calendar.DATE,fields[field]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,date+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=Calendar.getInstance(field,4);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,fields[field-1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,fields[field+1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=DateUtils.getInstance(this.calendarField,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(this.calendarField);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(aughtExceptionHandler!=null){aughtExceptionHandler.throwAsSertionError("Thedatemustnotbenull.");}else{thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_MINUTE,MILLIS_PER_SECOND);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.MILLIS_PER_MINUTE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_DAY);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null||field<1){Dategval=Calendar.getInstance();}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=newDate(Calendar.getInstance());
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dategval=newDate(field,this.calendarField);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==0){aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."));}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,this.calendarField);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Datetruncate=newDate(field,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=DateUtils.getInstance(this.calendarField,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546date=DateUtils.getInstance(this.calendarField);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546intyear<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field==null){thrownewIllegalArgumentException("Thedatemustnotbenull."),field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546if(field<0){aughtExceptionHandler(newIllegalArgumentException("Thedatemustnotbenull."),field);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(calendarField,Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(date,Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(Calendar.DATE,field-2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(this.calendarField,true);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546intyear<0){thrownewIllegalArgumentException("");}else{date=DateUtils.getInstance(date);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Calendargval=Calendar.getInstance(calendarField,DateTimeConstants.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546intyear<0){thrownewIllegalArgumentException("");}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java546Dated=DateUtils.getInstance(this.calendarField,field);
