projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j++){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j+=2){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j+=1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(i);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,15);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i].get(i));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][i]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields.length;j++){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){if(round&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){if(round&&roundUp){val.add(Calendar.DATE,15,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){if(round&&roundUp){val.add(Calendar.DATE,16);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)!=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==null){for(intj=0;j<fields[i].length;j++){if(!round&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)>=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,16);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j-=2){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,16);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][0]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][i]-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][i]+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643charround=(char)Math.floor(fields[i][i]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643For(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,15,15);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,0,0);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=fields[i].get(Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643booleanround=val.get(Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643charround=val.get(Calendar.DATE);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,10);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,0);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,-15);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,3);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j++){if(!round&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]!=null){for(intj=0;j<fields[i].length;j++){if(!round&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j++){if(!round||roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][0],fields[i][1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][j]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)!=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)>=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields[i].length;j-=1){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<field.length;j++){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields.length+1;j++){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643int[][]fields=val.get(i);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643((Calendar)val.get(i)).setTime(fields[i]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,16);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i].get(i)+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i].get(i)-1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643charround=(char)Math.floor(fields[i].get(i));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=fields[i].get(i);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(i+1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(i)-1;
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,i);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,16);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){if(offset&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){if(setUp&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields.length;i++){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(Calendar.DATE,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(Calendar.DATE,i);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)!=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)!=1){val.add(Calendar.DATE,
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)>=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)>=1){val.add(Calendar.DATE,
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(i,fields[i].length);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.round(fields[i][0],fields[i][1]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){if(offset&&roundUp){val.add(Calendar.DATE,16);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,0,1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i].get(i),field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){for(intj=0;j<fields[i].length;j++){if(!round&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]!=field){for(intj=0;j<fields[i].length;j++){if(!round&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][i],field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643floatround=(float)Math.floor(fields[i][i]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][i],val);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==field){if(round&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==field){for(intj=0;j<fields[i].length;j++){if(!round&&roundUp){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==field){for(intj=0;j<fields[i].length;j++){if(!round&&roundUp){val.add(Calendar.DATE,15);}}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][i]==field){if(offset&&roundUp){val.add(Calendar.DATE,15,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643val.add(Calendar.DATE,0,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)>=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)>=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i],field[i]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<this.fields.length;j++){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643for(intj=0;j<fields.length-1;j++){
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)(fields[i].get(i));
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i][0],1);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==field){if(round&&roundUp){val.add(Calendar.DATE,16);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(fields[i][i]);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=(int)Math.floor(fields[i].get(i)/2);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643intround=val.get(Calendar.DATE,field);
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)==1){val.add(Calendar.DATE,16);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==field){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)!=1){val.add(Calendar.DATE,15);}
projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java643if(fields[i][j]==null){for(intj=0;j<fields[i].length;j++){if(val.get(Calendar.DATE)!=1){val.add(Calendar.DATE,15);}
