bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    if(offset    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    if(offset    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
3	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length  -  2;  j++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length  -  2;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields.length  -  2;  j++)  {	  for(int    j    =    0;    j    <    fields.length    -    1;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
4	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length  -  1;  j++)  {	  for(int    j    =    0;    j    <    fields.length    -    1;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
5	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  field.length  -  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  field.length  -  1;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  field.length  -  1;  j++)  {	  for(int    j    =    0;    j    <    fields.length    -    1;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
6	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j  +=  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j  +=  1)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields.length;  j  +=  1)  {	  for(int    j    =    0;    j    <    field.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][j]  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][j]  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][j]  -  1);	  int    round    =(int)Math.floor(fields[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i][j]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i][j]);	  int    round    =(int)Math.floor(fields[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][j]  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][j]  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][j]  +  1);	  int    round    =(int)Math.floor(fields[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length  +  2;  j++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length  +  2;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields.length  +  2;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    1;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
11	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  +  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  +  1;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length  +  1;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    1;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
12	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length  +  3;  j++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length  +  3;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields.length  +  3;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    1;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
13	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
14	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i]  -  1  +  1);	  int    round    =(int)Math.floor(fields[i][i]    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  /  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  /  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i]  /  1);	  int    round    =(int)Math.floor(fields[i][i]    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1],  offsetSet);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1],  offsetSet);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i]  -  1],  offsetSet);	  int    round    =(int)Math.floor(fields[i][i]    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  j  <  fields.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  j  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  i  =  0;  j  <  fields.length;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
19	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
20	[BUG]  [BUGGY]  int  round  =(int)Math.round(fields[i][0],  fields[i][1]  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.round(fields[i][0],  fields[i][1]  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.round(fields[i][0],  fields[i][1]  -  1);	  int    round    =(int)Math.round(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
21	[BUG]  [BUGGY]  int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  1);	  int    round    =(int)Math.round(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
22	[BUG]  [BUGGY]  int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  1]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  1]);	  int    round    =(int)Math.round(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
23	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)/  2  -  1);	  int    round    =(int)Math.floor(fields[i].get(i)/    2);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
24	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)/  2  +  1);	  int    round    =(int)Math.floor(fields[i].get(i)/    2);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
25	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  3);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)/  3);	  int    round    =(int)Math.floor(fields[i].get(i)/    2);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
26	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2  -  field.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2  -  field.length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)/  2  -  field.length);	  int    round    =(int)Math.floor(fields[i].get(i)/    2);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
27	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
30	[BUG]  [BUGGY]  val.add(Calendar.DATE,  12);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  12);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  12);	  val.add(Calendar.DATE,    16);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
31	[BUG]  [BUGGY]  val.add(Calendar.DATE,  1,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  1,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  1,  1);	  val.add(Calendar.DATE,    15,    15);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][1]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][1]);	  int    round    =(int)Math.floor(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0]  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0]  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0]  -  1);	  int    round    =(int)Math.floor(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  field);	  int    round    =(int)Math.floor(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0]  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0]  +  1);	  int    round    =(int)Math.floor(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  int  round  =  val.get(i,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(i,  field);	  int    round    =    val.get(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
37	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.DATE,  fields[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(Calendar.DATE,  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(Calendar.DATE,  fields[i]);	  int    round    =    val.get(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
38	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
39	[BUG]  [BUGGY]  int  round  =(int)(fields[i].get(i)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)(fields[i].get(i)+  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)(fields[i].get(i)+  1);	  int    round    =(int)(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
40	[BUG]  [BUGGY]  int  round  =(int)(fields[i].get(i)-  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)(fields[i].get(i)-  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)(fields[i].get(i)-  1);	  int    round    =(int)(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
41	[BUG]  [BUGGY]  char  round  =(char)(fields[i].get(i));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)(fields[i].get(i));  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)(fields[i].get(i));	  int    round    =(int)(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
42	[BUG]  [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i],  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i],  round);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	((  Calendar)val.get(i)).setTime(fields[i],  round);	  ((    Calendar)val.get(i)).setTime(fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
43	[BUG]  [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i]  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	((  Calendar)val.get(i)).setTime(fields[i]  +  1);	  ((    Calendar)val.get(i)).setTime(fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
44	[BUG]  [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i]  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i]  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	((  Calendar)val.get(i)).setTime(fields[i]  -  1);	  ((    Calendar)val.get(i)).setTime(fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
45	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Integer  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	Integer  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  For(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  int  round  =  fields[i].get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(Calendar.DATE,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(Calendar.DATE,  1);	  int    round    =    fields[i].get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  int  round  =  fields[i].get(Calendar.DATE  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(Calendar.DATE  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(Calendar.DATE  -  1);	  int    round    =    fields[i].get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  int  round  =  fields[i].get(Calendar.DATE  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(Calendar.DATE  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(Calendar.DATE  +  1);	  int    round    =    fields[i].get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  0,  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  0,  i);	  val.add(Calendar.DATE,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  val.add(Calendar.DATE,  1,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  1,  0);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  1,  0);	  val.add(Calendar.DATE,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  3);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  3);	  int    round    =(int)Math.floor(fields[i][0],    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
52	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  1  -  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  1  -  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  1  -  i);	  int    round    =(int)Math.floor(fields[i][0],    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
53	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  2);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  2);	  int    round    =(int)Math.floor(fields[i][0],    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
54	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  val);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  val);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  val);	  int    round    =(int)Math.floor(fields[i][i],    val);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
55	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  val,  offsetSet);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  val,  offsetSet);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i],  val,  offsetSet);	  int    round    =(int)Math.floor(fields[i][i],    val);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
56	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  val  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  val  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i],  val  +  1);	  int    round    =(int)Math.floor(fields[i][i],    val);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
57	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i].length  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i].length  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(i,  fields[i].length  -  1);	  int    round    =    val.get(i,    fields[i].length);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
58	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i].length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i].length  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(i,  fields[i].length  +  1);	  int    round    =    val.get(i,    fields[i].length);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
59	[BUG]  [BUGGY]  int  round  =  val.get(fields[i].length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i].length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i].length);	  int    round    =    val.get(i,    fields[i].length);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
60	[BUG]  [BUGGY]  int  round  =  val.get(fields[i].length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i].length  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i].length  -  1);	  int    round    =    val.get(i,    fields[i].length);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
61	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
62	[BUG]  [BUGGY]  if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
63	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
64	[BUG]  [BUGGY]  if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
65	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
66	[BUG]  [BUGGY]  int[][]  fields  =  val.get(i,  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int[][]  fields  =  val.get(i,  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int[][]  fields  =  val.get(i,  field);	  int[][]    fields    =    val.get(i);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  int[][]  fields  =  val.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int[][]  fields  =  val.get(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int[][]  fields  =  val.get(i  +  1);	  int[][]    fields    =    val.get(i);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
68	[BUG]  [BUGGY]  int[][]  fields  =  val.get(i)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int[][]  fields  =  val.get(i)+  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int[][]  fields  =  val.get(i)+  1;	  int[][]    fields    =    val.get(i);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
69	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
73	[BUG]  [BUGGY]  String  round  =(String)Math.floor(fields[i].get(i));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  String  round  =(String)Math.floor(fields[i].get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	String  round  =(String)Math.floor(fields[i].get(i));	  char    round    =(char)Math.floor(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
74	[BUG]  [BUGGY]  Character  round  =(char)Math.floor(fields[i].get(i));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Character  round  =(char)Math.floor(fields[i].get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	Character  round  =(char)Math.floor(fields[i].get(i));	  char    round    =(char)Math.floor(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
75	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i].get(i)+  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i].get(i)+  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i].get(i)+  1);	  char    round    =(char)Math.floor(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
76	[BUG]  [BUGGY]  String  round  =  val.get(Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  String  round  =  val.get(Calendar.DATE);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	String  round  =  val.get(Calendar.DATE);	  char    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  Character  round  =  val.get(Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Character  round  =  val.get(Calendar.DATE);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	Character  round  =  val.get(Calendar.DATE);	  char    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
78	[BUG]  [BUGGY]  Char  round  =  val.get(i);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Char  round  =  val.get(i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	Char  round  =  val.get(i);	  char    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  String  round  =  val.get(Calendar.DATE;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  String  round  =  val.get(Calendar.DATE;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	String  round  =  val.get(Calendar.DATE;	  char    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][i]    ==    field)    {    if(offset    &&    roundUp)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
81	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)/  1);	  int    round    =(int)Math.floor(fields[i].get(i)-    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
82	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)-  1  -  1);	  int    round    =(int)Math.floor(fields[i].get(i)-    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
83	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)-  1  +  1);	  int    round    =(int)Math.floor(fields[i].get(i)-    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
84	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
85	[BUG]  [BUGGY]  int  round  =  val.get(i,  Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  Calendar.DATE);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(i,  Calendar.DATE);	  int    round    =    val.get(Calendar.DATE,    i);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
86	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.DATE,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(Calendar.DATE,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(Calendar.DATE,  i  +  1);	  int    round    =    val.get(Calendar.DATE,    i);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
87	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i),  val);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i),  val);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i),  val);	  int    round    =(int)Math.floor(fields[i].get(i),    field);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
88	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i),  field  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i),  field  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i),  field  +  1);	  int    round    =(int)Math.floor(fields[i].get(i),    field);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
89	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i),  field,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i),  field,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i),  field,  1);	  int    round    =(int)Math.floor(fields[i].get(i),    field);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
90	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  field,  offsetSet);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  field,  offsetSet);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i],  field,  offsetSet);	  int    round    =(int)Math.floor(fields[i][i],    field);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
91	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i][i],  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i][i],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i][i],  field);	  int    round    =(int)Math.floor(fields[i][i],    field);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
92	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)+  1  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)+  1  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)+  1  +  1);	  int    round    =(int)Math.floor(fields[i].get(i)+    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
93	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)+  1  -  field.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)+  1  -  field.length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)+  1  -  field.length);	  int    round    =(int)Math.floor(fields[i].get(i)+    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
94	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  this.fields[i].length;  j++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  this.fields[i].length;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  this.fields[i].length;  j++)  {	  for(int    j    =    0;    j    <    this.fields.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
95	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  -  1);	  int    round    =(int)Math.floor(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
96	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  1);	  int    round    =(int)Math.floor(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
97	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  1]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  1]);	  int    round    =(int)Math.floor(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
98	[BUG]  [BUGGY]  int  round  =  fields[i].get(fields[i].length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(fields[i].length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(fields[i].length);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
99	[BUG]  [BUGGY]  int  round  =  fields[i].get(i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(i  +  1);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
100	[BUG]  [BUGGY]  int  round  =  fields[i].get(i)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(i)+  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(i)+  1;	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
101	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
102	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  *  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  *  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i]  *  1);	  int    round    =(int)Math.floor(fields[i][i]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
103	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  &  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  &  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i]  &  1);	  int    round    =(int)Math.floor(fields[i][i]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
104	[BUG]  [BUGGY]  val.add(Calendar.DATE,  15,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  15,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  15,  1);	  val.add(Calendar.DATE,    0,    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
105	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
106	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  10);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  10);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
107	[BUG]  [BUGGY]  int  round  =  fields[i].get(i)-  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(i)-  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(i)-  1;	  int    round    =    val.get(i)-    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
108	[BUG]  [BUGGY]  int  round  =  val.get(i)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i)/  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(i)/  1;	  int    round    =    val.get(i)-    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
109	[BUG]  [BUGGY]  int  round  =  fields[val.get(i)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[val.get(i)-  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[val.get(i)-  1;	  int    round    =    val.get(i)-    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
110	[BUG]  [BUGGY]  int[][]  fields  =  val.get(i).getFields();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int[][]  fields  =  val.get(i).getFields();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int[][]  fields  =  val.get(i).getFields();	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
111	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  fields[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  0,  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  0,  fields[i]);	  val.add(Calendar.DATE,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
112	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  fields[i].length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  0,  fields[i].length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  0,  fields[i].length);	  val.add(Calendar.DATE,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
113	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  field,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  0,  field,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  0,  field,  1);	  val.add(Calendar.DATE,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
114	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i],  fields[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i],  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i],  fields[i]);	  int    round    =(int)Math.floor(fields[i],    field[i]);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
115	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i],  field[i]  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i],  field[i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i],  field[i]  +  1);	  int    round    =(int)Math.floor(fields[i],    field[i]);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
116	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i],  field[i]  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i],  field[i]  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i],  field[i]  -  1);	  int    round    =(int)Math.floor(fields[i],    field[i]);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
117	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i]  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i]  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i][i]  -  1);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
118	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i][0]);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
119	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i],  offsetSet);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i],  offsetSet);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i][i],  offsetSet);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
120	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i]  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i][i]  +  1);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
121	[BUG]  [BUGGY]  int  round  =  fields[i].get(field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(field);	  int    round    =    val.get(field);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
122	[BUG]  [BUGGY]  int  round  =  fields[val.get(i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[val.get(i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[val.get(i);	  int    round    =    val.get(field);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
123	[BUG]  [BUGGY]  int  round  =  field.get(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  field.get(i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  field.get(i);	  int    round    =    val.get(field);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
124	[BUG]  [BUGGY]  int  round  =  val.get(i,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(i,  1);	  int    round    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
125	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.DATE,  12);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(Calendar.DATE,  12);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(Calendar.DATE,  12);	  int    round    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
126	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.DATE,  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(Calendar.DATE,  3);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(Calendar.DATE,  3);	  int    round    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
127	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
128	[BUG]  [BUGGY]  float  round  =(float)Math.floor(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  float  round  =(float)Math.floor(fields[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	float  round  =(float)Math.floor(fields[i][0]);	  float    round    =(float)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
129	[BUG]  [BUGGY]  float  round  =(float)Math.floor(fields[i][i]  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  float  round  =(float)Math.floor(fields[i][i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	float  round  =(float)Math.floor(fields[i][i]  +  1);	  float    round    =(float)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
130	[BUG]  [BUGGY]  double  round  =(double)Math.floor(fields[i][i]);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  double  round  =(double)Math.floor(fields[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	double  round  =(double)Math.floor(fields[i][i]);	  float    round    =(float)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
131	[BUG]  [BUGGY]  String  round  =(String)Math.floor(fields[i][i]);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  String  round  =(String)Math.floor(fields[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	String  round  =(String)Math.floor(fields[i][i]);	  char    round    =(char)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
132	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i][i]  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i][i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i][i]  +  1);	  char    round    =(char)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
133	[BUG]  [BUGGY]  boolean  round  =  val.get(i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  boolean  round  =  val.get(i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	boolean  round  =  val.get(i);	  boolean    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
134	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.DATE,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  boolean  round  =  val.get(Calendar.DATE,  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	boolean  round  =  val.get(Calendar.DATE,  field);	  boolean    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
135	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.DATE,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  boolean  round  =  val.get(Calendar.DATE,  true);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	boolean  round  =  val.get(Calendar.DATE,  true);	  boolean    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
136	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  boolean  round  =  val.get(Calendar.DATE,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	boolean  round  =  val.get(Calendar.DATE,  1);	  boolean    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
137	[BUG]  [BUGGY]  int  round  =  val.get(fields[i  +  1]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i  +  1]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i  +  1]);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
138	[BUG]  [BUGGY]  int  round  =  fields[i  +  1].get(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i  +  1].get(field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i  +  1].get(field);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
139	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
140	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
141	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
142	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
143	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(offset  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(offset  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  if(offset  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
144	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(setUp  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(setUp  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  if(setUp  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
145	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
146	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
147	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length();  j  -=  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length();  j  -=  1)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length();  j  -=  1)  {	  for(int    j    =    0;    j    <    fields[i].length;    j    -=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
148	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,	  if(fields[i][i]!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
149	[BUG]  [BUGGY]  char  round  =  val.get(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =  val.get(i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =  val.get(i);	  char    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
150	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.DATE)  ==  false;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  boolean  round  =  val.get(Calendar.DATE)  ==  false;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	boolean  round  =  val.get(Calendar.DATE)  ==  false;	  boolean    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
151	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.DATE)!=  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  boolean  round  =  val.get(Calendar.DATE)!=  false;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	boolean  round  =  val.get(Calendar.DATE)!=  false;	  boolean    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
152	[BUG]  [BUGGY]  if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
153	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
154	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  For(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
155	[BUG]  [BUGGY]  char  round  =(i  <  fields[i].length)?(char)Math.floor(fields[i].get(i):  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(i  <  fields[i].length)?(char)Math.floor(fields[i].get(i):  0);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(i  <  fields[i].length)?(char)Math.floor(fields[i].get(i):  0);	  char    round    =(char)Math.floor(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
156	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i].get(i)-  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i].get(i)-  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i].get(i)-  1);	  char    round    =(char)Math.floor(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
157	[BUG]  [BUGGY]  char  round  =(i  <  fields.length)?(char)Math.floor(fields[i].get(i):  0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(i  <  fields.length)?(char)Math.floor(fields[i].get(i):  0);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(i  <  fields.length)?(char)Math.floor(fields[i].get(i):  0);	  char    round    =(char)Math.floor(fields[i].get(i));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
158	[BUG]  [BUGGY]  int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.round(fields[i][0],  fields[i][1]  +  i);	  int    round    =(int)Math.round(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
159	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i],  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i][i],  field);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
160	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)+  1)/  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)+  1)/  2;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)+  1)/  2;	  int    round    =(int)Math.floor(fields[i].get(i)+    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
161	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
162	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1],  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i]  -  1],  field);	  int    round    =(int)Math.floor(fields[i][i]    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
163	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1  +  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1  +  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i]  -  1  +  i);	  int    round    =(int)Math.floor(fields[i][i]    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
164	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  field  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  field  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i],  field  +  1);	  int    round    =(int)Math.floor(fields[i][i]    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
165	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
166	[BUG]  [BUGGY]  val.add(Calendar.DATE,  i,  0,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  i,  0,  0);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  i,  0,  0);	  val.add(Calendar.DATE,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
167	[BUG]  [BUGGY]  if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
168	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1],  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)-  1],  field);	  int    round    =(int)Math.floor(fields[i].get(i)-    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
169	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1  -  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1  -  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)-  1  -  i);	  int    round    =(int)Math.floor(fields[i].get(i)-    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
170	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
171	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
172	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
173	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
174	[BUG]  [BUGGY]  for(int  j  =  0;  i  <  fields.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  i  <  fields.length;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
175	[BUG]  [BUGGY]  if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
176	[BUG]  [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i],  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	((  Calendar)val.get(i)).setTime(fields[i],  field);	  ((    Calendar)val.get(i)).setTime(fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
177	[BUG]  [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i],  roundUp);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i],  roundUp);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	((  Calendar)val.get(i)).setTime(fields[i],  roundUp);	  ((    Calendar)val.get(i)).setTime(fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
178	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
179	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
180	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length  -  3;  j++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length  -  3;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields.length  -  3;  j++)  {	  for(int    j    =    0;    j    <    fields.length    -    1;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
181	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
182	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
183	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
184	[BUG]  [BUGGY]  float  round  =(float)Math.floor(fields[i][i],  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  float  round  =(float)Math.floor(fields[i][i],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	float  round  =(float)Math.floor(fields[i][i],  field);	  float    round    =(float)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
185	[BUG]  [BUGGY]  float  round  =(float)Math.round(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  float  round  =(float)Math.round(fields[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	float  round  =(float)Math.round(fields[i][0]);	  float    round    =(float)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
186	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  fields[i][1]  +  i);	  int    round    =(int)Math.floor(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
187	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i],  fields[i].length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i],  fields[i].length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i],  fields[i].length);	  int    round    =(int)Math.floor(fields[i],    field[i]);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
188	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  0);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][i],  0);	  int    round    =(int)Math.floor(fields[i][i],    val);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
189	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  field.length  +  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  field.length  +  1;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  field.length  +  1;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    1;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
190	[BUG]  [BUGGY]  if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
191	[BUG]  [BUGGY]  int  round  =  fields[i].get(field.get(i)];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(field.get(i)];  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(field.get(i)];	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
192	[BUG]  [BUGGY]  val.add(Calendar.DATE,  i,  15);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  i,  15);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  i,  15);	  val.add(Calendar.DATE,    15,    15);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
193	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
194	[BUG]  [BUGGY]  val.add(Calendar.DATE,  i,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  i,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	val.add(Calendar.DATE,  i,  1);	  val.add(Calendar.DATE,    0,    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
195	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j  -=  5)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j  -=  5)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j  -=  5)  {	  for(int    j    =    0;    j    <    fields[i].length;    j    -=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
196	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][j],  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][j],  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][j],  field);	  int    round    =(int)Math.floor(fields[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
197	[BUG]  [BUGGY]  float  round  =(float)Math.floor(fields[i][j]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  float  round  =(float)Math.floor(fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	float  round  =(float)Math.floor(fields[i][j]);	  int    round    =(int)Math.floor(fields[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
198	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  if(round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  if(round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  if(round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    if(offset    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
199	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  4);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  4);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)/  4);	  int    round    =(int)Math.floor(fields[i].get(i)/    2);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
200	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i][0]);	  char    round    =(char)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
201	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
202	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.DATE,  16);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(Calendar.DATE,  16);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(Calendar.DATE,  16);	  int    round    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
203	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.DATE,  -15);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(Calendar.DATE,  -15);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(Calendar.DATE,  -15);	  int    round    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
204	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0]  +  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0]  +  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0]  +  i);	  int    round    =(int)Math.floor(fields[i][0]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
205	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0],  0);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i][0],  0);	  int    round    =(int)Math.floor(fields[i][0],    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
206	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(offset  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(offset  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  if(offset  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
207	[BUG]  [BUGGY]  int  round  =  val.get(fields[i],  field[i]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i],  field[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i],  field[i]);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
208	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
209	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
210	[BUG]  [BUGGY]  int  round  =(int)Math.round(fields[i],  fields[i][0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.round(fields[i],  fields[i][0]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.round(fields[i],  fields[i][0]);	  int    round    =(int)Math.round(fields[i][0],    fields[i][1]);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
211	[BUG]  [BUGGY]  if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
212	[BUG]  [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i][0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val.get(i)).setTime(fields[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	((  Calendar)val.get(i)).setTime(fields[i][0]);	  ((    Calendar)val.get(i)).setTime(fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
213	[BUG]  [BUGGY]  int  round  =  fields[i].get(field.get(i));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(field.get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(field.get(i));	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
214	[BUG]  [BUGGY]  int  round  =  this.fields[i].get(i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  this.fields[i].get(i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  this.fields[i].get(i);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
215	[BUG]  [BUGGY]  float  round  =(float)Math.floor(fields[i],  field[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  float  round  =(float)Math.floor(fields[i],  field[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	float  round  =(float)Math.floor(fields[i],  field[i]);	  float    round    =(float)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
216	[BUG]  [BUGGY]  Character  round  =(Character)Math.floor(fields[i][i]);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Character  round  =(Character)Math.floor(fields[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	Character  round  =(Character)Math.floor(fields[i][i]);	  char    round    =(char)Math.floor(fields[i][i]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
217	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  For(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
218	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
219	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1])  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1])  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length  -  1])  {	  for(int    j    =    0;    j    <    fields[i].length;    j    -=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
220	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
221	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
222	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
223	[BUG]  [BUGGY]  int  round  =  fields[i].get(Calendar.DATE,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(Calendar.DATE,  0);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  fields[i].get(Calendar.DATE,  0);	  int    round    =    fields[i].get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
224	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
225	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
226	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
227	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  >=  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    >=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
228	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  this.field.length;  j++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  this.field.length;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  this.field.length;  j++)  {	  for(int    j    =    0;    j    <    field.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
229	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
230	[BUG]  [BUGGY]  if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][i]!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    field)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
231	[BUG]  [BUGGY]  int  round  =  val.get(fields[i].get(i));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i].get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i].get(i));	  int    round    =    val.get(field);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
232	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
233	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
234	[BUG]  [BUGGY]  int  round  =  val.get(fields[i  +  1]  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i  +  1]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(fields[i  +  1]  +  1);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
235	[BUG]  [BUGGY]  Char  round  =  val.get(Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Char  round  =  val.get(Calendar.DATE);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	Char  round  =  val.get(Calendar.DATE);	  char    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
236	[BUG]  [BUGGY]  char  round  =  val.get(Calendar.DATE,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =  val.get(Calendar.DATE,  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =  val.get(Calendar.DATE,  i);	  char    round    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
237	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2  -  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2  -  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i)/  2  -  field);	  int    round    =(int)Math.floor(fields[i].get(i)/    2);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
238	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i],  field[i]  &  0xFFFF);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i],  field[i]  &  0xFFFF);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i],  field[i]  &  0xFFFF);	  int    round    =(int)Math.floor(fields[i],    field[i]);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
239	[BUG]  [BUGGY]  if(fields[i][j]  ==  field  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  field  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
240	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.DATE,  fields[i].length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(Calendar.DATE,  fields[i].length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =  val.get(Calendar.DATE,  fields[i].length);	  int    round    =    val.get(Calendar.DATE,    i);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
241	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i][i]  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i][i]  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i][i]  -  1);	  int    round    =(int)Math.floor(fields[i][i]    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
242	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length  -  1)  {	  for(int    j    =    0;    j    <    fields[i].length;    j    -=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
243	[BUG]  [BUGGY]  if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
244	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
245	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][i]    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
246	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i][i],  val);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i][i],  val);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i][i],  val);	  int    round    =(int)Math.floor(fields[i][i],    val);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
247	[BUG]  [BUGGY]  if(fields[i].length!=  1)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  1)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	if(fields[i].length!=  1)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)!=    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
248	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i],  field));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i],  field));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	int  round  =(int)Math.floor(fields[i].get(i],  field));	  int    round    =(int)Math.floor(fields[i].get(i),    field);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
249	[BUG]  [BUGGY]  char  round  =(char)Math.floor(fields[i].get(i),  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  char  round  =(char)Math.floor(fields[i].get(i),  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	643	643	1	replace	char  round  =(char)Math.floor(fields[i].get(i),  field);	  int    round    =(int)Math.floor(fields[i].get(i),    field);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
