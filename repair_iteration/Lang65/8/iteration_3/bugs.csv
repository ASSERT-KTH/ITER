bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
2	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
3	[BUG]  [BUGGY]  if(offsetSet)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(offsetSet)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(offsetSet)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(round    &&    roundUp)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
4	[BUG]  [BUGGY]  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(round    &&    roundUp)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
5	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(field!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
6	[BUG]  [BUGGY]  if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  fields[i].length  +  2;  i++)  {	  for(int    i    =    0;    i    <    fields[i].length    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
9	[BUG]  [BUGGY]  Boolean  roundUp  =  true;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  Boolean  roundUp  =  true;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	Boolean  roundUp  =  true;	  Boolean    roundUp    =    false;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  Integer  roundUp  =  false;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  Integer  roundUp  =  false;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	Integer  roundUp  =  false;	  Boolean    roundUp    =    false;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  if(round  &&  roundUp)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(round  &&  roundUp)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(round  &&  roundUp)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
12	[BUG]  [BUGGY]  if(round  &&  roundUp)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(round  &&  roundUp)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(round  &&  roundUp)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
13	[BUG]  [BUGGY]  if(fields!=  null)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
14	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
15	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
16	[BUG]  [BUGGY]  if(round)  {  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(round)  {  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(round)  {  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
17	[BUG]  [BUGGY]  if(round  &&  roundUp)  {  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(round  &&  roundUp)  {  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(round  &&  roundUp)  {  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
18	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  10);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  10);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  field  =  val.get(Calendar.DATE,  10);	  int    field    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
19	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  15);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  15);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  field  =  val.get(Calendar.DATE,  15);	  int    field    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
20	[BUG]  [BUGGY]  boolean  roundUp  =  Boolean.FALSE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  boolean  roundUp  =  Boolean.FALSE;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	boolean  roundUp  =  Boolean.FALSE;	  boolean    roundUp    =    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  boolean  roundUp  =  Boolean.TRUE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  boolean  roundUp  =  Boolean.TRUE;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	boolean  roundUp  =  Boolean.TRUE;	  boolean    roundUp    =    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
23	[BUG]  [BUGGY]  if(field  ==  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
24	[BUG]  [BUGGY]  if(field!=  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
25	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
26	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  if(field  ==  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
28	[BUG]  [BUGGY]  if(field  ==  null  ||  field.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  field.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  field.get(Calendar.DATE)!=  1)  {  val.add(Calendar.DATE,  1);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
29	[BUG]  [BUGGY]  if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
30	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
31	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
32	[BUG]  [BUGGY]  if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
33	[BUG]  [BUGGY]  if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
34	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  round);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  0,  round);	  int[][]    fields    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  2);	  int[][]    fields    =    val.get(Calendar.DATE,    3);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  4);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  4);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  4);	  int[][]    fields    =    val.get(Calendar.DATE,    3);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
37	[BUG]  [BUGGY]  if(round  &&  roundUp)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(round  &&  roundUp)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(round  &&  roundUp)  {  if(field  ==  null)  {  val.add(Calendar.DATE,  15);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
38	[BUG]  [BUGGY]  if(round  &&  roundUp)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(round  &&  roundUp)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(round  &&  roundUp)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  -  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  fields[i].length  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields[i].length    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length();  i++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length();  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  fields[i].length();  i++)  {	  for(int    i    =    0;    i    <    fields[i].length    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)+  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE)+  2;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  field  =  val.get(Calendar.DATE)+  2;	  int    field    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
42	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)+  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE)+  3;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  field  =  val.get(Calendar.DATE)+  3;	  int    field    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
43	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)/  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE)/  1;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  field  =  val.get(Calendar.DATE)/  1;	  int    field    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
44	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  2;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE)+  2;	  int[][]    fields    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
45	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)/  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)/  1;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE)/  1;	  int[][]    fields    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
46	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  3;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE)+  3;	  int[][]    fields    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
47	[BUG]  [BUGGY]  if(fields.length  ==  1)  {  if(field!=  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields.length  ==  1)  {  if(field!=  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields.length  ==  1)  {  if(field!=  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(fields.length    ==    1)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  field  =  val.get(Calendar.DATE,  2);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
49	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  12);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  12);	  int[][]    fields    =    val.get(Calendar.DATE,    16);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
50	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  15);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  15);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  15);	  int[][]    fields    =    val.get(Calendar.DATE,    16);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
51	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  4);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  4);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  field  =  val.get(Calendar.DATE,  4);	  int    field    =    val.get(Calendar.DATE,    3);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
52	[BUG]  [BUGGY]  val.add(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  val.add(Calendar.DATE,  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	val.add(Calendar.DATE,  2);	  val.add(Calendar.DATE,    3);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  if(round  &&  roundUp)  {  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(round  &&  roundUp)  {  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(round  &&  roundUp)  {  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  final  boolean  roundUp  =  false;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  final  boolean  roundUp  =  false;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	final  boolean  roundUp  =  false;	  boolean    roundUp    =    false;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  field,  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  field,  round);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  field,  round);	  int[][]    fields    =    val.get(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
57	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offsetSet);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offsetSet);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  offsetSet);	  int[][]    fields    =    val.get(Calendar.DATE,    roundUp);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
58	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);	  int[][]    fields    =    val.get(Calendar.DATE,    roundUp);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
59	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
60	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
61	[BUG]  [BUGGY]  if(field  >=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  >=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  >=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
63	[BUG]  [BUGGY]  if(offsetSet  ||  offsetSet)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(offsetSet  ||  offsetSet)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(offsetSet  ||  offsetSet)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(round    &&    roundUp)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  -  3;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  -  3;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  fields[i].length  -  3;  i++)  {	  for(int    i    =    0;    i    <    fields[i].length    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  -  4;  i++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  -  4;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  fields[i].length  -  4;  i++)  {	  for(int    i    =    0;    i    <    fields[i].length    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
67	[BUG]  [BUGGY]  if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
68	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  field  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  field  +  1);	  int[][]    fields    =    val.get(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
69	[BUG]  [BUGGY]  boolean  roundUp  =  Boolean.valueOf(offset);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  boolean  roundUp  =  Boolean.valueOf(offset);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	boolean  roundUp  =  Boolean.valueOf(offset);	  boolean    roundUp    =    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
71	[BUG]  [BUGGY]  if(fields!=  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
72	[BUG]  [BUGGY]  if(fields  ==  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  15);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
73	[BUG]  [BUGGY]  if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  2);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  2);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  2);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
74	[BUG]  [BUGGY]  if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  3);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  3);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  3);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
75	[BUG]  [BUGGY]  if(fields!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(fields.length    ==    1)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
76	[BUG]  [BUGGY]  if(fields  ==  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(fields.length    ==    1)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  if(fields!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }	  if(fields.length    ==    1)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
78	[BUG]  [BUGGY]  if(fields!=  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
79	[BUG]  [BUGGY]  if(fields  ==  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields  ==  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields  ==  null)  {  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
80	[BUG]  [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
81	[BUG]  [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
82	[BUG]  [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
83	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
84	[BUG]  [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
85	[BUG]  [BUGGY]  if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
86	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
87	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  if(fields!=  null  &&  fields.length  >  0)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null  &&  fields.length  >  0)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null  &&  fields.length  >  0)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(fields!=    null)    {    if(field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  field.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  field.length;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  field.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    3;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length.length;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  fields[i].length.length;  i++)  {	  for(int    i    =    0;    i    <    fields[i].length    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
91	[BUG]  [BUGGY]  if(field  ==  null  ||  field!=  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  field!=  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  field!=  null)  {  val.add(Calendar.DATE,  1);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
92	[BUG]  [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
93	[BUG]  [BUGGY]  if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
94	[BUG]  [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
95	[BUG]  [BUGGY]  if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
96	[BUG]  [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
97	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
98	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
99	[BUG]  [BUGGY]  if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
100	[BUG]  [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
101	[BUG]  [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
103	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1;  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int  field  =  val.get(Calendar.DATE)-  1;	  int    field    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
104	[BUG]  [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
105	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields[i][j]  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
106	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
107	[BUG]  [BUGGY]  if(fields.length  >  1)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields.length  >  1)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields.length  >  1)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(fields.length    ==    1)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
108	[BUG]  [BUGGY]  if(fields.length  ==  1)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields.length  ==  1)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields.length  ==  1)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  1);  }	  if(fields.length    ==    1)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
109	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  25);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  25);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  25);	  int[][]    fields    =    val.get(Calendar.DATE,    roundUp);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
110	[BUG]  [BUGGY]  if(field  ==  null)  {  if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null)  {  if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null)  {  if(field!=  null  &&  field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
111	[BUG]  [BUGGY]  if(field  ==  null  ||  field!=  null)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  field!=  null)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  field!=  null)  {  val.add(Calendar.DATE,  15);  }	  if(field!=    null    &&    field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
112	[BUG]  [BUGGY]  if(fields!=  null  &&  fields.length  >  0)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields!=  null  &&  fields.length  >  0)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields!=  null  &&  fields.length  >  0)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields!=    null)    {    if(field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
113	[BUG]  [BUGGY]  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null)    {    if(field!=    null)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
114	[BUG]  [BUGGY]  if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  &&  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
115	[BUG]  [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }	  if(field    ==    null    ||    round)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
116	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields[i][j]  ==  field)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
117	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(fields[i][j]  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  10);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    10);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
118	[BUG]  [BUGGY]  if(field!=  null  &&  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field!=  null  &&  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field!=  null  &&  roundUp)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(field!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
119	[BUG]  [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]              boolean  roundUp  =  false;      [BUGGY]  if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  offsetSet  round  roundUp  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  min  offset  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  	projects/Lang65/src/java/org/apache/commons/lang/time/DateUtils.java	0.4472135954999579	642	642	1	replace	if(field  ==  null  ||  round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }	  if(field    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
