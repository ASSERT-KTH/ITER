bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
55	[BUG] [BUGGY] if (index == -1) { [FE] IllegalArgumentException [CONTEXT] public Partial with(DateTimeFieldType fieldType, int value) { if (fieldType == null) { throw new IllegalArgumentException("The field type must not be null"); } int index = indexOf(fieldType); [BUGGY] if (index == -1) { [BUGGY] DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1]; int[] newValues = new int[newTypes.length];  int i = 0; DurationField unitField = fieldType.getDurationType().getField(iChronology); if (unitField.isSupported()) { for (; i < iTypes.length; i++) { DateTimeFieldType loopType = iTypes[i]; DurationField loopUnitField = loopType.getDurationType().getField(iChronology); [CLASS] Partial Property [METHOD] with [RETURN_TYPE] Partial  DateTimeFieldType fieldType int value [VARIABLES] boolean DateTimeFieldType[] iTypes newTypes types Partial iPartial newPartial partial DateTimeFieldType fieldType loopType int[] iValues newValues values Chronology chrono chronology iChronology newChronology DurationField loopRangeField loopUnitField rangeField unitField long serialVersionUID DateTimeFormatter[] iFormatter int compare fieldIndex i iFieldIndex index value  	projects/Time2/src/main/java/org/joda/time/Partial.java	0.23570226039551587	433	433	1	replace	
56	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public Partial with(DateTimeFieldType fieldType, int value) { if (fieldType == null) { throw new IllegalArgumentException("The field type must not be null"); } int index = indexOf(fieldType); [BUGGY] [BUGGY] if (index == -1) { DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1]; int[] newValues = new int[newTypes.length];  int i = 0; DurationField unitField = fieldType.getDurationType().getField(iChronology); if (unitField.isSupported()) { for (; i < iTypes.length; i++) { DateTimeFieldType loopType = iTypes[i]; DurationField loopUnitField = loopType.getDurationType().getField(iChronology); [CLASS] Partial Property [METHOD] with [RETURN_TYPE] Partial  DateTimeFieldType fieldType int value [VARIABLES] boolean DateTimeFieldType[] iTypes newTypes types Partial iPartial newPartial partial DateTimeFieldType fieldType loopType int[] iValues newValues values Chronology chrono chronology iChronology newChronology DurationField loopRangeField loopUnitField rangeField unitField long serialVersionUID DateTimeFormatter[] iFormatter int compare fieldIndex i iFieldIndex index value  	projects/Time2/src/main/java/org/joda/time/Partial.java	0.23570226039551587	433	433	1	add	
