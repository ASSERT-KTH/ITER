bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
3	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
4	[BUG]  [BUGGY]  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  L  [FE]        IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  L	4	None	replace
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
6	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
8	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
9	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  System.currentTimeMillis();  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  long  l  =  getTime().longValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  getTime().longValue();  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().longValue();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  long  l  =  getTime();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  getTime();  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  unixTimeToZipLong(l);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(l);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  unixTimeToZipLong(tWO_TO_32);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(tWO_TO_32);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tWO_TO_32);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l);  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  Long.parseLong(l);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(l);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_64)  {	  if(l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	7	1	replace
23	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	7	1	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	7	1	replace
25	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	7	1	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	7	1	replace
27	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	7	1	replace
28	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
29	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);	  	non-compiled	[CE]  ';'  expected	1	None	add
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  	compilable	  [FE]  AssertionError  	1	1	add
31	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  	compilable	  [FE]  AssertionError  	1	1	add
32	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  {  }  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);	  	non-compiled	[CE]  ';'  expected	1	None	add
33	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    If(l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
34	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	2	4	replace
35	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	2	4	replace
36	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	2	4	replace
38	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	2	4	replace
39	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	2	4	replace
40	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	2	4	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  ==  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  ==  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	2	1	replace
42	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  ==  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	2	1	replace
43	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
44	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
45	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
46	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
47	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
48	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  [Delete]  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  [Delete]  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  [Delete]  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
49	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
50	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
51	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
52	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
53	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
54	[BUG]  [BUGGY]  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [CE]  cannot  find  symbol  L  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  L	9	None	replace
55	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_42)  {  [CE]  cannot  find  symbol  TWO_TO_42  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_42)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_42)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_42	9	None	replace
56	[BUG]  [BUGGY]  if(l  <  TWO_TO_64  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  TWO_TO_64  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_64  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_64  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_64	9	None	replace
57	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_36)  {  [CE]  cannot  find  symbol  TWO_TO_36  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_36)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_36)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_36	9	None	replace
58	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_MAX_VALUE)  {  [CE]  cannot  find  symbol  TWO_TO_MAX_VALUE  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_MAX_VALUE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_MAX_VALUE)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_MAX_VALUE	9	None	replace
59	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_62)  {  [CE]  cannot  find  symbol  TWO_TO_62  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_62)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_62)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_62	9	None	replace
60	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TIME_TO_64)  {  [CE]  cannot  find  symbol  TIME_TO_64  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TIME_TO_64)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TIME_TO_64)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  TIME_TO_64	9	None	replace
61	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    while(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
62	[BUG]  [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  ZipShort.getLong(tWO_TO_32);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  long  l  =  getTime(l);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  long  l  =  getTime(l);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(l);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  while(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  while(l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    while(l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
65	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
66	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    (l  >  TWO_TO_32)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
67	[BUG]  [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  32)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
70	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT();  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_16)  {  [CE]  cannot  find  symbol  TWO_TO_16  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_16)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_16)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_16	9	None	replace
73	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
74	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
75	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  <  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  <  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  <  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
76	[BUG]  [BUGGY]  if(L  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  L  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;    [BUGGY]  if(L  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]    throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  L	7	None	replace
