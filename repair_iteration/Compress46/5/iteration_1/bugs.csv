bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if(l  >  TWO_TO_32)  {  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >  TWO_TO_32)  {	if  (l  >=  TWO_TO_32)  {  	compilable	  [FE]  AssertionError  	9	1	replace
2	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if(l  >  TWO_TO_32)  {  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {	if  (l  >=  TWO_TO_32)  {  	compilable	  [FE]  AssertionError  	9	1	replace
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	if  (l  >=  TWO_TO_32)  {  	compilable	  [FE]  IllegalArgumentException  	9	4	replace
4	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	if  (l  >=  TWO_TO_32)  {  	compilable	  [FE]  IllegalArgumentException  	9	4	replace
5	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if(l  <  =  TWO_TO_32)  {  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {	if  (l  >=  TWO_TO_32)  {  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	if  (l  >=  TWO_TO_32)  {  	compilable	  [FE]  AssertionError  	9	1	replace
7	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	if  (l  >=  TWO_TO_32)  {  	compilable	  [FE]  AssertionError  	9	1	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	  	if  (l  >=  TWO_TO_32)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [CE]  cannot  find  symbol  TWO_TO_64  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {	if  (l  >=  TWO_TO_32)  {  	non-compiled	[CE]  cannot  find  symbol  TWO_TO_64	9	None	replace
