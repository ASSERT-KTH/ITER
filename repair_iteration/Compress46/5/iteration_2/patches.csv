bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  +  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  +  TWO_TO_32;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  +  1;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  +  1;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  -  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  -  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  -  TWO_TO_32;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  /  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  /  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  /  TWO_TO_32;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  *  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  *  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  *  TWO_TO_32;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  2;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  +  2;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  +  2;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >>  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [CE]  cannot  find  symbol  TWO_TO_64  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_64)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_64	8	None	replace
10	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
11	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
12	[BUG]  [BUGGY]  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  L  [FE]            IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  L	8	None	replace
13	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	46	4	replace
14	[BUG]  [BUGGY]  if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	46	4	replace
15	[BUG]  [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  =  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(L    <    =    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
16	[BUG]  [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  =  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(L    <    =    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
17	[BUG]  [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(L    <    =    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
18	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
19	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
20	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
21	[BUG]  [BUGGY]  while(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	while(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
22	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
23	[BUG]  [BUGGY]  while(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	while(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
24	[BUG]  [BUGGY]  while(l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	while(l  <  =  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
25	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  while(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  while(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  while(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
26	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	while(l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	64	4	replace
27	[BUG]  [BUGGY]  while(l  <  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	while(l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	64	4	replace
28	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  while(l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  while(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  while(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	while(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	64	1	replace
30	[BUG]  [BUGGY]  while(l  >  TWO_TO_32)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	while(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	64	1	replace
31	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  while(l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  while(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  while(l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
32	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_31)  {  [CE]  cannot  find  symbol  TWO_TO_31  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_31)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_31)  {	  if(l    <    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_31	35	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	23	1	replace
34	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	23	1	replace
35	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    If(l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
36	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    If(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
37	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  If(l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  If(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32)  {  If(l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    If(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
38	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    If(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
39	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
40	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    If(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
41	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    if(l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
42	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
43	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  if(L  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  if(L  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    if(L  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
44	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
45	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(L    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	76	None	replace
47	[BUG]  [BUGGY]  if(L!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  L  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(L    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  L	76	None	replace
48	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(L    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
49	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	compilable	  [FE]  IllegalArgumentException  	68	4	replace
50	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  32)  {  [FE]  IllegalArgumentException  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	compilable	  [FE]  IllegalArgumentException  	68	4	replace
51	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >=  32)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >=  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >=  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
52	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  ==  32)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  ==  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  ==  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
53	[BUG]  [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  >  32)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  =  TWO_TO_32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
54	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >=  TWO_TO_32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	compilable	  [FE]  IllegalArgumentException  	68	2	replace
55	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  32)  {  [FE]  IllegalArgumentException  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	compilable	  [FE]  IllegalArgumentException  	68	2	replace
56	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  ==  TWO_TO_32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	compilable	  [FE]  IllegalArgumentException  	68	2	replace
57	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  32)  {  [FE]  IllegalArgumentException  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	compilable	  [FE]  IllegalArgumentException  	68	2	replace
58	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_16)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_16)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_16)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_16)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
59	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_28)  {  [CE]  cannot  find  symbol  TWO_TO_28  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_28)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_28)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_16)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_28	72	None	replace
60	[BUG]  [BUGGY]  if(tWO_TO_32  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  tWO_TO_32  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(tWO_TO_32  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(tWO_TO_32  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(L    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  tWO_TO_32	4	None	replace
61	[BUG]  [BUGGY]  if(long  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  '.class'  expected  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(long  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(long  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(L    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  '.class'  expected	4	None	replace
62	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(tWO_TO_32,  l);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  unixTimeToZipLong(tWO_TO_32,  l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(tWO_TO_32,  l);	  long    l    =    unixTimeToZipLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
63	[BUG]  [BUGGY]  long  l  =  createTimeToZipLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  createTimeToZipLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  createTimeToZipLong(tWO_TO_32);	  long    l    =    unixTimeToZipLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
64	[BUG]  [BUGGY]  long  l  =  getTimeToZipLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTimeToZipLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTimeToZipLong(tWO_TO_32);	  long    l    =    unixTimeToZipLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  int  l  =  unixTimeToZipLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  int  l  =  unixTimeToZipLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	int  l  =  unixTimeToZipLong(tWO_TO_32);	  long    l    =    unixTimeToZipLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  unixTimeToZipLong(l,  tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(l,  tWO_TO_32);	  long    l    =    unixTimeToZipLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
67	[BUG]  [BUGGY]  short  l  =  unixTimeToZipLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  short  l  =  unixTimeToZipLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	short  l  =  unixTimeToZipLong(tWO_TO_32);	  long    l    =    unixTimeToZipLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
68	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_MAX_VALUE)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
69	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
70	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
71	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
72	[BUG]  [BUGGY]  if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
73	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
74	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >>  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
75	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l!=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l!=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l!=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
76	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
77	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  [Delete]  TWO_TO_32)  {  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  [Delete]  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  [Delete]  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
78	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]              IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
79	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  [BUGGY]  TWO_TO_32)  {  [CE]  ')'  expected  [FE]                IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  [BUGGY]  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  [BUGGY]  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
80	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
81	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
82	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l!=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
83	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
84	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >>  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
85	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  [Delete]  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  [Delete]  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  [Delete]  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	26	None	add
86	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	while(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    while(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	61	4	replace
87	[BUG]  [BUGGY]  while(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	while(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    while(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	61	4	replace
88	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    while(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
89	[BUG]  [BUGGY]  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    while(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
90	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    while(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
91	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    while(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
92	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >=  TWO_TO_64)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >=  TWO_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >=  TWO_TO_64)  {	  if(l    <    =    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
93	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_64  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_64  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_64  ||  l  >  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  ==  TWO_TO_64)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  ==  TWO_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  ==  TWO_TO_64)  {	  if(l    <    =    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
95	[BUG]  [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  =  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  =  TWO_TO_32  ||  l  >  TWO_TO_64)  {	  if(l    <    =    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
96	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [CE]  cannot  find  symbol  TWO_TO_64  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_64)  {	  if(l    <    =    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_64	20	None	replace
97	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT,  l);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT,  l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT,  l);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
98	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TO_32);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TO_32);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
99	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(tWO_TO_32);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
100	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(l);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(l);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
101	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT,  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT,  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT,  TWO_TO_32);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
102	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(TWO_TO_32);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
103	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(l,  LIVE_TIME_BIT);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(l,  LIVE_TIME_BIT);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(l,  LIVE_TIME_BIT);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
104	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
105	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
106	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
107	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
108	[BUG]  [BUGGY]  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	If(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
109	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
110	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >>  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
111	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l!=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l!=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l!=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
112	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
113	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    If(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
114	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  [Delete]  TWO_TO_32)  {  [CE]  ')'  expected  [FE]              IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  [Delete]  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  [Delete]  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
115	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  [BUGGY]  TWO_TO_32)  {  [CE]  ')'  expected  [FE]                IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  [BUGGY]  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  [BUGGY]  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
116	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  (l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    (l    >    TWO_TO_32)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
117	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  (l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    (l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
118	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  (l  <  TWO_TO_32)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  (l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  (l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    (l    >    TWO_TO_32)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
119	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32)  {  (l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    (l    >    TWO_TO_32)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
120	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32)  {  (l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    (l    >    TWO_TO_32)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
121	[BUG]  [BUGGY]  if(l!=  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32)  {  (l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l!=  TWO_TO_32)  {  (l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    (l    >    TWO_TO_32)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  ==  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	27	1	replace
123	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	27	1	replace
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	17	1	replace
125	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	17	1	replace
126	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
127	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
128	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
129	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
130	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
131	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l!=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l!=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    if(l!=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
132	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  >>  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  >>  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    if(l  >>  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
133	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  ==  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  ==  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    if(l  ==  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
134	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l!=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l!=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    if(l  >=  TWO_TO_32  ||  l!=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
135	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    if(l  >=  TWO_TO_32  ||  l  >>  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
136	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  If(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    If(l  >=  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
137	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  unixTimeToZipLong(l,  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(l,  TWO_TO_32);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
138	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(two_TO_32);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  unixTimeToZipLong(two_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(two_TO_32);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
139	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  unixTimeToZipLong(TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(TWO_TO_32);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
140	[BUG]  [BUGGY]  long  l  =  createTimeToZipLong(l);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  createTimeToZipLong(l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  createTimeToZipLong(l);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
141	[BUG]  [BUGGY]  long  l  =  getTimeToZipLong(l);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTimeToZipLong(l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTimeToZipLong(l);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
142	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  ACCESS_TIME_BIT  ||  l  >  ACCESS_TIME_BIT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  ACCESS_TIME_BIT  ||  l  >  ACCESS_TIME_BIT)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    <    =    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	53	4	replace
143	[BUG]  [BUGGY]  if(l  <  ACCESS_TIME_BIT  ||  l  >  ACCESS_TIME_BIT)  {  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  ACCESS_TIME_BIT  ||  l  >  ACCESS_TIME_BIT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  ACCESS_TIME_BIT  ||  l  >  ACCESS_TIME_BIT)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    <    =    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	53	4	replace
144	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
145	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l        >        TWO_TO_32)        {        if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }	  	compilable	  [FE]  AssertionError  	30	1	add
147	[BUG]  [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l        >        TWO_TO_32)        {        if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }	  	compilable	  [FE]  AssertionError  	30	1	add
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l        >        TWO_TO_32)        {        if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer:   "  +  l);  }	  	compilable	  [FE]  AssertionError  	30	1	add
149	[BUG]  [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer:   "  +  l);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l        >        TWO_TO_32)        {        if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer:   "  +  l);  }	  	compilable	  [FE]  AssertionError  	30	1	add
150	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32)    {    if(l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
151	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32)    {    if(l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
152	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l!=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l!=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32)    {    if(l!=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
153	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >>  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >>  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32)    {    if(l  >>  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
154	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  If(l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  If(l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32)    {    If(l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
155	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  [BUGGY]  TWO_TO_32)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  [BUGGY]  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32)    {    if(l  [BUGGY]  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	41	None	add
156	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	28	None	replace
157	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
158	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	49	4	replace
159	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	49	4	replace
160	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
161	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
162	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(L  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(L  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(L  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
163	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  NAME_TO_32)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  NAME_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32  ||  l  >  NAME_TO_32)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
164	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
165	[BUG]  [BUGGY]  long  l  =  Long.parseLong(TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(TWO_TO_32);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
166	[BUG]  [BUGGY]  long  l  =  Long.parseLong(two_TO_32);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(two_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(two_TO_32);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
167	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tw_TO_32);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(tw_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tw_TO_32);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
168	[BUG]  [BUGGY]  long  l  =  Long.parseLong(two_to_32);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(two_to_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(two_to_32);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
169	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tempTime);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(tempTime);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tempTime);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
170	[BUG]  [BUGGY]  long  l  =  getTime()  +  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime()  +  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime()  +  TWO_TO_32;	  long    l    =    getTime();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
171	[BUG]  [BUGGY]  long  l  =  getTime()  *  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime()  *  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime()  *  TWO_TO_32;	  long    l    =    getTime();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
172	[BUG]  [BUGGY]  long  l  =  getTimeInMillis();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTimeInMillis();  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTimeInMillis();	  long    l    =    getTime();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
173	[BUG]  [BUGGY]  long  l  =  getLocalMillis();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getLocalMillis();  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getLocalMillis();	  long    l    =    getTime();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
174	[BUG]  [BUGGY]  long  l  =  getTime()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime()  +  1;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime()  +  1;	  long    l    =    getTime();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
175	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    if(l  <  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
176	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  If(l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  If(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    If(l  <  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
177	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    if(l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
178	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    if(l  <  =  TWO_TO_32)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
179	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  <  NAME_TO_32)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  <  NAME_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    if(l  <  NAME_TO_32)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
180	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  <  NUM_TO_32)  {  [CE]  ';'  expected  [FE]              IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  <  NUM_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    if(l  <  NUM_TO_32)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
181	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_36)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_36)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_36)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_36)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
182	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_34)  {  [CE]  cannot  find  symbol  TWO_TO_34  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_34)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_34)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_36)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_34	57	None	replace
183	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_33)  {  [CE]  cannot  find  symbol  TWO_TO_33  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_33)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_33)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_36)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_33	57	None	replace
184	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(tWO_TO_32);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT(l);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
185	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l,  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l,  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l,  TWO_TO_32);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT(l);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
186	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l,  ACCESS_TIME_BIT);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l,  ACCESS_TIME_BIT);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l,  ACCESS_TIME_BIT);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT(l);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
187	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  1);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT(l);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
188	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  TWO_TO_32);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT(l);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
189	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  -  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  -  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  -  TWO_TO_32);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT(l);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
190	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_62)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_62)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_62)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_62)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
191	[BUG]  [BUGGY]  if(tWO_TO_32  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [CE]  cannot  find  symbol  tWO_TO_32  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(tWO_TO_32  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(tWO_TO_32  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {	  if(L    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  tWO_TO_32	54	None	replace
192	[BUG]  [BUGGY]  if(L  <  TWO_TO_32  ||  l  >=  TWO_TO_64)  {  [CE]  cannot  find  symbol  L  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  TWO_TO_32  ||  l  >=  TWO_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  TWO_TO_32  ||  l  >=  TWO_TO_64)  {	  if(L    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  L	54	None	replace
193	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime().longValue()  +  1;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().longValue()  +  1;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
194	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime().longValue()  +  2;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().longValue()  +  2;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
195	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime().longValue()  +  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().longValue()  +  TWO_TO_32;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
196	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  *  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime().longValue()  *  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().longValue()  *  TWO_TO_32;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
197	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  3;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime().longValue()  +  3;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().longValue()  +  3;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
198	[BUG]  [BUGGY]  long  l  =  getTime().length();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime().length();  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().length();	  long    l    =    getTime().longValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
199	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32  +  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tWO_TO_32  +  1);	  long    l    =    Long.parseLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
200	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32,  l);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32,  l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tWO_TO_32,  l);	  long    l    =    Long.parseLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
201	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32  +  2);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32  +  2);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tWO_TO_32  +  2);	  long    l    =    Long.parseLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
202	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32)+  1;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32)+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tWO_TO_32)+  1;	  long    l    =    Long.parseLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
203	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32  +  3);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32  +  3);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tWO_TO_32  +  3);	  long    l    =    Long.parseLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
204	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(0);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(0);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
205	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  long.getLIVE_TIME_BIT();  [CE]  class  expected  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  long.getLIVE_TIME_BIT();  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  long.getLIVE_TIME_BIT();	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT();    	non-compiled	[CE]  class  expected	71	None	replace
206	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  zipShort.getLIVE_TIME_BIT();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  zipShort.getLIVE_TIME_BIT();  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  zipShort.getLIVE_TIME_BIT();	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
207	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  Long.parseLong(l);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  Long.parseLong(l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  Long.parseLong(l);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
208	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >>  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >>  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  ACCESS_TIME_BIT  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  ACCESS_TIME_BIT  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	6	3	replace
210	[BUG]  [BUGGY]  if(l  <  ACCESS_TIME_BIT  ||  l  >  TWO_TO_32)  {  [FE]  AssertionError  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  ACCESS_TIME_BIT  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  ACCESS_TIME_BIT  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	6	3	replace
211	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	32	4	replace
212	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [FE]  IllegalArgumentException  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	32	4	replace
213	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
214	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	32	1	replace
216	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	32	1	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	32	1	replace
218	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	32	1	replace
219	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	32	4	replace
220	[BUG]  [BUGGY]  if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [FE]  IllegalArgumentException  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	32	4	replace
221	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	75	4	replace
222	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [FE]  IllegalArgumentException  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	75	4	replace
223	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	75	1	replace
225	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	75	1	replace
226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	75	4	replace
227	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [FE]  IllegalArgumentException  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	75	4	replace
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	75	1	replace
229	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	75	1	replace
230	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	75	1	replace
231	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	75	1	replace
232	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	75	4	replace
233	[BUG]  [BUGGY]  if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [FE]  IllegalArgumentException  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l!=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	75	4	replace
234	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_42)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_42)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_42)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_42)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
235	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
236	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
237	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
238	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
239	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
240	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
241	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	9	4	replace
242	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	9	4	replace
243	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  32)  {  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
244	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
245	[BUG]  [BUGGY]  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
246	[BUG]  [BUGGY]  long  l  =  getTime(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(tWO_TO_32);	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
247	[BUG]  [BUGGY]  long  l  =  getTime(tw_TO_32);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(tw_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(tw_TO_32);	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
248	[BUG]  [BUGGY]  long  l  =  getTime(TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(TWO_TO_32);	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
249	[BUG]  [BUGGY]  long  l  =  getTime(two_TO_32);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(two_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(two_TO_32);	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
250	[BUG]  [BUGGY]  long  l  =  getTime(l,  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(l,  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(l,  TWO_TO_32);	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
251	[BUG]  [BUGGY]  long  l  =  getTime(L)+  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(L)+  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(L)+  TWO_TO_32;	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
252	[BUG]  [BUGGY]  long  l  =  ZipShort.getLong(l);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  ZipShort.getLong(l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  ZipShort.getLong(l);	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
253	[BUG]  [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32,  l);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32,  l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  ZipShort.getLong(tWO_TO_32,  l);	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
254	[BUG]  [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  ZipShort.getLong(tWO_TO_32  +  1);	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
255	[BUG]  [BUGGY]  long  l  =  ZipShort.getLong(TWO_TO_32,  l);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  ZipShort.getLong(TWO_TO_32,  l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  ZipShort.getLong(TWO_TO_32,  l);	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
256	[BUG]  [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32  +  2);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32  +  2);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  ZipShort.getLong(tWO_TO_32  +  2);	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
257	[BUG]  [BUGGY]  long  l  =  ZipShort.getInt(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  ZipShort.getInt(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  ZipShort.getInt(tWO_TO_32);	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
258	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
259	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
260	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(L  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(L  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(L  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
261	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_31  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_TO_31  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >  TWO_TO_31  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
262	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  If(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
263	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
264	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
265	[BUG]  [BUGGY]  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
266	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	40	4	replace
267	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	40	4	replace
268	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32  ||  l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
269	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
270	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	40	4	replace
271	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	40	4	replace
272	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	38	4	replace
273	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	38	4	replace
274	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
275	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  ==  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	38	4	replace
276	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	38	4	replace
277	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  while(l  <  =  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    while(l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
278	[BUG]  [BUGGY]  if(tWO_TO_32  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  tWO_TO_32  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(tWO_TO_32  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(tWO_TO_32  >=  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(L    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  tWO_TO_32	76	None	replace
279	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  ==  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	18	1	replace
280	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  ==  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	18	1	replace
281	[BUG]  [BUGGY]  if(l  >  32  ||  l  <  =  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  32  ||  l  <  =  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  32  ||  l  <  =  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
282	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  16)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  16)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  16)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
283	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  =  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  =  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  if(l  <  =  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
284	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(FIRST_TIME_BIT);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(FIRST_TIME_BIT);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(FIRST_TIME_BIT);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
285	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  while(l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  while(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    while(l  <  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
286	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  (l  <  TWO_TO_32)  {  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  (l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    (l  <  TWO_TO_32)  {	  	non-compiled	[CE]  not  a  statement	34	None	add
287	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32)  {  If(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    If(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
288	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32)  {  If(l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  If(l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32)  {  If(l  ==  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    If(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
289	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  If(l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    If(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
290	[BUG]  [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  ZipShort.getLong(tWO_TO_32)+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  ZipShort.getLong(tWO_TO_32)+  1;	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
291	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TIME_TO_32)  {  [CE]  cannot  find  symbol  TIME_TO_32  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TIME_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TIME_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_16)    {    	non-compiled	[CE]  cannot  find  symbol  TIME_TO_32	72	None	replace
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	32	1	replace
293	[BUG]  [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  AssertionError  	32	1	replace
294	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
295	[BUG]  [BUGGY]  if(l  <  TWO_TO_16  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  TWO_TO_16  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_16  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_16  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_64    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_16	56	None	replace
296	[BUG]  [BUGGY]  if(l  <  TWO_TO_42  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  TWO_TO_42  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_42  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_42  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_64    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_42	56	None	replace
297	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
298	[BUG]  [BUGGY]  long  l  =  this.unixTimeToZipLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  this.unixTimeToZipLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  this.unixTimeToZipLong(tWO_TO_32);	  long    l    =    unixTimeToZipLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
299	[BUG]  [BUGGY]  long  l  =  startTimeToZipLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  startTimeToZipLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  startTimeToZipLong(tWO_TO_32);	  long    l    =    unixTimeToZipLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
300	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
301	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
302	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  If(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
303	[BUG]  [BUGGY]  long  l  =  this.unixTimeToZipLong.parseLong(l);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  this.unixTimeToZipLong.parseLong(l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  this.unixTimeToZipLong.parseLong(l);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
304	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_63)  {  [CE]  cannot  find  symbol  TWO_TO_63  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_63)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_63)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_62)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_63	59	None	replace
305	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  10;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime().longValue()  +  10;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().longValue()  +  10;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
306	[BUG]  [BUGGY]  if(l  <  =  TWO_LONG)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_LONG)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_LONG)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    [Delete]    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
307	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l!=  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l!=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l!=  TWO_TO_32)  {	  if(l    <    =    TWO_TO_32    ||    l    <    =    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
308	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32)    {    l  >  TWO_TO_32  ||  l  <  TWO_TO_32)  {	  	non-compiled	[CE]  not  a  statement	37	None	add
309	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  3;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  +  3;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  +  3;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
310	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  6;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  +  6;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  +  6;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
311	[BUG]  [BUGGY]  long  l  =  getTime(l).longValue();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(l).longValue();  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(l).longValue();	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
312	[BUG]  [BUGGY]  long  l  =  getTime(l)+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(l)+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(l)+  1;	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
313	[BUG]  [BUGGY]  long  l  =  getTime(l  +  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(l  +  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(l  +  TWO_TO_32);	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
314	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
315	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  >  TWO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  >  TWO_32  ||  l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
316	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  while(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    while(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
317	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_16)  {  [CE]  cannot  find  symbol  TWO_TO_16  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_16)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_16)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_16	8	None	replace
318	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32  +  32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(tWO_TO_32  +  32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(tWO_TO_32  +  32);	  long    l    =    Long.parseLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
319	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT()  +  TWO_TO_32;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT()  +  TWO_TO_32;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT()  +  TWO_TO_32;	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
320	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getZipLong(l);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getZipLong(l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getZipLong(l);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
321	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||!bit0_modifyTimePresent)  {  [CE]  non-static  variable  bit0_modifyTimePresent  cannot  be  referenced  from  a  static  context  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||!bit0_modifyTimePresent)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||!bit0_modifyTimePresent)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  non-static  variable  bit0_modifyTimePresent  cannot  be  referenced  from  a  static  context	51	None	replace
322	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  -  1);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT(l);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
323	[BUG]  [BUGGY]  if(long  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(long  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(long  <  TWO_TO_32  ||  l  >  TWO_TO_64)  {	  if(L    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  '.class'  expected	54	None	replace
324	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TIME_TO_64)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  TIME_TO_64)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  TIME_TO_64)  {	  if(l    <    TWO_TO_32    ||    l    >    TIME_TO_64)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
325	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_31  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_31  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  <  TWO_TO_31  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
326	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(L  <  TWO_TO_32  ||  l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
327	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  while(l  ==  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  while(l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32)    {    while(l  ==  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
328	[BUG]  [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >=  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	28	None	replace
329	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	25	1	replace
330	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  >  TWO_TO_32  ||  l  ==  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    ==    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	25	1	replace
331	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  <  =  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32    ||    l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
332	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  {  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  {  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  {  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	26	None	add
333	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  3);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  3);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getLIVE_TIME_BIT(l  +  3);	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT(l);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
334	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l!=  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l!=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	44	4	replace
335	[BUG]  [BUGGY]  if(l!=  TWO_TO_32)  {  [FE]  IllegalArgumentException  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l!=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l!=  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l!=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	44	4	replace
336	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  unixTimeToZipLong(l  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(l  +  1);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
337	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l.longValue());  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  unixTimeToZipLong(l.longValue());  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  unixTimeToZipLong(l.longValue());	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
338	[BUG]  [BUGGY]  short  l  =  Long.parseLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  short  l  =  Long.parseLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	short  l  =  Long.parseLong(tWO_TO_32);	  long    l    =    Long.parseLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
339	[BUG]  [BUGGY]  int  l  =  Long.parseLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  int  l  =  Long.parseLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	int  l  =  Long.parseLong(tWO_TO_32);	  long    l    =    Long.parseLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
340	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  (t  >  TWO_TO_32)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  (t  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  (t  >  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    (l    >    TWO_TO_32)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
341	[BUG]  [BUGGY]  if(Long.parseLong(l))  {  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(Long.parseLong(l))  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(Long.parseLong(l))  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	49	None	replace
342	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(L  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(L  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    if(L  <  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
343	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32)    {    if(l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
344	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  System.currentTimeMillis()  -  1;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  System.currentTimeMillis()  -  1;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
345	[BUG]  [BUGGY]  int  l  =  System.currentTimeMillis();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  int  l  =  System.currentTimeMillis();  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	int  l  =  System.currentTimeMillis();	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
346	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(L  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(L  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
347	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  if(l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    if(l  >=  TWO_TO_32  ||  l  >=  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
348	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(l  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(l  +  1);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
349	[BUG]  [BUGGY]  long  l  =  Long.parseLong(TimeZipLong.valueOf(l));  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(TimeZipLong.valueOf(l));  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(TimeZipLong.valueOf(l));	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
350	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l,  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(l,  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(l,  TWO_TO_32);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
351	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l  +  TWO_TO_32);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  Long.parseLong(l  +  TWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  Long.parseLong(l  +  TWO_TO_32);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
352	[BUG]  [BUGGY]  int  l  =  ZipShort.getLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  int  l  =  ZipShort.getLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	int  l  =  ZipShort.getLong(tWO_TO_32);	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
353	[BUG]  [BUGGY]  short  l  =  ZipShort.getLong(tWO_TO_32);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  short  l  =  ZipShort.getLong(tWO_TO_32);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	short  l  =  ZipShort.getLong(tWO_TO_32);	  long    l    =    ZipShort.getLong(tWO_TO_32);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
354	[BUG]  [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_SIZE)  {  [CE]  cannot  find  symbol  TWO_TO_SIZE  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_SIZE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32  ||  l  >  TWO_TO_SIZE)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_MAX_VALUE)    {    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_SIZE	58	None	replace
355	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  If(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
356	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  <  +  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  <  +  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  If(l  <  +  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
357	[BUG]  [BUGGY]  if(L  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(L  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(L  <  TWO_TO_32)  {  if(l  >  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
358	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(!(l  <  TWO_TO_32  ||  l  >  TWO_TO_32))  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(!(l  <  TWO_TO_32  ||  l  >  TWO_TO_32))  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(L    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	52	1	replace
359	[BUG]  [BUGGY]  if(!(l  <  TWO_TO_32  ||  l  >  TWO_TO_32))  {  [FE]  AssertionError  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(!(l  <  TWO_TO_32  ||  l  >  TWO_TO_32))  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(!(l  <  TWO_TO_32  ||  l  >  TWO_TO_32))  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(L    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	52	1	replace
360	[BUG]  [BUGGY]  if(!(0  <  =  l  &&  l  <  =  TWO_TO_32))  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(!(0  <  =  l  &&  l  <  =  TWO_TO_32))  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(!(0  <  =  l  &&  l  <  =  TWO_TO_32))  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(L    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
361	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  <  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  <  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  if(l  >  TWO_TO_32)  <  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    <    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
362	[BUG]  [BUGGY]  if(tWO_TO_32  <  TWO_TO_64  ||  l  >  TWO_TO_32)  {  [CE]  cannot  find  symbol  tWO_TO_32  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(tWO_TO_32  <  TWO_TO_64  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(tWO_TO_32  <  TWO_TO_64  ||  l  >  TWO_TO_32)  {	  if(L    <    TWO_TO_32    ||    l    >    TWO_TO_64)    {    	non-compiled	[CE]  cannot  find  symbol  tWO_TO_32	54	None	replace
363	[BUG]  [BUGGY]  long  l  =  getTime(l)-  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(l)-  1;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(l)-  1;	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
364	[BUG]  [BUGGY]  long  l  =  getTime(l  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime(l  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime(l  +  1);	  long    l    =    getTime(l);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
365	[BUG]  [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  {  TWO_TO_32)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  ==  TWO_TO_32)  {  if(l  {  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    ==    TWO_TO_32)    {    if(l  {  TWO_TO_32)  {	  	non-compiled	[CE]  ')'  expected	41	None	add
366	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
367	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	32	4	replace
368	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  }  [FE]  IllegalArgumentException  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)  {  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	compilable	  [FE]  IllegalArgumentException  	32	4	replace
369	[BUG]  [BUGGY]  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    {    }    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
370	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in    signed  32  bit  integer:   "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l        >        TWO_TO_32)        {        if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in      signed  32  bit  integer:   "  +  l);  }	  	compilable	  [FE]  AssertionError  	30	1	add
371	[BUG]  [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in    signed  32  bit  integer:   "  +  l);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l    >    TWO_TO_32)    {    if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in    signed  32  bit  integer:   "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l        >        TWO_TO_32)        {        if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    if(l  >  TWO_TO_32)  {  if(l  >  TWO_TO_32)  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in      signed  32  bit  integer:   "  +  l);  }	  	compilable	  [FE]  AssertionError  	30	1	add
372	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  0  ||  l  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  0  ||  l  >  0)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	51	4	replace
373	[BUG]  [BUGGY]  if(l  <  0  ||  l  >  0)  {  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  0  ||  l  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  0  ||  l  >  0)  {	  if(l    <    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	compilable	  [FE]  IllegalArgumentException  	51	4	replace
374	[BUG]  [BUGGY]  long  l  =  getTime().length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  long  l  =  getTime().length;  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	long  l  =  getTime().length;	  long    l    =    getTime();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
375	[BUG]  [BUGGY]  If(l  <  TWO_TO_32)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  If(l  <  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	If(l  <  TWO_TO_32)  {	  if(l    >    TWO_TO_32)    {    If(l    >    TWO_TO_32)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
376	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  l.getLIVE_TIME_BIT();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  l.getLIVE_TIME_BIT();  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  l.getLIVE_TIME_BIT();	  LIVE_TIME_BIT    =    ZipShort.getLIVE_TIME_BIT();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	6	3	replace
378	[BUG]  [BUGGY]  if(l  <  32  ||  l  >=  TWO_TO_32)  {  [FE]  AssertionError  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  32  ||  l  >=  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  32  ||  l  >=  TWO_TO_32)  {	  if(l    <    TWO_TO_32    ||    l    >=    TWO_TO_32)    {    	compilable	  [FE]  AssertionError  	6	3	replace
379	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  TWO_TO_32)throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  if(l    >    TWO_TO_32)    {    if(l    >    TWO_TO_32)    throw    new    IllegalArgumentException(   "X5455    timestamps    must    fit    in    a    signed    32    bit    integer:   "    +    l);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
380	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32)  {  If(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32)  {  If(l  ==  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  if(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    If(l    >=    TWO_TO_32    ||    l    >    TWO_TO_32)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
381	[BUG]  [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	LIVE_TIME_BIT  =  ZipShort.getInstance(LIVE_TIME_BIT  +  1);	  LIVE_TIME_BIT    =    ZipShort.getInstance(LIVE_TIME_BIT);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
382	[BUG]  [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  >  TWO_TO_32  ||  l  >  TWO_TO_32)  {  if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l    >    TWO_TO_32    ||    l    >    TWO_TO_32)    {    if(l  <  TWO_TO_32  ||  l  >  TWO_TO_32)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
383	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	add	if(l  <  32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	compilable	  [FE]  IllegalArgumentException  	68	4	replace
384	[BUG]  [BUGGY]  if(l  <  32  ||  l  >  32)  {  [FE]  IllegalArgumentException  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  32  ||  l  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  32  ||  l  >  32)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	compilable	  [FE]  IllegalArgumentException  	68	4	replace
385	[BUG]  [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  31)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;      [BUGGY]  if(l  <  =  TWO_TO_32  ||  l  >  31)  {  [BUGGY]      throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	530	530	1	replace	if(l  <  =  TWO_TO_32  ||  l  >  31)  {	  if(l    <    =    TWO_TO_32    ||    l    >    32)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
