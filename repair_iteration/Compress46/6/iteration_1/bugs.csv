bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  ZipLong(tWO_TO_32);  [CE]  cannot  find  symbol  tWO_TO_32  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(tWO_TO_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(tWO_TO_32);	return  new  ZipLong(l);  	non-compiled	[CE]  cannot  find  symbol  tWO_TO_32	11	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(l  +  TWO_TO_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	add	return  new  ZipLong(l  +  TWO_TO_32);	return  new  ZipLong(l);  	compilable	  [FE]  AssertionError  	11	1	replace
3	[BUG]  [BUGGY]  return  new  ZipLong(l  +  TWO_TO_32);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(l  +  TWO_TO_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(l  +  TWO_TO_32);	return  new  ZipLong(l);  	compilable	  [FE]  AssertionError  	11	1	replace
4	[BUG]  [BUGGY]  return  new  ZipLong(two_to_32);  [CE]  cannot  find  symbol  two_to_32  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(two_to_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(two_to_32);	return  new  ZipLong(l);  	non-compiled	[CE]  cannot  find  symbol  two_to_32	11	None	replace
5	[BUG]  [BUGGY]  return  new  ZipLong(two_TO_32);  [CE]  cannot  find  symbol  two_TO_32  [FE]          AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(two_TO_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(two_TO_32);	return  new  ZipLong(l);  	non-compiled	[CE]  cannot  find  symbol  two_TO_32	11	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(l  -  TWO_TO_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	add	return  new  ZipLong(l  -  TWO_TO_32);	return  new  ZipLong(l);  	compilable	  [FE]  AssertionError  	11	1	replace
7	[BUG]  [BUGGY]  return  new  ZipLong(l  -  TWO_TO_32);  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(l  -  TWO_TO_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(l  -  TWO_TO_32);	return  new  ZipLong(l);  	compilable	  [FE]  AssertionError  	11	1	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(TWO_TO_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	add	return  new  ZipLong(TWO_TO_32);	return  new  ZipLong(l);  	compilable	  [FE]  AssertionError  	11	2	replace
9	[BUG]  [BUGGY]  return  new  ZipLong(TWO_TO_32);  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(TWO_TO_32);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(TWO_TO_32);	return  new  ZipLong(l);  	compilable	  [FE]  AssertionError  	11	2	replace
10	[BUG]  [BUGGY]  return  new  ZipLong(unixTimeToZipLong(l));  [CE]  no  suitable  constructor  found  for  ZipLong(ZipLong)  [FE]                AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(unixTimeToZipLong(l));  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(unixTimeToZipLong(l));	return  new  ZipLong(l);  	non-compiled	[CE]  no  suitable  constructor  found  for  ZipLong(ZipLong)	11	None	replace
11	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]                  AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]    [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	  	return  new  ZipLong(l);  	non-compiled	[CE]  missing  return  statement	11	None	replace
12	[BUG]  [BUGGY]  return  new  ZipLong(two.longValue());  [CE]  cannot  find  symbol  two  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(two.longValue());  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(two.longValue());	return  new  ZipLong(l);  	non-compiled	[CE]  cannot  find  symbol  two	11	None	replace
13	[BUG]  [BUGGY]  return  new  ZipLong(two);  [CE]  cannot  find  symbol  two  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(two);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(two);	return  new  ZipLong(l);  	non-compiled	[CE]  cannot  find  symbol  two	11	None	replace
14	[BUG]  [BUGGY]  return  new  ZipLong(two,  l);  [CE]  cannot  find  symbol  two  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(two,  l);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(two,  l);	return  new  ZipLong(l);  	non-compiled	[CE]  cannot  find  symbol  two	11	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(l  +  1);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	add	return  new  ZipLong(l  +  1);	return  new  ZipLong(l);  	compilable	  [FE]  AssertionError  	11	2	replace
16	[BUG]  [BUGGY]  return  new  ZipLong(l  +  1);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(l  +  1);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(l  +  1);	return  new  ZipLong(l);  	compilable	  [FE]  AssertionError  	11	2	replace
17	[BUG]  [BUGGY]  return  new  ZipLong(unixTime);  [CE]  cannot  find  symbol  unixTime  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(unixTime);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(unixTime);	return  new  ZipLong(l);  	non-compiled	[CE]  cannot  find  symbol  unixTime	11	None	replace
18	[BUG]  [BUGGY]  return  new  ZipLong(l  +  1,  l);  [CE]  no  suitable  constructor  found  for  ZipLong(long,long)  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  final  long  TWO_TO_32  =  0x100000000L;  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  [BUGGY]  return  new  ZipLong(l  +  1,  l);  [BUGGY]  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	533	533	1	replace	return  new  ZipLong(l  +  1,  l);	return  new  ZipLong(l);  	non-compiled	[CE]  no  suitable  constructor  found  for  ZipLong(long,long)	11	None	replace
