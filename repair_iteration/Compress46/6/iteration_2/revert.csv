projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,t);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(t,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(tWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(accessTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);newZipLong(TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,TWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(t.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(tWO_TO_32,l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(tWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);newZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl+TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=unixTime(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);newZipLong(l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);longl-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);l-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);Longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);Longl-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_To_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);newZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,unixTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWorstTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(bit0_modifyTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_toZipLong.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}else{returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWEEK_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);returnnewZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=unixTimeToZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_toZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.DEFAULT_TIME_BIT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.UTF8));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(twoTWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tempTime.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);returnnewZipLong(l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);long-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWorst,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=getTime().longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);((ZipLong)l).longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=getTime(l);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);returnnewZipLong(TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_timeToZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455Timestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit0_modifyTimePresent){if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}else{returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bucket<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533vice(l){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bucket<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32/1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_TO_32/1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32/1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+l/1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=Long.parseLong(two_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=Long.parseLong(two_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,tWorst);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWorstamp,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);newZipLong(l-2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);longl-2;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);((ZipLong)l-2).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);l-2;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);((ZipLong)l).setLong(l-2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(two_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(l,X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(l,X5455_Timestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);}else{returnnewZipLong(l-TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(l-TWO_TO_32);}else{returnnewZipLong(l-TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(l-TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l-TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(two_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(tWO_TO_32),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(tWO_TO_32+l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(two_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(two_to_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(l<TWO_TO_32){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533vice(l){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533vice(l){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidTimestamp("X5455timestampsmustmatchinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bucket<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,ACCESS_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,TWO_TO_32,X5455Timestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,ACCESS_TIME_BIT,X5455Timestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455Timestamp.DEFAULT_TIME_BIT,ACCESS_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455Timestamp.DEFAULT_TIME_BIT,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,ACCESS_TIME_BIT.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,ACCESS_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,accessTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(tWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+16);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=newZipLong(l-TWO_TO_32);L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533L-=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=l-TWO_TO_32;L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=Long.parseLong(tWO_TO_32);L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTime(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=unixTime(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=unixTime(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=unixTime(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533intl=unixTime(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=unixTime(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,getTime());longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533result=newZipLong(TWO_TO_32);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32||l>TWO_TO_32){if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l+10+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);newZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);newZipLong(l+TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l+TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533vice(l){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:",+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Thread.currentThread().getContextClassLoader().reportError("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32){thrownewIllegalArgumentException("Y5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl-=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);Longl-=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl-=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);Longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(t.longValue(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(Timestamp.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(t.longValue(),TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533long-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);long-=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+1);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=getTime(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=getTime(two_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=getTime(two_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.HEADER_ID));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.DECEMBER_TIME_BIT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.CENTER_TIME_BIT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.DEFAULT_TIME_BIT),ACCESS_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.BIT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32.longValue(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_TO_32.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tw_TO_32.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(accessTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l,l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);longl-=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32)+1;longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);l-=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);l*TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l-=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);l-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);l-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime().longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime().longValue();returnnewZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime().longValue();returnnewZipLong(l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533finallongl=getTime().longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=getTime().longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime().longValue();returnnewZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=getTime().longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,createTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,accessTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,getTime(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455_Timestamp,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32||l>=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32-2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_TO_32-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32+1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32,l+1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tempTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l,t));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(t,l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533result=newZipLong(TWO_TO_32);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32||l>TWO_TO_32){if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_createTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit2_createTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,ACCESS_TIME_BIT,TWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,l,TWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,ACTIVE_TIME_BIT,TWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,l),TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,TWO_TO_32),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,TWO_TO_32,l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_createTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit2_createTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);newZipLong(l-TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);l-TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);longl-TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);longl-TWO_TO_32+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);l-TWO_TO_32+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);L-TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);long-TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tw_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(ZipShort.valueOf(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l+tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+tw_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l+1,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);newZipLong(l+10+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);l+10+TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);l+10+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);longl=getTime(l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);newZipLong(TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l>=TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l>=TWO_TO_32){if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit1_accessTimePresent){returnnewZipLong(TWO_TO_32);if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}else{returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}else{returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}else{returnnewZipLong(TWO
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,t);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,tw_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1,l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32/1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l-TWO_TO_32);long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=newZipLong(l-TWO_TO_32);long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l);long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533result=newZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533result=newZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=newZipLong(l+1);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=newZipLong(l+1);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,tWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong,l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);newZipLong(l/1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);((ZipLong)l/1).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);Longl/1=newZipLong(l/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);((ZipLong)l/2).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_Timestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_DateTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455Short);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533((ZipLong)l).longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533((ZipLong)l).longValue();returnnewZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=newZipLong(l+1);((ZipLong)l).longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);}else{returnnewZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533((ZipLong)l).longValue();returnnewZipLong(tWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);newZipLong(l+10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);finalZipLongl=newZipLong(l+10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);longl=createTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);newZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);((ZipLong)l).setLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l,tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l),tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l);newZipLong(l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l-TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l*TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);newZipLong(l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);newZipLong(l/TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);longl/TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);Longl/TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);((ZipLong)l/TWO_TO_32).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);l/TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);((ZipLong)l/TWO_TO_32).doubleValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);((ZipLong)l/TWO_TO_32).setLength(0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);((ZipLong)l/TWO_TO_32).longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1,l.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455_Timestamp.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32+1,l.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,TWO_TO_32.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l.intValue(),TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(L,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32,l,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);newZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);finalZipLongl=newZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);((ZipLong)l).setLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);longl=createTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32,l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(ZipLong.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime(l);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime(l);returnnewZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=getTime(l);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533finallongl=getTime(l);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=getTime(l);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=getTime(l);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=getTime(l);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nisip_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bit0_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533attern("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidTimePresent("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1,unixTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1,TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l-1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l-1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l+1,TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32+1,l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,TWO_TO_32,unixTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32+1,l+1,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10*TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*10+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/10+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,accessTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,createTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,this.accessTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,DATE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);longl+18;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);newZipLong(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);Longl+18;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);((ZipLong)l+18).unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);newZipLong(l*TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl*TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l+1);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(tWO_TO_32),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(tWO_TO_32,l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(tWO_TO_32+l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl+=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl+=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=l+TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533finallongl+=TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l+TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);(ZipLong)unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);longl=unixTimeToZipLong(l);return(ZipLong)unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);(ZipLong)unixTimeToZipLong(l);return(ZipLong)unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);(ZipLong)unixTimeToZipLong(l);unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);longl=unixTimeToZipLong(l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_createTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit2_createTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533result=newZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2*TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWorstTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWorstTime.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533finallongl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533intl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit1_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=newZipLong(l+TWO_TO_32);if(bit1_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit2_createTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTime(l+TWO_TO_32);if(bit1_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit1_accessTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533result=newZipLong(TWO_TO_32);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,X5455_Timestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,c);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime.longValue(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,unixTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l,this.accessTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l==TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){if(bit1_accessTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_accessTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}else{returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit1_accessTimePresent){returnnewZipLong(l+TWO_TO_32);}else{returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_accessTimePresent){returnnewZipLong(l+TWO_TO_32);}else{returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_accessTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}else{unixTimeToZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);newZipLong(l+32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl=System.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl+32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl=Long.parseLong(l);returnnewZipLong(l+32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533pendingThan<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32||l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);newZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);}else{unixTimeToZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l+1);}else{unixTimeToZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l+1);}else{returnnewZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);intl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nisip_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533bit0_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidTimePresent("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533attern("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32||l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32||l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533hingeger<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(two_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(Long.valueOf(tWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(l,X5455_ExtendedTimestamp.class);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2,unixTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+2,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+2,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l+2,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2,l,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,tWO_TO_32+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l+1,t);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong,l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l+1,tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l==TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>=TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.class));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,l),X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.DEFAULT_TIME_BIT),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,tWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,t));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,tw_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(two_TO_32,l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,TWO_TO_32.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(Long.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_accessTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(t0_accessTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l.length,l.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1,l.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,l.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,TWO_TO_32,l.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l.length,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l.length-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=System.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=getTime(l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=getLocalMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}else{returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32)returnnewZipLong(l+TWO_TO_32);if(l>TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}else{returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,ACCESS_TIME_BIT,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,unixTime,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime,l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l.longValue(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l.longValue(),TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,TWO_TO_32.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(two_to_32,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(two_TO_32,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,getTime().longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit1_accessTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=newZipLong(TWO_TO_32);if(bit1_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=newZipLong(TWO_TO_32);if(bit2_createTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=newZipLong(TWO_TO_32);if(bit1_accessTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=newZipLong(TWO_TO_32);if(bit1_createTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l>=TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l>=TWO_TO_32){if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l>=TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,accessTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,this.accessTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,tw_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,ACCESS_TIME_BIT,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l+1,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);longl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,0);longl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533finallongl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returncreateTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=Long.parseLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.UTF8),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.TWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.US));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.LEFT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l)+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l),X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l),TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);newZipLong(TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);((ZipLong)l).longValue();returnnewZipLong(TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);longl=getTime().longValue();returnnewZipLong(TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);longl=Long.parseLong(tWO_TO_32);returnnewZipLong(TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.DEFAULT_TIME_BIT,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.DEFAULT_TIME_BIT,ACCESS_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.DECEMBER_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.CENTER_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.VALUE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);newZipLong(l-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=getLongValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=getLocalMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);l-1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl-1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=createTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533Longl=unixTimeToZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l+100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);Longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l.longValue(),TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,unixTime.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l.longValue(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,unixTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+6,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+8,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533result=newZipLong(TWO_TO_32);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533result=newZipLong(TWO_TO_32);l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&l>TWO_TO_32){if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbein
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l,X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l,X5455_ExtendedTimestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWEEK_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);longl-TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);longl-TWO_TO_32;}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);longl-TWO_TO_32;}else{unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l)+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);newZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);newZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,unixTime.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,this.timeToZipLong.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:",+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.SHORT_TIME_BIT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.INTEGER_TIME_BIT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.MINUTE_TIME_BIT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.VALUE_TIME_BIT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:",+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustnotbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:".+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:",+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){l=l.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);long-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l-TWO_TO_32);long-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);if(bit1_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,getTime().longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32-1);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeAdd(l,TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeMultiply(l){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){l=l+TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,createTime.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,X5455_ExtendedTimestamp.class);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,x.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,t.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit1_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+4,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,0);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,X5455_Timestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,X5455_Timestamp.UTF8);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,X5455_ExtendedTimestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,X5455_ExtendedTimestamp.UTF8);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);LIVE_TIME_BIT=ZipLong.getInstance(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(l<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeAdd(l,TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(bit1_accessTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);((ZipLong)l).unixTimeToZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);((ZipLong)l).unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455_ExtendedTimestamp,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:",+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=createTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=getTime().getLongValue(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.DEFAULT_TIME_BIT,TWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.NUMBER_INT,TWO_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,tWO_TO_32.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);((ZipLong)l).unixTimeToZipLong(tWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);((ZipLong)l).unixTimeToZipLong(TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);longl=System.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);((ZipLong)l).unixTimeToZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+2);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(twoTimeToZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(twoJavaTimeToZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbein
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=System.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,JSON_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);((ZipLong)l).unixTimeToZipLong(l/1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);((ZipLong)l).unixTimeToZipLong(l/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);((ZipLong)l/2).unixTimeToZipLong();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455_Timestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,two_toZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,unixTimeToZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32/TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32*TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32*l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,tw_to_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,X5455Timestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);((ZipLong)l/TWO_TO_32).unixTime;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit1_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWEEK_TO_32+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmust
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);if(l<TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);longl=createTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);Longl-2;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TimeUtils.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(t.longValue()+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_toZipLong+1);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two+1);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(getTimeToZipLong(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l),X5455_Timestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(createTimeToZipLong(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,t+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32,l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);if(bit1_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);if(l>=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(tWO);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(two_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533intl=getTime(l);returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(two_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(t);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*2,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455Timestamp.UTF8);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455Timestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455Timestamp.NaN);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_UTF8);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);UnsupportedTimestamp.this.unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=getTime().longValue();unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);UnsupportedTimestamp.this.unixTimeToZipLong(l);unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);UnsupportedTimestampl=getTimestamp(Long.parseLong(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);longl=getTime().longValue();unixTimeToZipLong(l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeMultiply(l){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=0){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(Long.valueOf(l)+TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(Long.valueOf(l)){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nisip_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){l=newZipLong(TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){l=newZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(tWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(t+1,l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1,TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.UTF8);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.class);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.NUMBER_INT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.DEFAULT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,tw_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,tw_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit0_modifyTimePresent=newZipLong(TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=newZipLong(TWO_TO_32);if(bit2_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=newZipLong(TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl+TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl+TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);longl+TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=l*TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l-TWO_TO_32);L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=newZipLong(l+TWO_TO_32);if(bit2_createTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit1_accessTimePresent=unixTimeToZipLong(l+TWO_TO_32);if(bit2_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit0_modifyTimePresent=newZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}else{unixTimeToZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_long);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit1_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);if(bit1_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);newZipLong(l+TWO_TO_32,l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l+TWO_TO_32,l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(toZipLong(l,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,TYPE_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32&&bit1_accessTimePresent){if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(tWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(two_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32-TWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,long);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);newZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(TWO_TO_32);newZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);newZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);newZipLong(TWO_TO_32);}else{unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(TWO_TO_32);newZipLong(TWO_TO_32);}else{unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);longl=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);longl=unixTimeToZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nulll=unixTimeToZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=unixTimeToZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=unixTimeToZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.US_ASCII));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.UTF8)));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.DEFAULT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=unixTimeToZipLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455Timestamp.SHORT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455Timestamp.BIT_DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455Timestamp.DEFAULT_TIME_BIT)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,createTime.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_toZipLong,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_modifyTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_toZipLong,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(twoFractionTimeToZipLong,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,ZERO);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=0){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(Long.valueOf(l)<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(Long.valueOf(l)){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=this.unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);longl=(long)unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);longl=getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);longl=getTime(l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);longl=UnsupportedTime.getInstance(Long.parseLong(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);longl=createTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);longl=getTime().getLongValue(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.DEFAULT_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.US_ASCII);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:",+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=Long.parseLong(tWO_TO_32,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+t);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+tw_to_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimetoZipLong(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);Longl-TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);Longl-TWO_TO_32;}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);Longl-TWO_TO_32;}else{unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}else{returnnewZipLong(TWO
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}else{returnnewZipLong(TWO_TO
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);longl-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=false){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:",+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);longl=unixTime(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);longl=createTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32);Longl-TWO_TO_32+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);Longl-1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=TWO_TO_32){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeMultiply(l){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=0){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533safeThan<=32){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_TO_32,l.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,t+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32,l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);}else{((ZipLong)l).longValue();returnnewZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+1);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1,l);longl=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+11+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533shortl=getTime().longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533nisip_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=getTime(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);l-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);long-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);returnnewZipLong(TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32+1);}else{returnnewZipLong(TWO_TO_32+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TWO_TO_32+1);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,getTime().longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);returnnewZipLong(l+10+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(l+10+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);if(bit0_modifyTimePresent){if(bit0_modifyTimePresent){returnnewZipLong(l+10+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);if(bit0_modifyTimePresent){if(bit1_accessTimePresent){returnnewZipLong(l+10+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(l+10+TWO_TO_32);}else{returnnewZipLong(l+10+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);if(bit0_modifyTimePresent){if(bit2_createTimePresent){returnnewZipLong(l+10+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10+TWO_TO_32);if(bit0_modifyTimePresent){if(bit1_createTimePresent){returnnewZipLong(l+10+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_accessTimePresent);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533triesToZipLong(l){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533[Delete]
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZip("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZipException("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZip(l,X5455Timestamp.class){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);((ZipLong)l).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){returnnewZipLong(l+1);((ZipLong)l).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);}else{((ZipLong)l).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){returnnewZipLong(l+1);}else{((ZipLong)l).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);returnnewZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+3);((ZipLong)l).longValue();returnnewZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=getTime(l);returnnewZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,TYPE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+31);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l-TWO_TO_32,l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);longl-=TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32)returnnewZipLong(l-TWO_TO_32);longl-=TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);longl-=TWO_TO_32;}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);longl-=TWO_TO_32;}else{returnnewZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);if(l<TWO_TO_32||l>TWO_TO_32){returnunixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);if(l<=TWO_TO_32){if(bit0_modifyTimePresent){returnunixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);if(l<TWO_TO_32){returnunixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);returnnewZipLong(l+32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);if(l<=32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);if(l<=32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+32);if(l<=32){returnnewZipLong(l+32);}else{returnnewZipLong(l+32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32);longl+=TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l+TWO_TO_32);longl+=TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32);longl+TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32);longl+=TWO_TO_32;}else{thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+TWO_TO_32);longl+=TWO_TO_32;}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455Timestamp.TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,X5455Timestamp.CENTER_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32);longl=unixTimeToZipLong(l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533triesToZipLong(l){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533triesToZipLong(l,TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZipException("X5455timestampsmustmatchinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZip("X5455timestampsmustmatchinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);((ZipLong)l).longValue();returnnewZipLong(l-2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);longl=getTime().longValue();returnnewZipLong(l-2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-2);returnnewZipLong(l-2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,unixTime.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two+1,l.intValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);returnnewZipLong(l/TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(l/TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(l/TWO_TO_32);}else{returnnewZipLong(l/TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);((ZipLong)l/TWO_TO_32).unixTime=newZipLong(l/TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);((ZipLong)l/TWO_TO_32).setLong(l/TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longl=unixTimeToZipLong(l+8);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(l,X5455Timestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnLong.valueOf(l,X5455_Timestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(twoToZipLong,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(twoFractionTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533mutableTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);returnnewZipLong(l-TWO_TO_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);((ZipLong)l).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32+1);longl=System.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533triesToZipLong(l){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:",+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,this.accessTime,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l+32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);longl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1);longl=unixTime.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);returnnewZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=getTime().longValue();returnnewZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);((ZipLong)l).longValue();returnnewZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+2);longl=getTime(l);returnnewZipLong(l+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32/l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533parent<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533oricaror(l){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+1);longl=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1);longl=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533intl=unixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+1);longl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533l=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533intl=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533newZipLong(l+32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){returnnewZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);}else{returnnewZipLong(l+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){returnnewZipLong(l-TWO_TO_32);}else{returnnewZipLong(l-TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,bit1_accessTimePresent);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_SecondTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.SHORT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,X5455Timestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,unixTime,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/2,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/2,l+1,TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32+1,l,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,l,ACCESS_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533intl=getTime().longValue();returnnewZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32*1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(tWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533longbit0_modifyTimePresent=unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);if(l<TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.NUMBER_INT,l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32,l+1);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32+1,l);longl=Long.parseLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZipException("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZip("X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZip(l,X5455Timestamp.class){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidZip(l,X5455timestampsmustbeinasigned32bitinteger:"+l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);return(ZipLong)unixTimeToZipLong(l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);if(unixTimeToZipLong(l)==ZipLong.NaN){return(ZipLong)unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);if(unixTimeToZipLong(l)==null){return(ZipLong)unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);if(unixTimeToZipLong(l)==ZipLong.DEFAULT){return(ZipLong)unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);if(unixTimeToZipLong(l)==ZipShort.NaN){return(ZipLong)unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533return(ZipLong)unixTimeToZipLong(l);if(unixTimeToZipLong(l)!=null){return(ZipLong)unixTimeToZipLong(l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,X5455_ExtendedTimestamp.NUMBER_INT));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,l),X5455_ExtendedTimestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(two_to_32+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TimeZipLong.valueOf(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(tWO_TO_32.longValue()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,bit1_accessTimePresent);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32;}else{returnnewZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){returnnewZipLong(l+TWO_TO_32);}else{returnnewZipLong(l+TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l.longValue()-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l);longl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533intl=Long.parseLong(tWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533mutableTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_accessTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);returnnewZipLong(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);((ZipLong)l).longValue();returnnewZipLong(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);((ZipLong)l+18).unixTimeToZipLong(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+18);((ZipLong)l).setLong(l+18);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,two_TO_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l,two_to_32));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){returnnewZipLong(l+1);}else{returnnewZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime,toZipLong(l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+1,this.unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l+1);}else{returnunixTimeToZipLong(l+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32)+1;L-TWO_TO_32;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-18,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32),getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32)+getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);longl-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/TWO_TO_32);long-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32,l=getTime().longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);returnnewZipLong(l*TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(l*TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);if(bit0_modifyTimePresent){if(bit0_modifyTimePresent){returnnewZipLong(l*TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*TWO_TO_32);if(bit0_modifyTimePresent){returnnewZipLong(l*TWO_TO_32);}else{returnnewZipLong(l*TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTime,l+1,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){bit0_modifyTimePresent=newZipLong(l+TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533while(l<TWO_TO_32){bit0_modifyTimePresent=newZipLong(l+TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533triesToZipLong(l){thrownewIllegalArgumentException("Timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533lendemain(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533oricaror(l){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,X5455_ExtendedTimestamp.DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnunixTimeToZipLong(l,this.accessTime.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l*DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(l-TWO_TO_32);Longl-TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(l-TWO_TO_32);Longl-=TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(l-TWO_TO_32);Longl-=TWO_TO_32;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-TWO_TO_32,Longl-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l,X5455_Timestamps);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);((ZipLong)l).longValue();returnnewZipLong(l-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=getTime().longValue();returnnewZipLong(l-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=getTime().getLongValue();returnnewZipLong(l-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l-1);longl=getTime(l);returnnewZipLong(l-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){if(bit0_modifyTimePresent){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnZipLong.valueOf(l-TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{returnnewZipLong(tWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l==TWO_TO_32){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l>TWO_TO_32){returnnewZipLong(TWO_TO_32);}else{returnnewZipLong(tWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(TimeUtils.currentTimeMillis(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l);if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);((ZipLong)l/1).doubleValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l/1);ZipLongl/1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<=TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}else{returnnewZipLong(TWO_TO_32);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(l<TWO_TO_32||l>TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustfitinasigned32bitinteger:"+l);}else{returnnewZipLong(TWO_TO
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);returnnewZipLong(l+10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);((ZipLong)l).longValue();returnnewZipLong(l+10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);longl=getTime().longValue();returnnewZipLong(l+10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+10);longl=getTime(l);returnnewZipLong(l+10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.TWO_TO_32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(unixTimeToZipLong(l),X5455_ExtendedTimestamp.DEFAULT_TIME_BIT+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(twoToZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533if(bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533returnnewZipLong(l+TWO_TO_32)&&bit0_modifyTimePresent){thrownewIllegalArgumentException("X5455timestampsmustmatchinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533triesToZipLong(l){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533triesToZipLong(l,TWO_TO_32){thrownewIllegalArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java533aughtInvalidArgumentException("X5455timestampsmustbeinasigned32bitinteger:"+l);
