bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  cearcăToZipLong(d.getTime()  /  1000);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  cearcăToZipLong(d.getTime()  /  1000);  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	cearcăToZipLong(d.getTime()  /  1000);	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
2	[BUG]  [BUGGY]  while(d!=  null  &&  d.getTime()  >  0)  {  if  (d  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  while(d!=  null  &&  d.getTime()  >  0)  {  if  (d  ==  null)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	while(d!=  null  &&  d.getTime()  >  0)  {  if  (d  ==  null)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  while(d!=  null  &&  d.getTime()  <  1000)  {  if  (d  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  while(d!=  null  &&  d.getTime()  <  1000)  {  if  (d  ==  null)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	while(d!=  null  &&  d.getTime()  <  1000)  {  if  (d  ==  null)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  while(d!=  null)  {  if(d  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  while(d!=  null)  {  if(d  ==  null)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	while(d!=  null)  {  if(d  ==  null)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  while(d!=  null)  {  if(d.getTime()  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  while(d!=  null)  {  if(d.getTime()  ==  null)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	while(d!=  null)  {  if(d.getTime()  ==  null)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  ||  d  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  ||  d  ==  null)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	||  d  ==  null)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]    [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	add	  	if  (d  ==  null)  {  return  null;  }  	compilable	  [FE]  AssertionError  	3	2	replace
8	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]                AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]    [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	  	if  (d  ==  null)  {  return  null;  }  	compilable	  [FE]  AssertionError  	3	2	replace
9	[BUG]  [BUGGY]  if  (d  ==  null)  {  return  this;  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if  (d  ==  null)  {  return  this;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	if  (d  ==  null)  {  return  this;  }	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if(d!=  null)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	add	if(d!=  null)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	compilable	  [FE]  AssertionError  	3	4	replace
11	[BUG]  [BUGGY]  if(d!=  null)  {  return  null;  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if(d!=  null)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	if(d!=  null)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	compilable	  [FE]  AssertionError  	3	4	replace
12	[BUG]  [BUGGY]  this.dateToZipLong(d);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  this.dateToZipLong(d);  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	this.dateToZipLong(d);	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if(d  ==  null  ||  d.getTime()  <  100)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	add	if(d  ==  null  ||  d.getTime()  <  100)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	compilable	  [FE]  AssertionError  	3	1	replace
14	[BUG]  [BUGGY]  if(d  ==  null  ||  d.getTime()  <  100)  {  return  null;  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if(d  ==  null  ||  d.getTime()  <  100)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	if(d  ==  null  ||  d.getTime()  <  100)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	compilable	  [FE]  AssertionError  	3	1	replace
15	[BUG]  [BUGGY]  if(d  ==  null  ||  d.getTime()  <  =  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if(d  ==  null  ||  d.getTime()  <  =  0)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	if(d  ==  null  ||  d.getTime()  <  =  0)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if(d  ==  null  ||  d.getTime()  <  1000)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	add	if(d  ==  null  ||  d.getTime()  <  1000)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	compilable	  [FE]  AssertionError  	3	1	replace
17	[BUG]  [BUGGY]  if(d  ==  null  ||  d.getTime()  <  1000)  {  return  null;  }  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if(d  ==  null  ||  d.getTime()  <  1000)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	if(d  ==  null  ||  d.getTime()  <  1000)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	compilable	  [FE]  AssertionError  	3	1	replace
18	[BUG]  [BUGGY]  if(d  ==  null  ||  d.getTime()!=  null)  {  return  null;  }  [CE]  incomparable  types:  long  and  <null>  [FE]          AssertionError  [CONTEXT]  private  static  ZipLong  dateToZipLong(final  Date  d)  {  [BUGGY]  if(d  ==  null  ||  d.getTime()!=  null)  {  return  null;  }  [BUGGY]    return  unixTimeToZipLong(d.getTime()  /  1000);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  dateToZipLong  [RETURN_TYPE]  ZipLong  Date  d  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  serialVersionUID  Date  d  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	523	523	1	replace	if(d  ==  null  ||  d.getTime()!=  null)  {  return  null;  }	if  (d  ==  null)  {  return  null;  }  	non-compiled	[CE]  incomparable  types:  long  and  <null>	3	None	replace
