bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  0x100000000;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000;	final  long  TWO_TO_32  =  0x100000000L;  	non-compiled	[CE]  integer  number  too  large:  100000000	7	None	replace
2	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L;	final  long  TWO_TO_32  =  0x100000000L;  	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  +  1;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  AssertionError  	7	1	replace
4	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  +  1;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  AssertionError  	7	1	replace
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  l;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  IllegalArgumentException  	7	4	replace
6	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  [FE]  IllegalArgumentException  [FE]          AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  l;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  IllegalArgumentException  	7	4	replace
7	[BUG]  [BUGGY]  final  long  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  l  =  0x100000000L;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L;	final  long  TWO_TO_32  =  0x100000000L;  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	7	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  +  2;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  AssertionError  	7	1	replace
9	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  +  2;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  AssertionError  	7	1	replace
10	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  TWO_TO_32  [FE]                AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]    [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	  	final  long  TWO_TO_32  =  0x100000000L;  	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	7	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  AssertionError  	7	1	replace
12	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  AssertionError  	7	1	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  AssertionError  	7	1	replace
14	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L;	final  long  TWO_TO_32  =  0x100000000L;  	compilable	  [FE]  AssertionError  	7	1	replace
15	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  static  ZipLong  unixTimeToZipLong(long  l)  {  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]  if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:   "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L;	final  long  TWO_TO_32  =  0x100000000L;  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
